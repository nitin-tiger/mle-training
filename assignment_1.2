Script started on 2022-02-17 14:22:03-06:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="123" LINES="30"]
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ 
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ 
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ ls
README.md  my_git_session  my_unix_session  test_branck
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ ssh-keygen -t ed25519 -C '[K"nitin-tiget[Kr@github.com"
Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/nitin/.ssh/id_ed25519): 
Created directory '/home/nitin/.ssh'.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/nitin/.ssh/id_ed25519
Your public key has been saved in /home/nitin/.ssh/id_ed25519.pub
The key fingerprint is:
SHA256:FTDA31A9heGkdoygoVRhfEywXQjfEli9AKHTFdf5pgY nitin-tiger@github.com
The key's randomart image is:
+--[ED25519 256]--+
|    .+@%X*=oo=.  |
|   . =+B*B.B*    |
|    + +o++*.+o   |
|     .  .+E.  o  |
|        S  . o   |
|            o    |
|           .     |
|                 |
|                 |
+----[SHA256]-----+
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ eval "$(ssh-agent -s)"
Agent pid 957
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ ssh-add ~/.ssh/id_ed25519
Identity added: /home/nitin/.ssh/id_ed25519 (nitin-tiger@github.com)
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ cat ~/.ssh/id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKm3+vTVJ0WSoJKGkI1iTIGZxRIU7+tBrxXFLQQ/QyVG nitin-tiger@github.com
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ gh auth login

Command 'gh' not found, but can be installed with:

sudo apt install gitsome

(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ conda install gh
Collecting package metadata (current_repodata.json): - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / done
Solving environment: \ failed with initial frozen solve. Retrying with flexible solve.
Collecting package metadata (repodata.json): / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | done
Solving environment: - failed with initial frozen solve. Retrying with flexible solve.

PackagesNotFoundError: The following packages are not available from current channels:

  - gh

Current channels:

  - https://repo.anaconda.com/pkgs/main/linux-64
  - https://repo.anaconda.com/pkgs/main/noarch
  - https://repo.anaconda.com/pkgs/r/linux-64
  - https://repo.anaconda.com/pkgs/r/noarch

To search for alternate channels that may provide the conda package you're
looking for, navigate to

    https://anaconda.org

and use the search bar at the top of the page.


(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ conda activate MLOPS
Could not find conda environment: MLOPS
You can list all discoverable environments with `conda info --envs`.

(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ conda list env
# packages in environment at /home/nitin/miniconda3:
#
# Name                    Version                   Build  Channel
(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ conda env list
# conda environments:
#
base                  *  /home/nitin/miniconda3
mlops                    /home/nitin/miniconda3/envs/mlops

(base) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ conda activate mlpo[K[Kops
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ conda install gh --channel conda-forge
Collecting package metadata (current_repodata.json): - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | done
Solving environment: - done


==> WARNING: A newer version of conda exists. <==
  current version: 4.10.3
  latest version: 4.11.0

Please update conda by running

    $ conda update -n base -c defaults conda



## Package Plan ##

  environment location: /home/nitin/miniconda3/envs/mlops

  added / updated specs:
    - gh


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    ca-certificates-2021.10.8  |       ha878542_0         139 KB  conda-forge
    gh-2.5.1                   |       ha8f183a_0        11.0 MB  conda-forge
    ------------------------------------------------------------
                                           Total:        11.2 MB

The following NEW packages will be INSTALLED:

  gh                 conda-forge/linux-64::gh-2.5.1-ha8f183a_0

The following packages will be SUPERSEDED by a higher-priority channel:

  ca-certificates    pkgs/main::ca-certificates-2021.10.26~ --> conda-forge::ca-certificates-2021.10.8-ha878542_0


Proceed ([y]/n)? y


Downloading and Extracting Packages
ca-certificates-2021 | 139 KB    |                                                                                  |   0% ca-certificates-2021 | 139 KB    | #########2                                                                       |  12% ca-certificates-2021 | 139 KB    | ################################################################################ | 100% 
gh-2.5.1             | 11.0 MB   |                                                                                  |   0% gh-2.5.1             | 11.0 MB   | ###6                                                                             |   5% gh-2.5.1             | 11.0 MB   | #############7                                                                   |  17% gh-2.5.1             | 11.0 MB   | #####################                                                            |  26% gh-2.5.1             | 11.0 MB   | ##############################8                                                  |  39% gh-2.5.1             | 11.0 MB   | ######################################9                                          |  49% gh-2.5.1             | 11.0 MB   | ###############################################2                                 |  59% gh-2.5.1             | 11.0 MB   | ##########################################################5                      |  73% gh-2.5.1             | 11.0 MB   | ###################################################################9             |  85% gh-2.5.1             | 11.0 MB   | #############################################################################1   |  96% gh-2.5.1             | 11.0 MB   | ################################################################################ | 100% 
Preparing transaction: | done
Verifying transaction: - done
Executing transaction: | done
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ gh auth login
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> GitHub.com[0m
[0;39m  GitHub Enterprise Server[0m
7[1A[0G[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;39m  GitHub.com[0m
[0;1;36m> GitHub Enterprise Server[0m
7[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> GitHub.com[0m
[0;39m  GitHub Enterprise Server[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m[0;36m GitHub.com[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> HTTPS[0m
[0;39m  SSH[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m[0;36m HTTPS[0m
[0G[2K[0;1;92m? [0m[0;1;99mAuthenticate Git with your GitHub credentials? [0m[38;5;242m(Y/n) [0m[?25l7[999;999f[6n8[?25h[6nY[1D[1B[0G[1A[0G[0G[2K[0;1;92m? [0m[0;1;99mAuthenticate Git with your GitHub credentials? [0m[0;36mYes[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> Login with a web browser[0m
[0;39m  Paste an authentication token[0m
7[1A[0G[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;39m  Login with a web browser[0m
[0;1;36m> Paste an authentication token[0m
7[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> Login with a web browser[0m
[0;39m  Paste an authentication token[0m
7[1A[0G[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;39m  Login with a web browser[0m
[0;1;36m> Paste an authentication token[0m
7[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m[0;36m Paste an authentication token[0m
Tip: you can generate a Personal Access Token here https://github.com/settings/tokens
The minimum required scopes are 'repo', 'read:org', 'workflow'.
[0;1;92m? [0m[0;1;99mPaste your authentication token: [0m[?25l7[999;999f[6n8[?25h[6n**************************************************[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D
[1B[0Gerror validating token: HTTP 401: Bad credentials (https://api.github.com/)
Try authenticating with:  gh auth login
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ gh auth login
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> GitHub.com[0m
[0;39m  GitHub Enterprise Server[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m[0;36m GitHub.com[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> HTTPS[0m
[0;39m  SSH[0m
7[1A[0G[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;39m  HTTPS[0m
[0;1;36m> SSH[0m
7[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m[0;36m SSH[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mUpload your SSH public key to your GitHub account?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> /home/nitin/.ssh/id_ed25519.pub[0m
[0;39m  Skip[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mUpload your SSH public key to your GitHub account?[0m[0;36m /home/nitin/.ssh/id_ed25519.pub[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> Login with a web browser[0m
[0;39m  Paste an authentication token[0m
7[1A[0G[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;39m  Login with a web browser[0m
[0;1;36m> Paste an authentication token[0m
7[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m[0;36m Paste an authentication token[0m
Tip: you can generate a Personal Access Token here https://github.com/settings/tokens
The minimum required scopes are 'repo', 'read:org', 'admin:public_key'.
[0;1;92m? [0m[0;1;99mPaste your authentication token: [0m[?25l7[999;999f[6n8[?25h[6n*******************************************[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D
[1B[0Gerror validating token: HTTP 401: Bad credentials (https://api.github.com/)
Try authenticating with:  gh auth login
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ gh auth login
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> GitHub.com[0m
[0;39m  GitHub Enterprise Server[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m[0;36m GitHub.com[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> HTTPS[0m
[0;39m  SSH[0m
7[1A[0G[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;39m  HTTPS[0m
[0;1;36m> SSH[0m
7[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m[0;36m SSH[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mUpload your SSH public key to your GitHub account?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> /home/nitin/.ssh/id_ed25519.pub[0m
[0;39m  Skip[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mUpload your SSH public key to your GitHub account?[0m[0;36m /home/nitin/.ssh/id_ed25519.pub[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> Login with a web browser[0m
[0;39m  Paste an authentication token[0m
7[1A[0G[1A[0G8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;39m  Login with a web browser[0m
[0;1;36m> Paste an authentication token[0m
7[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m[0;36m Paste an authentication token[0m
Tip: you can generate a Personal Access Token here https://github.com/settings/tokens
The minimum required scopes are 'repo', 'read:org', 'admin:public_key'.
[0;1;92m? [0m[0;1;99mPaste your authentication token: [0m[?25l7[999;999f[6n8[?25h[6n**************************************************[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D[1D
[1B[0Gerror validating token: HTTP 401: Bad credentials (https://api.github.com/)
Try authenticating with:  gh auth login
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ gh auth login
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> GitHub.com[0m
[0;39m  GitHub Enterprise Server[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat account do you want to log into?[0m[0;36m GitHub.com[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> HTTPS[0m
[0;39m  SSH[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mWhat is your preferred protocol for Git operations?[0m[0;36m HTTPS[0m
[0G[2K[0;1;92m? [0m[0;1;99mAuthenticate Git with your GitHub credentials? [0m[38;5;242m(Y/n) [0m[?25l7[999;999f[6n8[?25h[6nY[1D[1B[0G[1A[0G[0G[2K[0;1;92m? [0m[0;1;99mAuthenticate Git with your GitHub credentials? [0m[0;36mYes[0m
7[?25l8[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m  [0;36m[Use arrows to move, type to filter][0m
[0;1;36m> Login with a web browser[0m
[0;39m  Paste an authentication token[0m
7[1A[0G[1A[0G8[?25h8[0G[2K[1A[0G[2K[1A[0G[2K[1A[0G[2K[0;1;92m? [0m[0;1;99mHow would you like to authenticate GitHub CLI?[0m[0;36m Login with a web browser[0m

[0;33m![0m First copy your one-time code: [0;1;39m717D-AB23[0m
[0;1;39mPress Enter[0m to open github.com in your browser... 
[0;32m✓[0m Authentication complete.
- gh config set -h github.com git_protocol https
[0;32m✓[0m Configured git protocol
[0;32m✓[0m Logged in as [0;1;39mnitin-tiger[0m
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ 
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ 
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git sy[Ktatus
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git branch enh/1/imporove[K[K[K[K[Krove_code_quality
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git checkout enh/1/improve_code_quality 
Switched to branch 'enh/1/improve_code_quality'
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ ls
README.md  my_git_session  my_unix_session  test_branck
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ cd[K[Kgit -d en[K[K[K[K[Kbranck[Kh -d enh/1/improve_code_quality 
error: Cannot delete branch 'enh/1/improve_code_quality' checked out at '/home/nitin/MLOPS'
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git checkout[K[K[K[K[K[K[K[Kstatus
On branch enh/1/improve_code_quality
nothing to commit, working tree clean
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git checkout main[7Pstatusbranch -d enh/1/improve_code_quality 
Deleted branch enh/1/improve_code_quality (was 0db7ad2).
(mlops) ]0;nitin@US-Nitin: ~/MLOPS[01;32mnitin@US-Nitin[00m:[01;34m~/MLOPS[00m$ git [K[K[K[Ks[Kcd ..
(mlops) ]0;nitin@US-Nitin: ~[01;32mnitin@US-Nitin[00m:[01;34m~[00m$ ls
[0m[01;34mMLOPS[0m  assignment_1.2  [01;34mgit_repo[0m  [01;34mminiconda3[0m  [01;34mmylibgit[0m  [01;34mtest_dir[0m
(mlops) ]0;nitin@US-Nitin: ~[01;32mnitin@US-Nitin[00m:[01;34m~[00m$ mkdit mle-training

Command 'mkdit' not found, did you mean:

  command 'mkdic' from deb canna-utils (3.7p3-14)
  command 'mkdir' from deb coreutils (8.30-3ubuntu2)
  command 'mkdist' from deb libmodule-package-rdf-perl (0.014-1)

Try: sudo apt install <deb name>

(mlops) ]0;nitin@US-Nitin: ~[01;32mnitin@US-Nitin[00m:[01;34m~[00m$ mkdit mle-training[1P mle-trainingr mle-training
(mlops) ]0;nitin@US-Nitin: ~[01;32mnitin@US-Nitin[00m:[01;34m~[00m$ cd mle-training/
(mlops) ]0;nitin@US-Nitin: ~/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training[00m$ git clone https://github.com/nitin-tiger/mle-training
Cloning into 'mle-training'...
remote: Enumerating objects: 5, done.[K
remote: Counting objects:  20% (1/5)[Kremote: Counting objects:  40% (2/5)[Kremote: Counting objects:  60% (3/5)[Kremote: Counting objects:  80% (4/5)[Kremote: Counting objects: 100% (5/5)[Kremote: Counting objects: 100% (5/5), done.[K
remote: Compressing objects:  25% (1/4)[Kremote: Compressing objects:  50% (2/4)[Kremote: Compressing objects:  75% (3/4)[Kremote: Compressing objects: 100% (4/4)[Kremote: Compressing objects: 100% (4/4), done.[K
remote: Total 5 (delta 0), reused 0 (delta 0), pack-reused 0[K
Receiving objects:  20% (1/5)Receiving objects:  40% (2/5)Receiving objects:  60% (3/5)Receiving objects:  80% (4/5)Receiving objects: 100% (5/5)Receiving objects: 100% (5/5), 5.49 KiB | 5.49 MiB/s, done.
(mlops) ]0;nitin@US-Nitin: ~/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training[00m$ ls
[0m[01;34mmle-training[0m
(mlops) ]0;nitin@US-Nitin: ~/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training[00m$ cd mle-training/
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git syay[K[K[Ktatus
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi README.md 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;30r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[30;1H"README.md" 2L, 28C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#[m[35m mle-training[m
MLE Training
[94m~                                                                                                                          [4;1H~                                                                                                                          [5;1H~                                                                                                                          [6;1H~                                                                                                                          [7;1H~                                                                                                                          [8;1H~                                                                                                                          [9;1H~                                                                                                                          [10;1H~                                                                                                                          [11;1H~                                                                                                                          [12;1H~                                                                                                                          [13;1H~                                                                                                                          [14;1H~                                                                                                                          [15;1H~                                                                                                                          [16;1H~                                                                                                                          [17;1H~                                                                                                                          [18;1H~                                                                                                                          [19;1H~                                                                                                                          [20;1H~                                                                                                                          [21;1H~                                                                                                                          [22;1H~                                                                                                                          [23;1H~                                                                                                                          [24;1H~                                                                                                                          [25;1H~                                                                                                                          [26;1H~                                                                                                                          [27;1H~                                                                                                                          [28;1H~                                                                                                                          [29;1H~                                                                                                                          [m[30;106H1,1[11CAll[1;1H[?25h[?25l[30;96H^[[1;1H[30;96H  [1;1H[30;96H^[[1;1H[30;96H  [1;1H[?25h[?25l[30;96H^[[1;1H[30;96H  [1;1H[30;96H^[[1;1H[30;96H  [1;1H[?25h[?25l[30;96H:[1;1H[30;1H[K[30;1H:[?2004h[?25hq[?25l[?2004l[23;2t[23;1t[30;1H[K[30;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi .git
.git/       .gitignore  
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi .git
.git/       .gitignore  
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi .gitignore 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;30r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[30;1H".gitignore" 129L, 1799C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m# Byte-compiled / optimized / DLL files[m
__pycache__/
*.py[cod]
*$py.class

[34m# C extensions[m
*.so

[34m# Distribution / packaging[m
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST[30;106H1,1[11CTop[1;1H[?25h[?25l[30;96H~@k[1;1H[30;96H   [2;1H[30;106H2[2;1H[?25h[?25l[30;96H~@k[2;1H[30;96H   [3;1H[30;106H3[3;1H[?25h[?25l[30;96H~@k[3;1H[30;96H   [4;1H[30;106H4[4;1H[?25h[?25l[30;96H~@k[4;1H[30;96H   [5;1H[30;106H5,0-1[5;1H[?25h[?25l[30;96H~@k[5;1H[30;96H   [6;1H[30;106H6,1  [6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [7;1H[30;106H7[7;1H[?25h[?25l[30;96H~@k[7;1H[30;96H   [8;1H[30;106H8,0-1[8;1H[?25h[?25l[30;96H~@k[8;1H[30;96H   [9;1H[30;106H9,1  [9;1H[?25h[?25l[30;96H~@k[9;1H[30;96H   [10;1H[30;106H10,1[10;1H[?25h[?25l[30;96H~@k[10;1H[30;96H   [11;1H[30;107H1[11;1H[?25h[?25l[30;96H~@k[11;1H[30;96H   [12;1H[30;107H2[12;1H[?25h[?25l[30;96H~@k[12;1H[30;96H   [13;1H[30;107H3[13;1H[?25h[?25l[30;96H~@k[13;1H[30;96H   [14;1H[30;107H4[14;1H[?25h[?25l[30;96H~@k[14;1H[30;96H   [15;1H[30;107H5[15;1H[?25h[?25l[30;96H~@k[15;1H[30;96H   [16;1H[30;107H6[16;1H[?25h[?25l[30;96H~@k[16;1H[30;96H   [17;1H[30;107H7[17;1H[?25h[?25l[30;96H~@k[17;1H[30;96H   [18;1H[30;107H8[18;1H[?25h[?25l[30;96H~@k[18;1H[30;96H   [19;1H[30;107H9[19;1H[?25h[?25l[30;96H~@k[19;1H[30;96H   [20;1H[30;106H20[20;1H[?25h[?25l[30;96H~@k[20;1H[30;96H   [21;1H[30;107H1[21;1H[?25h[?25l[30;96H~@k[21;1H[30;96H   [22;1H[30;107H2[22;1H[?25h[?25l[30;96H~@k[22;1H[30;96H   [23;1H[30;107H3[23;1H[?25h[?25l[30;96H~@k[23;1H[30;96H   [24;1H[30;107H4[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# PyInstaller[m[30;1H[K[30;106H25,1[11C1%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m#  Usually these files are written by a python script from a template[m[30;106H[K[30;106H26,1[11C2%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m#  before PyInstaller builds the exe, so as to inject date/other infos into it.[m[30;106H[K[30;106H27,1[11C3%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H*.manifest[30;106H[K[30;106H28,1[11C4%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H*.spec[30;106H[K[30;106H29,0-1[9C5%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H30,1[11C6%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Installer logs[m[30;106H[K[30;106H31,1[11C7%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hpip-log.txt[30;106H[K[30;106H32,1[11C8%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hpip-delete-this-directory.txt[30;106H[K[30;106H33,1[11C9%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H34,1[10C10%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Unit test / coverage reports[m[30;106H[K[30;106H35,0-1[8C11%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hhtmlcov/[30;106H[K[30;106H36,1[10C12%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.tox/[30;106H[K[30;106H37,1[10C13%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.nox/[30;106H[K[30;106H38,1[10C14%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.coverage[30;106H[K[30;106H39,0-1[8C15%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.coverage.*[30;106H[K[30;106H40,1[10C16%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.cache[30;106H[K[30;106H41,1[10C17%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hnosetests.xml[30;106H[K[30;106H42,1[10C18%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hcoverage.xml[30;106H[K[30;106H43,1[10C19%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H*.cover[30;106H[K[30;106H44,1[10C20%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H*.py,cover[30;106H[K[30;106H45,1[10C21%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.hypothesis/[30;106H[K[30;106H46,1[10C22%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.pytest_cache/[30;106H[K[30;106H47,1[10C23%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H48,1[10C24%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Translations[m[30;106H[K[30;106H49,1[10C25%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H*.mo[30;106H[K[30;106H50,1[10C26%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H*.pot[30;106H[K[30;106H51,1[10C27%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H52,1[10C28%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Django stuff:[m[30;106H[K[30;106H53,0-1[8C29%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H*.log[30;106H[K[30;106H54,1[10C30%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hlocal_settings.py[30;106H[K[30;106H55,1[10C31%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hdb.sqlite3[30;106H[K[30;106H56,1[10C32%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hdb.sqlite3-journal[30;106H[K[30;106H57,0-1[8C33%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H58,1[10C34%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Flask stuff:[m[30;106H[K[30;106H59,1[10C35%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hinstance/[30;106H[K[30;106H60,1[10C36%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.webassets-cache[30;106H[K[30;106H61,1[10C37%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H62,1[10C38%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Scrapy stuff:[m[30;106H[K[30;106H63,0-1[8C39%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.scrapy[30;106H[K[30;106H64,1[10C40%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H65,1[10C41%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Sphinx documentation[m[30;106H[K[30;106H66,1[10C42%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hdocs/_build/[30;106H[K[30;106H67,0-1[8C43%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H68,1[10C44%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# PyBuilder[m[30;106H[K[30;106H69,1[10C45%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Htarget/[30;106H[K[30;106H70,0-1[8C46%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H71,1[10C47%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Jupyter Notebook[m[30;106H[K[30;106H72,1[10C48%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.ipynb_checkpoints[30;106H[K[30;106H73,0-1[8C49%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H74,1[10C50%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# IPython[m[30;106H[K[30;106H75,1[10C51%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hprofile_default/[30;106H[K[30;106H76,0-1[8C52%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hipython_config.py[30;106H[K[30;106H77,1[10C53%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H78,1[10C54%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# pyenv[m[30;106H[K[30;106H79,0-1[8C55%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.python-version[30;106H[K[30;106H80,1[10C56%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H81,1[10C57%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# pipenv[m[30;106H[K[30;106H82,1[10C58%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.[m[30;106H[K[30;106H83,0-1[8C59%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m#   However, in case of collaboration, if having platform-specific dependencies or dependencies[m[30;106H[K[30;106H84,1[10C60%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m#   having no cross-platform support, pipenv may install dependencies that don't work, or not[m[30;106H[K[30;106H85,1[10C61%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m#   install all needed dependencies.[m[30;106H[K[30;106H86,0-1[8C62%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m#Pipfile.lock[m[30;106H[K[30;106H87,1[10C63%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H88,1[10C64%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# PEP 582; used by e.g. github.com/David-OConnor/pyflow[m[30;106H[K[30;106H89,1[10C65%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H__pypackages__/[30;106H[K[30;106H90,1[10C66%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H91,1[10C67%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Celery stuff[m[30;106H[K[30;106H92,1[10C68%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hcelerybeat-schedule[30;106H[K[30;106H93,0-1[8C69%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hcelerybeat.pid[30;106H[K[30;106H94,1[10C70%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H95,1[10C71%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# SageMath parsed files[m[30;106H[K[30;106H96,0-1[8C72%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H*.sage.py[30;106H[K[30;106H97,1[10C73%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H98,1[10C74%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Environments[m[30;106H[K[30;106H99,1[10C75%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.env[30;106H[K[30;106H100,0-1[7C76%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.venv[30;106H[K[30;106H101,1[9C77%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Henv/[30;106H[K[30;106H102,1[9C78%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hvenv/[30;106H[K[30;106H103,0-1[7C79%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1HENV/[30;106H[K[30;106H104,1[9C80%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Henv.bak/[30;106H[K[30;106H105,1[9C81%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hvenv.bak/[30;106H[K[30;106H106,1[9C82%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H107,1[9C83%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Spyder project settings[m[30;106H[K[30;106H108,1[9C84%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.spyderproject[30;106H[K[30;106H109,1[9C85%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.spyproject[30;106H[K[30;106H110,1[9C86%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H111,1[9C87%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Rope project settings[m[30;106H[K[30;106H112,0-1[7C88%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.ropeproject[30;106H[K[30;106H113,1[9C89%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H114,1[9C90%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# mkdocs documentation[m[30;106H[K[30;106H115,1[9C91%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H/site[30;106H[K[30;106H116,0-1[7C92%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H117,1[9C93%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# mypy[m[30;106H[K[30;106H118,1[9C94%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.mypy_cache/[30;106H[K[30;106H119,0-1[7C95%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.dmypy.json[30;106H[K[30;106H120,1[9C96%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1Hdmypy.json[30;106H[K[30;106H121,1[9C97%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[30;106H[K[30;106H122,0-1[7C98%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H[34m# Pyre type checker[m[30;106H[K[30;106H123,1[9C99%[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [24;1H[1;29r[29;1H
[1;30r[29;1H.pyre/[30;106H[K[30;106H124,1[9CBot[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [25;1H[30;108H5[25;1H[?25h[?25l[30;96H~@k[25;1H[30;96H   [26;1H[30;108H6[26;1H[?25h[?25l[30;96H~@k[26;1H[30;96H   [27;1H[30;108H7,0-1[27;1H[?25h[?25l[30;96H~@k[27;1H[30;96H   [28;1H[30;108H8,1  [28;1H[?25h[?25l[30;96H~@k[28;1H[30;96H   [29;1H[30;108H9[29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [28;1H[30;108H8[28;1H[?25h[?25l[30;96H~@k[28;1H[30;96H   [29;1H[30;108H9[29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [29;1H[?25h[?25l[30;96H~@k[29;1H[30;96H   [28;1H[30;108H8[28;1H[?25h[?25l[30;96H~@k[28;1H[30;96H   [27;1H[30;108H7,0-1[27;1H[?25h[?25l[30;96H~@k[27;1H[30;96H   [26;1H[30;108H6,1  [26;1H[?25h[?25l[30;96H~@k[26;1H[30;96H   [25;1H[30;108H5[25;1H[?25h[?25l[30;96H~@k[25;1H[30;96H   [24;1H[30;108H4[24;1H[?25h[?25l[30;96H~@k[24;1H[30;96H   [23;1H[30;108H3[23;1H[?25h[?25l[30;96H~@k[23;1H[30;96H   [22;1H[30;108H2,0-1[22;1H[?25h[?25l[30;96H~@k[22;1H[30;96H   [21;1H[30;108H1,1  [21;1H[?25h[?25l[30;96H~@k[21;1H[30;96H   [20;1H[30;108H0[20;1H[?25h[?25l[30;96H~@k[20;1H[30;96H   [19;1H[30;107H19,0-1[19;1H[?25h[?25l[30;96H~@k[19;1H[30;96H   [18;1H[30;108H8,1  [18;1H[?25h[?25l[30;96H~@k[18;1H[30;96H   [17;1H[30;108H7[17;1H[?25h[?25l[30;96H~@k[17;1H[30;96H   [16;1H[30;108H6,0-1[16;1H[?25h[?25l[30;96H~@k[16;1H[30;96H   [15;1H[30;108H5,1  [15;1H[?25h[?25l[30;96H~@k[15;1H[30;96H   [14;1H[30;108H4[14;1H[?25h[?25l[30;96H~@k[14;1H[30;96H   [13;1H[30;108H3[13;1H[?25h[?25l[30;96H~@k[13;1H[30;96H   [12;1H[30;108H2,0-1[12;1H[?25h[?25l[30;96H~@k[12;1H[30;96H   [11;1H[30;108H1,1  [11;1H[?25h[?25l[30;96H~@k[11;1H[30;96H   [10;1H[30;108H0[10;1H[?25h[?25l[30;96H~@k[10;1H[30;96H   [9;1H[30;107H09[9;1H[?25h[?25l[30;96H~@k[9;1H[30;96H   [8;1H[30;108H8[8;1H[?25h[?25l[30;96H~@k[8;1H[30;96H   [7;1H[30;108H7[7;1H[?25h[?25l[30;96H~@k[7;1H[30;96H   [6;1H[30;108H6[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H105,1[9C99%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hcelerybeat.pid[30;106H[K[30;106H104,1[9C98%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hcelerybeat-schedule[30;106H[K[30;106H103,0-1[7C97%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Celery stuff[m[30;106H[K[30;106H102,1[9C96%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H101,1[9C95%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H__pypackages__/[30;106H[K[30;106H100,0-1[7C94%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# PEP 582; used by e.g. github.com/David-OConnor/pyflow[m[30;106H[K[30;106H99,1[10C93%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H98,1[10C92%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m#Pipfile.lock[m[30;106H[K[30;106H97,1[10C91%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m#   install all needed dependencies.[m[30;106H[K[30;106H96,0-1[8C90%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m#   having no cross-platform support, pipenv may install dependencies that don't work, or not[m[30;106H[K[30;106H95,1[10C89%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m#   However, in case of collaboration, if having platform-specific dependencies or dependencies[m[30;106H[K[30;106H94,1[10C88%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.[m[30;106H[K[30;106H93,0-1[8C87%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# pipenv[m[30;106H[K[30;106H92,1[10C86%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H91,1[10C85%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.python-version[30;106H[K[30;106H90,1[10C84%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# pyenv[m[30;106H[K[30;106H89,1[10C83%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H88,1[10C82%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hipython_config.py[30;106H[K[30;106H87,1[10C81%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hprofile_default/[30;106H[K[30;106H86,0-1[8C80%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# IPython[m[30;106H[K[30;106H85,1[10C79%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H84,1[10C78%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.ipynb_checkpoints[30;106H[K[30;106H83,0-1[8C77%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Jupyter Notebook[m[30;106H[K[30;106H82,1[10C76%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H81,1[10C75%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Htarget/[30;106H[K[30;106H80,1[10C74%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# PyBuilder[m[30;106H[K[30;106H79,0-1[8C73%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H78,1[10C72%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hdocs/_build/[30;106H[K[30;106H77,1[10C71%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Sphinx documentation[m[30;106H[K[30;106H76,0-1[8C70%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H75,1[10C69%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.scrapy[30;106H[K[30;106H74,1[10C68%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Scrapy stuff:[m[30;106H[K[30;106H73,0-1[8C67%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H72,1[10C66%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.webassets-cache[30;106H[K[30;106H71,1[10C65%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hinstance/[30;106H[K[30;106H70,0-1[8C64%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Flask stuff:[m[30;106H[K[30;106H69,1[10C63%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H68,1[10C62%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hdb.sqlite3-journal[30;106H[K[30;106H67,0-1[8C61%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hdb.sqlite3[30;106H[K[30;106H66,1[10C60%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hlocal_settings.py[30;106H[K[30;106H65,1[10C59%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.log[30;106H[K[30;106H64,1[10C58%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Django stuff:[m[30;106H[K[30;106H63,0-1[8C57%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H62,1[10C56%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.pot[30;106H[K[30;106H61,1[10C55%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.mo[30;106H[K[30;106H60,1[10C54%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Translations[m[30;106H[K[30;106H59,1[10C53%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H58,1[10C52%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.pytest_cache/[30;106H[K[30;106H57,0-1[8C51%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.hypothesis/[30;106H[K[30;106H56,1[10C50%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.py,cover[30;106H[K[30;106H55,1[10C49%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.cover[30;106H[K[30;106H54,1[10C48%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hcoverage.xml[30;106H[K[30;106H53,0-1[8C47%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hnosetests.xml[30;106H[K[30;106H52,1[10C46%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.cache[30;106H[K[30;106H51,1[10C45%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.coverage.*[30;106H[K[30;106H50,1[10C44%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.coverage[30;106H[K[30;106H49,1[10C43%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.nox/[30;106H[K[30;106H48,1[10C42%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.tox/[30;106H[K[30;106H47,1[10C41%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hhtmlcov/[30;106H[K[30;106H46,1[10C40%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Unit test / coverage reports[m[30;106H[K[30;106H45,1[10C39%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H44,1[10C38%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hpip-delete-this-directory.txt[30;106H[K[30;106H43,1[10C37%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hpip-log.txt[30;106H[K[30;106H42,1[10C36%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Installer logs[m[30;106H[K[30;106H41,1[10C35%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H40,1[10C34%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.spec[30;106H[K[30;106H39,0-1[8C33%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.manifest[30;106H[K[30;106H38,1[10C32%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m#  before PyInstaller builds the exe, so as to inject date/other infos into it.[m[30;106H[K[30;106H37,1[10C31%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m#  Usually these files are written by a python script from a template[m[30;106H[K[30;106H36,1[10C30%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# PyInstaller[m[30;106H[K[30;106H35,0-1[8C29%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H34,1[10C28%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1HMANIFEST[30;106H[K[30;106H33,1[10C27%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.egg[30;106H[K[30;106H32,1[10C26%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.installed.cfg[30;106H[K[30;106H31,1[10C25%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.egg-info/[30;106H[K[30;106H30,1[10C24%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hshare/python-wheels/[30;106H[K[30;106H29,0-1[8C23%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hpip-wheel-metadata/[30;106H[K[30;106H28,1[10C22%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hwheels/[30;106H[K[30;106H27,1[10C21%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hvar/[30;106H[K[30;106H26,1[10C20%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hsdist/[30;106H[K[30;106H25,1[10C19%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hparts/[30;106H[K[30;106H24,1[10C18%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hlib64/[30;106H[K[30;106H23,1[10C17%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hlib/[30;106H[K[30;106H22,1[10C16%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.eggs/[30;106H[K[30;106H21,1[10C15%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Heggs/[30;106H[K[30;106H20,1[10C14%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hdownloads/[30;106H[K[30;106H19,1[10C13%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hdist/[30;106H[K[30;106H18,1[10C12%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hdevelop-eggs/[30;106H[K[30;106H17,1[10C11%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1Hbuild/[30;106H[K[30;106H16,1[10C10%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H.Python[30;106H[K[30;106H15,1[11C9%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Distribution / packaging[m[30;106H[K[30;106H14,1[11C8%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H13,1[11C7%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.so[30;106H[K[30;106H12,1[11C6%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# C extensions[m[30;106H[K[30;106H11,1[11C5%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[30;106H[K[30;106H10,1[11C4%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*$py.class[30;106H[K[30;106H9,1[12C3%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H*.py[cod][30;106H[K[30;106H8,0-1[10C2%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H__pycache__/[30;106H[K[30;106H7,1[12C1%[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [6;1H[1;29r[1;1H[L[1;30r[1;1H[34m# Byte-compiled / optimized / DLL files[m[30;106H[K[30;106H6,1[11CTop[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [5;1H[30;106H5,0-1[5;1H[?25h[?25l[30;96H~@k[5;1H[30;96H   [4;1H[30;106H4,1  [4;1H[?25h[?25l[30;96H~@k[4;1H[30;96H   [3;1H[30;106H3[3;1H[?25h[?25l[30;96H~@k[3;1H[30;96H   [2;1H[30;106H2[2;1H[?25h[?25l[30;96H~@k[2;1H[30;96H   [1;1H[30;106H1[1;1H[?25h[?25l[30;96H~@k[1;1H[30;96H   [1;1H[?25h[?25l[30;96H~@k[1;1H[30;96H   [1;1H[?25h[?25l[30;96H~@k[1;1H[30;96H   [2;1H[30;106H2[2;1H[?25h[?25l[30;96H~@k[2;1H[30;96H   [3;1H[30;106H3[3;1H[?25h[?25l[30;96H~@k[3;1H[30;96H   [4;1H[30;106H4[4;1H[?25h[?25l[30;96H~@k[4;1H[30;96H   [5;1H[30;106H5,0-1[5;1H[?25h[?25l[30;96H~@k[5;1H[30;96H   [6;1H[30;106H6,1  [6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [7;1H[30;106H7[7;1H[?25h[?25l[30;96H~@k[7;1H[30;96H   [8;1H[30;106H8,0-1[8;1H[?25h[?25l[30;96H~@k[8;1H[30;96H   [9;1H[30;106H9,1  [9;1H[?25h[?25l[30;96H~@k[9;1H[30;96H   [10;1H[30;106H10,1[10;1H[?25h[?25l[30;96H~@k[10;1H[30;96H   [11;1H[30;107H1[11;1H[?25h[?25l[30;96H~@k[11;1H[30;96H   [12;1H[30;107H2[12;1H[?25h[?25l[30;96H~@k[12;1H[30;96H   [13;1H[30;107H3[13;1H[?25h[?25l[30;96H~@k[13;1H[30;96H   [14;1H[30;107H4[14;1H[?25h[?25l[30;96H~@k[14;1H[30;96H   [15;1H[30;107H5[15;1H[?25h[?25l[30;96H~@k[15;1H[30;96H   [14;1H[30;107H4[14;1H[?25h[?25l[30;96H~@k[14;1H[30;96H   [13;1H[30;107H3[13;1H[?25h[?25l[30;96H~@k[13;1H[30;96H   [12;1H[30;107H2[12;1H[?25h[?25l[30;96H~@k[12;1H[30;96H   [11;1H[30;107H1[11;1H[?25h[?25l[30;96H~@k[11;1H[30;96H   [10;1H[30;107H0[10;1H[?25h[?25l[30;96H~@k[10;1H[30;96H   [9;1H[30;106H9,1 [9;1H[?25h[?25l[30;96H~@k[9;1H[30;96H   [8;1H[30;106H8,0-1[8;1H[?25h[?25l[30;96H~@k[8;1H[30;96H   [7;1H[30;106H7,1  [7;1H[?25h[?25l[30;96H~@k[7;1H[30;96H   [6;1H[30;106H6[6;1H[?25h[?25l[30;96H~@k[6;1H[30;96H   [5;1H[30;106H5,0-1[5;1H[?25h[?25l[30;96H^[[5;1H[30;96H  [5;1H[30;96H^[[5;1H[30;96H  [5;1H[?25h[?25l[30;96H^[[5;1H[30;96H  [5;1H[30;96H^[[5;1H[30;96H  [5;1H[?25h[?25l[30;96H:[5;1H[30;96H[K[30;1H:[?2004h[?25hq[?25l[?2004l[23;2t[23;1t[30;1H[K[30;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git branck [K[Kh en/1/impo[Krove_code_quality
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git checkout en/1/improve_code_quality 
Switched to branch 'en/1/improve_code_quality'
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git status
On branch en/1/improve_code_quality
nothing to commit, working tree clean
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ cd ..
(mlops) ]0;nitin@US-Nitin: ~/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training[00m$ la[Ks
[0m[01;34mmle-training[0m
(mlops) ]0;nitin@US-Nitin: ~/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training[00m$ git status
fatal: not a git repository (or any of the parent directories): .git
(mlops) ]0;nitin@US-Nitin: ~/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training[00m$ cd mle-training/
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git status
On branch en/1/improve_code_quality
nothing to commit, working tree clean
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi nostandardcode.py
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;30r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[30;1H"nostandardcode.py" [New File][2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[94m~                                                                                                                          [3;1H~                                                                                                                          [4;1H~                                                                                                                          [5;1H~                                                                                                                          [6;1H~                                                                                                                          [7;1H~                                                                                                                          [8;1H~                                                                                                                          [9;1H~                                                                                                                          [10;1H~                                                                                                                          [11;1H~                                                                                                                          [12;1H~                                                                                                                          [13;1H~                                                                                                                          [14;1H~                                                                                                                          [15;1H~                                                                                                                          [16;1H~                                                                                                                          [17;1H~                                                                                                                          [18;1H~                                                                                                                          [19;1H~                                                                                                                          [20;1H~                                                                                                                          [21;1H~                                                                                                                          [22;1H~                                                                                                                          [23;1H~                                                                                                                          [24;1H~                                                                                                                          [25;1H~                                                                                                                          [26;1H~                                                                                                                          [27;1H~                                                                                                                          [28;1H~                                                                                                                          [29;1H~                                                                                                                          [m[30;106H0,0-1[9CAll[1;1H[?25h[?25l[30;1H[1m-- INSERT --[m[30;13H[K[30;106H0,1[11CAll[1;1Hmport numpy [38;5;130mas[m np
[35mimport[m pandas [38;5;130mas[m pd[2;20H[K[3;1H[35mimport[m matplotlib [38;5;130mas[m mpl[3;25H[K[4;1H[35mimport[m matplotlib.pyplot [38;5;130mas[m plt[4;32H[K[5;1H[35mimport[m os[5;10H[K[6;1H[35mimport[m tarfile[6;15H[K[30;106H6,15[6;15H[?25h[?25l
[35mfrom[m six.moves [35mimport[m urllib[7;29H[K[8;1H[K[9;1H[K[10;1HDOWNLOAD_ROO[10;13H[K[30;106H10,13[10;13H[?25h[?25lT = [31m"h[m[30;110H9[10;19H[?25h[?25l[31mttps://raw.githubuserco[m[30;109H42[10;42H[?25h[?25l[31mntent.com/ageron/handson-ml/master/"[m
HOUSING_PATH = os.path.join([31m"datasets"[m, [31m"housing"[m)[11;51H[K[12;1HHOUSING_URL[12;12H[K[30;107H2,1[12;12H[?25h[?25l = DOWNLOAD_ROOT +[30;109H30[12;30H[?25h[?25l[1;1H                 [59CX_test = strat_test_set.drop([31m"median_house_valuu[2;1He"[m, axis=[31m1[m)[2;12H[K[3;1H                        [52Cy_test = strat_test_set[[31m"median_house_value"[m].cc[4;1Hopy()[4;6H[K[5;1H[K[6;1H              [62CX_test_num = X_test.drop([31m'ocean_proximity'[m, axii[7;1Hs=[31m1[m)[7;6H[K[8;77HX_test_prepared = imputer.transform(X_test_num)[9;77HX_test_prepared = pd.DataFrame(X_test_prepared,,[10;1H columns=X_test_num.columns,[10;29H[K[11;1H                                                  [60Cindex=X_test..[12;1Hindex)[12;7H[K[13;1H                                                                            X_test_prepared[[31m"rooms_per_household"[m] = X_testt[14;1H_prepared[[31m"total_rooms"[m]/X_test_prepared[[31m"households"[m][14;55H[K[15;1H                                                                            X_test_prepared[[31m"bedrooms_per_room"[m] = X_test_pp[16;1Hrepared[[31m"total_bedrooms"[m]/X_test_prepared[[31m"total_rooms"[m][16;57H[K[17;1H                                                                            X_test_prepared[[31m"population_per_household"[m]=X_tt[18;1Hest_prepared[[31m"population"[m]/X_test_prepared[[31m"households"[m][18;57H[K[19;1H[K[20;1H                                                                            X_test_cat = X_test[[[31m'ocean_proximity'[m]][20;117H[K[21;1H                                                                            X_test_prepared = X_test_prepared.join(pd.get_dd[22;1Hummies(X_test_cat, drop_first=[36mTrue[m))[22;37H[K[23;1H[K[24;1H[K[25;1H                                                                            final_predictions = final_model.predict(X_test__[26;1Hprepared)[26;10H[K[27;1H                                                                            final_mse = mean_squared_error(y_test, final_prr[28;1Hedictions)[28;11H[K[29;1H                                                                            final_rmse = np.sqrt(final_mse)[29;108H[K[29;97H[106m([9C)[m[30;107H81,108[7CBot[29;108H[?25h[27m[23m[29m[m[H[2J[?25l[1;69Hgrid_search = GridSearchCV(forest_reg, param_grid, cv=[31m5[m,[2;104Hscoring=[31m'neg_mean_squared_error'[m, return_train_score=[36mTrue[m)[3;69Hgrid_search.fit(housing_prepared, housing_labels)[5;69Hgrid_search.best_params_[6;69Hcvres = grid_search.cv_results_[7;69H[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):[8;77H[36mprint[m(np.sqrt(-mean_score), params)[10;77Hfeature_importances = grid_search.best_estimator_.feature_importances_[11;77H[36msorted[m([36mzip[m(feature_importances, housing_prepared.columns), reverse=[36mTrue[m)[14;77Hfinal_model = grid_search.best_estimator_[16;77HX_test = strat_test_set.drop([31m"median_house_value"[m, axis=[31m1[m)[17;77Hy_test = strat_test_set[[31m"median_house_value"[m].copy()[19;77HX_test_num = X_test.drop([31m'ocean_proximity'[m, axis=[31m1[m)[20;77HX_test_prepared = imputer.transform(X_test_num)[21;77HX_test_prepared = pd.DataFrame(X_test_prepared, columns=X_test_num.columns,[22;111Hindex=X_test.index)[23;77HX_test_prepared[[31m"rooms_per_household"[m] = X_test_prepared[[31m"total_rooms"[m]/X_test_prepared[[31m"households"[m][24;77HX_test_prepared[[31m"bedrooms_per_room"[m] = X_test_prepared[[31m"total_bedrooms"[m]/X_test_prepared[[31m"total_rooms"[m][25;77HX_test_prepared[[31m"population_per_household"[m]=X_test_prepared[[31m"population"[m]/X_test_prepared[[31m"households"[m][27;77HX_test_cat = X_test[[[31m'ocean_proximity'[m]][28;77HX_test_prepared = X_test_prepared.join(pd.get_dummies(X_test_cat, drop_first=[36mTrue[m))[31;77Hfinal_predictions = final_model.predict(X_test_prepared)[32;77Hfinal_mse = mean_squared_error(y_test, final_predictions)[33;77Hfinal_rmse = np.sqrt[106m([mfinal_mse[106m)[m
[94m~                                                                                                                                                                                                                  [35;1H~                                                                                                                                                                                                                  [36;1H~                                                                                                                                                                                                                  [37;1H~                                                                                                                                                                                                                  [38;1H~                                                                                                                                                                                                                  [39;1H~                                                                                                                                                                                                                  [40;1H~                                                                                                                                                                                                                  [41;1H~                                                                                                                                                                                                                  [42;1H~                                                                                                                                                                                                                  [43;1H~                                                                                                                                                                                                                  [44;1H~                                                                                                                                                                                                                  [45;1H~                                                                                                                                                                                                                  [46;1H~                                                                                                                                                                                                                  [47;1H~                                                                                                                                                                                                                  [48;1H~                                                                                                                                                                                                                  [49;1H~                                                                                                                                                                                                                  [m[50;1H[1m-- INSERT --[m[181C181,108[7CBot[33;108H[?25h[?25l:[33;97H([9C)[50;200H9[33;109H[?25h[?25lwq[50;199H11[33;111H[?25h[?25l[33;110H[K[50;200H0[33;110H[?25h[?25l[33;109H[K[50;199H09[33;109H[?25h[?25l[33;108H[K[33;97H[106m([9C)[m[50;200H8[33;108H[?25h[50;1H[K[33;107H[?25l[50;184H^[[33;107H[50;184H  [33;108H[50;194H181,107[7CBot[33;107H[?25h[?25l[50;184H^[[33;107H[50;184H  [33;107H[50;184H^[[33;107H[50;184H  [33;107H[?25h[?25l[50;184H^[[33;107H[50;184H  [33;107H[50;184H^[[33;107H[50;184H  [33;107H[?25h[?25l[50;184H:[33;107H[50;184H[K[50;1H:[?2004h[?25hwq[?25l[?2004l"nostandardcode.py" [New] 181L, 14022C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ 
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ 
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi nostandardcode.py 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"nostandardcode.py" 181L, 14022C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;61Hcvres = rnd_search.cv_results_[2;61H[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):[3;69H[36mprint[m(np.sqrt(-mean_score), params)[6;69H[35mfrom[m sklearn.model_selection [35mimport[m GridSearchCV[8;69Hparam_grid = [[9;81H[34m# try 12 (3×[9;93H4) combinations of hyperparameters[m[10;85H{[31m'n_estimators'[m: [[31m3[m, [31m10[m, [31m30[m], [31m'max_features'[m: [[31m2[m, [31m4[m, [31m6[m, [31m8[m]},[11;89H[34m# then try 6 (2×[11;105H3) combinations with bootstrap set as False[m[12;93H{[31m'bootstrap'[m: [[36mFalse[m], [31m'n_estimators'[m: [[31m3[m, [31m10[m], [31m'max_features'[m: [[31m2[m, [31m3[m, [31m4[m]},[13;95H][15;69Hforest_reg = RandomForestRegressor(random_state=[31m42[m)[16;69H[34m# train across 5 folds, that's a total of (12+6)*5=90 rounds of training [m[17;69Hgrid_search = GridSearchCV(forest_reg, param_grid, cv=[31m5[m,[18;104Hscoring=[31m'neg_mean_squared_error'[m, return_train_score=[36mTrue[m)[19;69Hgrid_search.fit(housing_prepared, housing_labels)[21;69Hgrid_search.best_params_[22;69Hcvres = grid_search.cv_results_[23;69H[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):[24;77H[36mprint[m(np.sqrt(-mean_score), params)[26;77Hfeature_importances = grid_search.best_estimator_.feature_importances_[27;77H[36msorted[m([36mzip[m(feature_importances, housing_prepared.columns), reverse=[36mTrue[m)[30;77Hfinal_model = grid_search.best_estimator_[32;77HX_test = strat_test_set.drop([31m"median_house_value"[m, axis=[31m1[m)[33;77Hy_test = strat_test_set[[31m"median_house_value"[m].copy()[35;77HX_test_num = X_test.drop([31m'ocean_proximity'[m, axis=[31m1[m)[36;77HX_test_prepared = imputer.transform(X_test_num)[37;77HX_test_prepared = pd.DataFrame(X_test_prepared, columns=X_test_num.columns,[38;111Hindex=X_test.index)[39;77HX_test_prepared[[31m"rooms_per_household"[m] = X_test_prepared[[31m"total_rooms"[m]/X_test_prepared[[31m"households"[m][40;77HX_test_prepared[[31m"bedrooms_per_room"[m] = X_test_prepared[[31m"total_bedrooms"[m]/X_test_prepared[[31m"total_rooms"[m][41;77HX_test_prepared[[31m"population_per_household"[m]=X_test_prepared[[31m"population"[m]/X_test_prepared[[31m"households"[m][43;77HX_test_cat = X_test[[[31m'ocean_proximity'[m]][44;77HX_test_prepared = X_test_prepared.join(pd.get_dummies(X_test_cat, drop_first=[36mTrue[m))[47;77Hfinal_predictions = final_model.predict(X_test_prepared)[48;77Hfinal_mse = mean_squared_error(y_test, final_predictions)[49;77Hfinal_rmse = np.sqrt[106m([mfinal_mse[106m)[m[50;194H181,107[7CBot[49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [48;107H[106m([25C)[m[49;97H([9C)[50;196H0[48;107H[?25h[?25l[50;184H~@k[48;107H[50;184H   [47;107H[48;107H([25C)[50;195H79[47;107H[?25h[?25l[50;184H~@k[47;107H[50;184H   [46;1H[50;196H8,0-1[46;1H[?25h[?25l[50;184H~@k[46;1H[50;184H   [45;1H[50;196H7[45;1H[?25h[?25l[50;184H~@k[45;1H[50;184H   [44;107H[50;196H6,107[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [43;107H[50;196H5[43;107H[?25h[?25l[50;184H~@k[43;107H[50;184H   [42;1H[50;196H4,0-1[42;1H[?25h[?25l[50;184H~@k[42;1H[50;184H   [41;107H[50;196H3,107[41;107H[?25h[?25l[50;184H~@k[41;107H[50;184H   [40;107H[50;196H2[40;107H[?25h[?25l[50;184H~@k[40;107H[50;184H   [39;107H[50;196H1[39;107H[?25h[?25l[50;184H~@k[39;107H[50;184H   [38;107H[50;196H0[38;107H[?25h[?25l[50;184H~@k[38;107H[50;184H   [37;107H[106m([38;129H)[m[50;195H69[37;107H[?25h[?25l[50;184H~@k[37;107H[50;184H   [36;107H[37;107H([38;129H)[50;196H8[36;107H[?25h[?25l[50;184H~@k[36;107H[50;184H   [35;107H[50;196H7[35;107H[?25h[?25l[50;184H~@k[35;107H[50;184H   [34;1H[50;196H6,0-1[34;1H[?25h[?25l[50;184H~@k[34;1H[50;184H   [33;107H[50;196H5,107[33;107H[?25h[?25l[50;184H~@k[33;107H[50;184H   [32;107H[50;196H4[32;107H[?25h[?25l[50;184H~@k[32;107H[50;184H   [31;1H[50;196H3,0-1[31;1H[?25h[?25l[50;184H~@k[31;1H[50;184H   [30;107H[50;196H2,107[30;107H[?25h[?25l[50;184H~@k[30;107H[50;184H   [29;1H[50;196H1,0-1[29;1H[?25h[?25l[50;184H~@k[29;1H[50;184H   [28;1H[50;196H0[28;1H[?25h[?25l[50;184H~@k[28;1H[50;184H   [27;107H[50;195H59,107[27;107H[?25h[?25l[50;184H~@k[27;107H[50;184H   [26;107H[50;196H8[26;107H[?25h[?25l[50;184H~@k[26;107H[50;184H   [25;1H[50;196H7,0-1[25;1H[?25h[?25l[50;184H~@k[25;1H[50;184H   [24;107H[50;196H6,107[24;107H[?25h[?25l[50;184H~@k[24;107H[50;184H   [23;107H[50;196H5[23;107H[?25h[?25l[50;184H~@k[23;107H[50;184H   [22;99H[50;196H4,99 [22;99H[?25h[?25l[50;184H~@k[22;99H[50;184H   [21;92H[50;196H3,92[21;92H[?25h[?25l[50;184H~@k[21;92H[50;184H   [20;1H[50;196H2,0-1[20;1H[?25h[?25l[50;184H~@k[20;1H[50;184H   [19;107H[50;196H1,107[19;107H[?25h[?25l[50;184H~@k[19;107H[50;184H   [18;107H[50;196H0[18;107H[?25h[?25l[50;184H~@k[18;107H[50;184H   [17;107H[50;195H49[17;107H[?25h[?25l[50;184H~@k[17;107H[50;184H   [16;107H[50;196H8[16;107H[?25h[?25l[50;184H~@k[16;107H[50;184H   [15;107H[50;196H7[15;107H[?25h[?25l[50;184H~@k[15;107H[50;184H   [14;1H[50;196H6,0-1[14;1H[?25h[?25l[50;184H~@k[14;1H[50;184H   [13;95H[8;82H[106m[[13;95H][m[50;196H5,95 [13;95H[?25h[?25l[50;184H~@k[13;95H[50;184H   [12;107H[8;82H[[12;107H[106m[[5C][m[13;95H][50;196H4,107[12;107H[?25h[?25l[50;184H~@k[12;107H[50;184H   [11;107H[12;107H[[5C][50;196H3,108-107[11;107H[?25h[?25l[50;184H~@k[11;107H[50;184H   [10;107H[50;196H2,107    [10;107H[?25h[?25l[50;184H~@k[10;107H[50;184H   [9;107H[50;196H1,108-107[9;107H[?25h[?25l[50;184H~@k[9;107H[50;184H   [8;82H[106m[[13;95H][m[50;196H0,82     [8;82H[?25h[?25l[50;184H~@k[8;82H[50;184H   [7;1H[8;82H[[13;95H][50;195H39,0-1[7;1H[?25h[?25l[50;184H~@k[7;1H[50;184H   [6;107H[50;196H8,107[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hrnd_search.fit(housing_prepared, housing_labels)[50;1H[K[50;194H137,0-1[7C99%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;101Hn_iter=[31m10[m, cv=[31m5[m, scoring=[31m'neg_mean_squared_error'[m, random_state=[31m42[m)[50;194H[K[50;194H136,0-1[7C98%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;103H[1;49r[1;1H[L[1;50r[1;61Hrnd_search = RandomizedSearchCV(forest_reg, param_distributions=param_distribs,[6;74H[106m([28C)[m[50;194H[K[50;194H135,103[7C97%[6;103H[?25h[?25l[50;184H~@k[6;103H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hforest_reg = RandomForestRegressor(random_state=[31m42[m)[7;74H([28C)[50;194H[K[50;194H134,107[7C96%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;90H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H133,90[8C96%[6;90H[?25h[?25l[50;184H~@k[6;90H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;89H}[50;194H[K[50;194H132,107[7C95%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;85H[31m'max_features'[m: randint(low=[31m1[m, high=[31m8[m),[50;194H[K[50;194H131,107[7C94%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;77H[31m'n_estimators'[m: randint(low=[31m1[m, high=[31m200[m),[50;194H[K[50;194H130,107[7C93%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hparam_distribs = {[50;194H[K[50;194H129,107[7C93%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H128,0-1[7C92%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;89H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m scipy.stats [35mimport[m randint[3;78H[106m{[6;89H}[m[50;194H[K[50;194H127,89[8C91%[6;89H[?25h[?25l[50;184H~@k[6;89H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.model_selection [35mimport[m RandomizedSearchCV[4;78H{[7;89H}[50;194H[K[50;194H126,107[7C90%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.ensemble [35mimport[m RandomForestRegressor[50;194H[K[50;194H125,107[7C90%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;78H[1;49r[1;1H[L[1;50r[6;78H[106m{[9;89H}[m[50;194H[K[50;194H124,78[8C89%[6;78H[?25h[?25l[50;184H~@k[6;78H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;78H{[10;89H}[50;194H[K[50;194H123,0-1[7C88%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;91H[1;49r[1;1H[L[1;50r[1;61Htree_rmse[50;194H[K[50;194H122,91[8C87%[6;91H[?25h[?25l[50;184H~@k[6;91H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Htree_rmse = np.sqrt(tree_mse)[50;194H[K[50;194H121,107[7C87%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Htree_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H120,107[7C86%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing_predictions = tree_reg.predict(housing_prepared)[50;194H[K[50;194H119,0-1[7C85%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H118,0-1[7C84%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;69H[1;49r[1;1H[L[1;50r[1;61Htree_reg.fit(housing_prepared, housing_labels)[50;194H[K[50;194H117,69[8C84%[6;69H[?25h[?25l[50;184H~@k[6;69H[50;184H   [6;89H[1;49r[1;1H[L[1;50r[1;61Htree_reg = DecisionTreeRegressor(random_state=[31m42[m)[6;80H[106m([8C)[m[50;194H[K[50;194H116,89[8C83%[6;89H[?25h[?25l[50;184H~@k[6;89H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[7;80H([8C)[50;194H[K[50;194H115,107[7C82%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.tree [35mimport[m DecisionTreeRegressor[50;194H[K[50;194H114,107[7C81%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H113,0-1[7C81%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;106H[1;49r[1;1H[L[1;50r[6;73H[106m([32C)[m[50;194H[K[50;194H112,106[7C80%[6;106H[?25h[?25l[50;184H~@k[6;106H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hlin_mae[7;73H([32C)[50;194H[K[50;194H111,107[7C79%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hlin_mae = mean_absolute_error(housing_labels, housing_predictions)[50;194H[K[50;194H110,0-1[7C78%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;106H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.metrics [35mimport[m mean_absolute_error[50;194H[K[50;194H109,106[7C78%[6;106H[?25h[?25l[50;184H~@k[6;106H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H108,0-1[7C77%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H107,0-1[7C76%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;67H[1;49r[1;1H[L[1;50r[1;61Hlin_rmse[50;194H[K[50;194H106,67[8C75%[6;67H[?25h[?25l[50;184H~@k[6;67H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hlin_rmse = np.sqrt(lin_mse)[50;194H[K[50;194H105,107[7C75%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hlin_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H104,107[7C74%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing_predictions = lin_reg.predict(housing_prepared)[50;194H[K[50;194H103,0-1[7C73%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.metrics [35mimport[m mean_squared_error[50;194H[K[50;194H102,0-1[7C72%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;68H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H101,68[8C71%[6;68H[?25h[?25l[50;184H~@k[6;68H[50;184H   [6;87H[1;49r[1;1H[L[1;50r[1;61Hlin_reg.fit(housing_prepared, housing_labels)[6;79H[106m([7C)[m[50;194H[K[50;194H100,87[8C71%[6;87H[?25h[?25l[50;184H~@k[6;87H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hlin_reg = LinearRegression()[7;79H([7C)[50;194H[K[50;194H99,107[8C70%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H98,107[8C69%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;106H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.linear_model [35mimport[m LinearRegression[50;194H[K[50;194H97,106[8C68%[6;106H[?25h[?25l[50;184H~@k[6;106H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H96,0-1[8C68%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;105H[1;49r[1;1H[L[1;50r[1;61Hhousing_prepared = housing_tr.join(pd.get_dummies(housing_cat, drop_first=[36mTrue[m))[6;72H[106m([32C)[m[50;194H[K[50;194H95,105[8C67%[6;105H[?25h[?25l[50;184H~@k[6;105H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[1;61Hhousing_cat = housing[[[31m'ocean_proximity'[m]][6;87H[106m()[m[7;72H([32C)[50;194H[K[50;194H94,88[9C66%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;87H()[50;194H[K[50;194H93,0-1[8C65%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hhousing_tr[[31m"population_per_household"[m]=housing_tr[[31m"population"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H92,107[8C65%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing_tr[[31m"bedrooms_per_room"[m] = housing_tr[[31m"total_bedrooms"[m]/housing_tr[[31m"total_rooms"[m][50;194H[K[50;194H91,0-1[8C64%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hhousing_tr[[31m"rooms_per_household"[m] = housing_tr[[31m"total_rooms"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H90,107[8C63%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;102H[1;49r[1;1H[L[1;50r[1;95Hindex=housing.index)[6;82H[106m[[19C][m[50;194H[K[50;194H89,102[8C62%[6;102H[?25h[?25l[50;184H~@k[6;102H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing_tr = pd.DataFrame(X, columns=housing_num.columns,[7;82H[[19C][50;194H[K[50;194H88,0-1[8C62%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H87,107[8C61%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61HX = imputer.transform(housing_num)[50;194H[K[50;194H86,107[8C60%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Himputer.fit(housing_num)[6;107H[106m[[13C][m[50;194H[K[50;194H85,107[8C59%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[7;107H[[13C][50;194H[K[50;194H84,107[8C59%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hhousing_num = housing.drop([31m'ocean_proximity'[m, axis=[31m1[m)[50;194H[K[50;194H83,107[8C58%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H82,0-1[8C57%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;94H[1;49r[1;1H[L[1;50r[1;61Himputer = SimpleImputer(strategy=[31m"median"[m)[6;82H[106m([11C)[m[50;194H[K[50;194H81,94[9C56%[6;94H[?25h[?25l[50;184H~@k[6;94H[50;184H   [6;84H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.impute [35mimport[m SimpleImputer[6;72H[106m([11C)[m[7;82H([11C)[50;194H[K[50;194H80,84[9C56%[6;84H[?25h[?25l[50;184H~@k[6;84H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;72H([11C)[50;194H[K[50;194H79,0-1[8C55%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hhousing_labels = strat_train_set[[31m"median_house_value"[m].copy()[50;194H[K[50;194H78,107[8C54%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing = strat_train_set.drop([31m"median_house_value"[m, axis=[31m1[m) [34m# drop labels for training set[m[50;194H[K[50;194H77,0-1[8C53%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;102H[1;49r[1;1H[L[1;50r[6;84H[106m([17C)[m[50;194H[K[50;194H76,102[8C53%[6;102H[?25h[?25l[50;184H~@k[6;102H[50;184H   [6;100H[1;49r[1;1H[L[1;50r[1;61Hhousing[[31m"population_per_household"[m]=housing[[31m"population"[m]/housing[[31m"households"[m][7;84H([17C)[50;194H[K[50;194H75,100[8C52%[6;100H[?25h[?25l[50;184H~@k[6;100H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing[[31m"bedrooms_per_room"[m] = housing[[31m"total_bedrooms"[m]/housing[[31m"total_rooms"[m][50;194H[K[50;194H74,0-1[8C51%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hhousing[[31m"rooms_per_household"[m] = housing[[31m"total_rooms"[m]/housing[[31m"households"[m][50;194H[K[50;194H73,107[8C50%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hcorr_matrix[[31m"median_house_value"[m].sort_values(ascending=[36mFalse[m)[50;194H[K[50;194H72,107[8C50%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hcorr_matrix = housing.corr()[50;194H[K[50;194H71,0-1[8C49%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H70,107[8C48%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m, alpha=[31m0.1[m)[50;194H[K[50;194H69,107[8C47%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m)[50;194H[K[50;194H68,107[8C46%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61Hhousing = strat_train_set.copy()[50;194H[K[50;194H67,107[8C46%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[6;87H[106m()[m[50;194H[K[50;194H66,88[9C45%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hset_.drop([31m"income_cat"[m, axis=[31m1[m, inplace=[36mTrue[m)[7;87H()[50;194H[K[50;194H65,0-1[8C44%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;53H[38;5;130mfor[m set_ [38;5;130min[m (strat_train_set, strat_test_set):[50;194H[K[50;194H64,107[8C43%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H63,107[8C43%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;92H[1;49r[1;1H[L[1;50r[1;53Hcompare_props[[31m"Strat. %error"[m] = [31m100[m * compare_props[[31m"Stratified"[m] / compare_props[[31m"Overall"[m] - [31m100[m[6;91H[106m()[m[50;194H[K[50;194H62,92[9C42%[6;92H[?25h[?25l[50;184H~@k[6;92H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;53Hcompare_props[[31m"Rand. %error"[m] = [31m100[m * compare_props[[31m"Random"[m] / compare_props[[31m"Overall"[m] - [31m100[m[7;91H()[50;194H[K[50;194H61,0-1[8C41%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;105H[1;49r[1;1H[L[1;50r[1;69H}).sort_index()[6;70H[106m([34C)[m[50;194H[K[50;194H60,105[8C40%[6;105H[?25h[?25l[50;184H~@k[6;105H[50;184H   [6;98H[1;49r[1;1H[L[1;50r[1;69H[31m"Random"[m: income_cat_proportions(test_set),[7;70H([34C)[50;194H[K[50;194H59,98[9C40%[6;98H[?25h[?25l[50;184H~@k[6;98H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;65H[31m"Stratified"[m: income_cat_proportions(strat_test_set),[50;194H[K[50;194H58,0-1[8C39%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;61H[31m"Overall"[m: income_cat_proportions(housing),[50;194H[K[50;194H57,107[8C38%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;53Hcompare_props = pd.DataFrame({[50;194H[K[50;194H56,107[8C37%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;83H[1;49r[1;1H[L[1;50r[6;82H[106m()[m[50;194H[K[50;194H55,83[9C37%[6;83H[?25h[?25l[50;184H~@k[6;83H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;53Htrain_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)[7;82H()[50;194H[K[50;194H54,107[8C36%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H53,107[8C35%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;103H[1;49r[1;1H[L[1;50r[1;57H[38;5;130mreturn[m data[[31m"income_cat"[m].value_counts() / [36mlen[m(data)[50;194H[K[50;194H52,103[8C34%[6;103H[?25h[?25l[50;184H~@k[6;103H[50;184H   [6;82H[1;49r[1;1H[L[1;50r[1;49H[38;5;130mdef[m [36mincome_cat_proportions[m(data):[6;82H[106m{[10;69H}[m[50;194H[K[50;194H51,82[9C34%[6;82H[?25h[?25l[50;184H~@k[6;82H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;82H{[11;69H}[50;194H[K[50;194H50,0-1[8C33%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H49,107[8C32%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;49Hstrat_test_set = housing.loc[test_index][50;194H[K[50;194H48,0-1[8C31%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;45Hstrat_train_set = housing.loc[train_index][50;194H[K[50;194H47,107[8C31%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;81H[1;49r[1;1H[L[1;50r[1;37H[38;5;130mfor[m train_index, test_index [38;5;130min[m split.split(housing, housing[[31m"income_cat"[m]):[50;194H[K[50;194H46,81[9C30%[6;81H[?25h[?25l[50;184H~@k[6;81H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;37Hsplit = StratifiedShuffleSplit(n_splits=[31m1[m, test_size=[31m0.2[m, random_state=[31m42[m)[50;194H[K[50;194H45,0-1[8C29%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H44,0-1[8C28%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[1;37H[35mfrom[m sklearn.model_selection [35mimport[m StratifiedShuffleSplit[6;77H[106m[[10C][m[50;194H[K[50;194H43,88[9C28%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;86H[1;49r[1;1H[L[1;50r[6;74H[106m[[11C][m[7;77H[[10C][50;194H[K[50;194H42,86[9C27%[6;86H[?25h[?25l[50;184H~@k[6;86H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;107Hlabels=[[31m1[m, [31m2[m, [31m3[m, [31m4[m, [31m5[m])[7;74H[[11C][50;194H[K[50;194H41,107[8C26%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;76Hbins=[[31m0.[m, [31m1.5[m, [31m3.0[m, [31m4.5[m, [31m6.[m, np.inf],[50;194H[K[50;194H40,107[8C25%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;37Hhousing[[31m"income_cat"[m] = pd.cut(housing[[31m"median_income"[m],[50;194H[K[50;194H39,0-1[8C25%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;94H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H38,94[9C24%[6;94H[?25h[?25l[50;184H~@k[6;94H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;37Htrain_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)[50;194H[K[50;194H37,0-1[8C23%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H36,107[8C22%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[1;37H[35mfrom[m sklearn.model_selection [35mimport[m train_test_split[50;194H[K[50;194H35,107[8C21%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;92H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H34,92[9C21%[6;92H[?25h[?25l[50;184H~@k[6;92H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;37Hhousing = load_housing_data[50;194H[K[50;194H33,0-1[8C20%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;107H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H32,107[8C19%[6;107H[?25h[?25l[50;184H~@k[6;107H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;41H[38;5;130mreturn[m pd.read_csv(csv_path)[50;194H[K[50;194H31,0-1[8C18%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[1;37Hcsv_path = os.path.join(housing_path, [31m"housing.csv"[m)[50;194H[K[50;194H30,88[9C18%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;29H[38;5;130mdef[m [36mload_housing_data[m(housing_path=HOUSING_PATH):[50;194H[K[50;194H29,0-1[8C17%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;63H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H28,63[9C16%[6;63H[?25h[?25l[50;184H~@k[6;63H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;29H[35mimport[m pandas [38;5;130mas[m pd[50;194H[K[50;194H27,0-1[8C15%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;68H[1;49r[1;1H[L[1;50r[6;59H[106m([8C)[m[50;194H[K[50;194H26,68[9C15%[6;68H[?25h[?25l[50;184H~@k[6;68H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[1;29Hhousing_tgz.close()[6;60H[106m([27C)[m[7;59H([8C)[50;194H[K[50;194H25,88[9C14%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;77H[1;49r[1;1H[L[1;50r[1;25Hhousing_tgz.extractall(path=housing_path)[7;60H([27C)[50;194H[K[50;194H24,77[9C13%[6;77H[?25h[?25l[50;184H~@k[6;77H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;21Hhousing_tgz = tarfile.open(tgz_path)[50;194H[K[50;194H23,0-1[8C12%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;47H[1;49r[1;1H[L[1;50r[1;17Hurllib.request.urlretrieve(housing_url, tgz_path)[50;194H[K[50;194H22,47[9C12%[6;47H[?25h[?25l[50;184H~@k[6;47H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;13Htgz_path = os.path.join(housing_path, [31m"housing.tgz"[m)[50;194H[K[50;194H21,0-1[8C11%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;47H[1;49r[1;1H[L[1;50r[1;9Hos.makedirs(housing_path, exist_ok=[36mTrue[m)[6;46H[106m()[m[50;194H[K[50;194H20,47[9C10%[6;47H[?25h[?25l[50;184H~@k[6;47H[50;184H   [6;65H[1;49r[1;1H[L[1;50r[1;1H[38;5;130mdef[m [36mfetch_housing_data[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):[6;47H[106m([17C)[m[7;46H()[50;194H[K[50;194H19,65[10C9%[6;65H[?25h[?25l[50;184H~@k[6;65H[50;184H   [6;56H[1;49r[1;1H[L[1;50r[6;47H[106m([8C)[m[7;47H([17C)[50;194H[K[50;194H18,56[10C9%[6;56H[?25h[?25l[50;184H~@k[6;56H[50;184H   [6;65H[1;49r[1;1H[L[1;50r[1;1HHOUSING_URL = DOWNLOAD_ROOT + [31m"datasets/housing/housing.tgz"[m[6;43H[106m([21C)[m[7;47H([8C)[50;194H[K[50;194H17,65[10C8%[6;65H[?25h[?25l[50;184H~@k[6;65H[50;184H   [6;64H[1;49r[1;1H[L[1;50r[1;1HHOUSING_PATH = os.path.join([31m"datasets"[m, [31m"housing"[m)[6;36H[106m([27C)[m[7;43H([21C)[50;194H[K[50;194H16,64[10C7%[6;64H[?25h[?25l[50;184H~@k[6;64H[50;184H   [6;48H[1;49r[1;1H[L[1;50r[1;1HDOWNLOAD_ROOT = [31m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[m[6;20H[106m([27C)[m[7;36H([27C)[50;194H[K[50;194H15,48[10C6%[6;48H[?25h[?25l[50;184H~@k[6;48H[50;184H   [6;75H[1;49r[1;1H[L[1;50r[7;20H([27C)[50;194H[K[50;194H14,75[10C6%[6;75H[?25h[?25l[50;184H~@k[6;75H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H13,0-1[9C5%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;60H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m six.moves [35mimport[m urllib[50;194H[K[50;194H12,60[10C4%[6;60H[?25h[?25l[50;184H~@k[6;60H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m tarfile[6;28H[106m([21C)[m[50;194H[K[50;194H11,50[10C3%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;77H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m os[7;28H([21C)[50;194H[K[50;194H10,77[10C3%[6;77H[?25h[?25l[50;184H~@k[6;77H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m matplotlib.pyplot [38;5;130mas[m plt[50;194H[K[50;194H9,0-1[10C2%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m matplotlib [38;5;130mas[m mpl[50;194H[K[50;194H8,0-1[10C1%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;28H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m pandas [38;5;130mas[m pd[50;194H[K[50;194H7,28[11C0%[6;28H[?25h[?25l[50;184H~@k[6;28H[50;184H   [6;14H[1;49r[1;1H[L[1;50r[1;1Hmport numpy [38;5;130mas[m np[50;194H[K[50;194H6,14[10CTop[6;14H[?25h[?25l[50;184H~@k[6;14H[50;184H   [5;9H[50;194H5,9 [5;9H[?25h[?25l[50;184H~@k[5;9H[50;184H   [4;31H[50;194H4,31[4;31H[?25h[?25l[50;184H~@k[4;31H[50;184H   [3;24H[50;194H3,24[3;24H[?25h[?25l[50;184H~@k[3;24H[50;184H   [2;19H[50;194H2,19[2;19H[?25h[?25l[50;184H~@k[2;19H[50;184H   [1;17H[50;194H1,17[1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [2;19H[50;194H2,19[2;19H[?25h[?25l[50;184H~@k[2;19H[50;184H   [3;24H[50;194H3,24[3;24H[?25h[?25l[50;184H~@k[3;24H[50;184H   [4;31H[50;194H4,31[4;31H[?25h[?25l[50;184H~@k[4;31H[50;184H   [5;9H[50;194H5,9 [5;9H[?25h[?25l[50;184H~@k[5;9H[50;184H   [6;14H[50;194H6,14[6;14H[?25h[?25l[50;184H~@k[6;14H[50;184H   [7;28H[50;194H7,28[7;28H[?25h[?25l[50;184H~@k[7;28H[50;184H   [8;1H[50;194H8,0-1[8;1H[?25h[?25l[50;184H~@k[8;1H[50;184H   [9;1H[50;194H9[9;1H[?25h[?25l[50;184H~@k[9;1H[50;184H   [10;77H[50;194H10,77[10;77H[?25h[?25l[50;184H~@k[10;77H[50;184H   [11;50H[11;28H[106m([21C)[m[50;195H1,50[11;50H[?25h[?25l[50;184H~@k[11;50H[50;184H   [12;60H[11;28H([21C)[50;195H2,6[12;60H[?25h[?25l[50;184H~@k[12;60H[50;184H   [13;1H[50;195H3,0-1[13;1H[?25h[?25l[50;184H~@k[13;1H[50;184H   [14;75H[50;195H4,75 [14;75H[?25h[?25l[50;184H~@k[14;75H[50;184H   [15;48H[15;20H[106m([27C)[m[50;195H5,48[15;48H[?25h[?25l[50;184H~@k[15;48H[50;184H   [16;64H[15;20H([27C)[16;36H[106m([27C)[m[50;195H6,64[16;64H[?25h[?25l[50;184H~@k[16;64H[50;184H   [17;65H[16;36H([27C)[17;43H[106m([21C)[m[50;195H7,65[17;65H[?25h[?25l[50;184H~@k[17;65H[50;184H   [18;56H[17;43H([21C)[18;47H[106m([8C)[m[50;195H8,56[18;56H[?25h[?25l[50;184H~@k[18;56H[50;184H   [19;65H[18;47H([8C)[19;47H[106m([17C)[m[50;195H9,65[19;65H[?25h[?25l[50;184H~@k[19;65H[50;184H   [20;47H[19;47H([17C)[20;46H[106m()[m[50;194H20,47[20;47H[?25h[?25l[50;184H~@k[20;47H[50;184H   [21;1H[20;46H()[50;195H1,0-1[21;1H[?25h[?25l[50;184H~@k[21;1H[50;184H   [22;47H[50;195H2,47 [22;47H[?25h[?25l[50;184H~@k[22;47H[50;184H   [23;1H[50;195H3,0-1[23;1H[?25h[?25l[50;184H~@k[23;1H[50;184H   [24;77H[50;195H4,77 [24;77H[?25h[?25l[50;184H~@k[24;77H[50;184H   [25;88H[25;60H[106m([27C)[m[50;195H5,88[25;88H[?25h[?25l[50;184H~@k[25;88H[50;184H   [26;68H[25;60H([27C)[26;59H[106m([8C)[m[50;195H6,6[26;68H[?25h[?25l[50;184H~@k[26;68H[50;184H   [27;1H[26;59H([8C)[50;195H7,0-1[27;1H[?25h[?25l[50;184H~@k[27;1H[50;184H   [28;63H[50;195H8,63 [28;63H[?25h[?25l[50;184H~@k[28;63H[50;184H   [29;1H[50;195H9,0-1[29;1H[?25h[?25l[50;184H~@k[29;1H[50;184H   [30;88H[50;194H30,88 [30;88H[?25h[?25l[50;184H~@k[30;88H[50;184H   [31;1H[50;195H1,0-1[31;1H[?25h[?25l[50;184H~@k[31;1H[50;184H   [32;107H[50;195H2,107[32;107H[?25h[?25l[50;184H~@k[32;107H[50;184H   [33;1H[50;195H3,0-1[33;1H[?25h[?25l[50;184H~@k[33;1H[50;184H   [34;92H[50;195H4,92 [34;92H[?25h[?25l[50;184H~@k[34;92H[50;184H   [35;107H[50;195H5,107[35;107H[?25h[?25l[50;184H~@k[35;107H[50;184H   [36;107H[50;195H6[36;107H[?25h[?25l[50;184H~@k[36;107H[50;184H   [37;1H[50;195H7,0-1[37;1H[?25h[?25l[50;184H~@k[37;1H[50;184H   [38;94H[50;195H8,94 [38;94H[?25h[?25l[50;184H~@k[38;94H[50;184H   [39;1H[50;195H9,0-1[39;1H[?25h[?25l[50;184H~@k[39;1H[50;184H   [40;107H[50;194H40,107[40;107H[?25h[?25l[50;184H~@k[40;107H[50;184H   [41;107H[50;195H1[41;107H[?25h[?25l[50;184H~@k[41;107H[50;184H   [42;86H[42;74H[106m[[11C][m[50;195H2,86 [42;86H[?25h[?25l[50;184H~@k[42;86H[50;184H   [43;88H[42;74H[[11C][43;77H[106m[[10C][m[50;195H3,88[43;88H[?25h[?25l[50;184H~@k[43;88H[50;184H   [44;1H[43;77H[[10C][50;195H4,0-1[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H45,0-1[9C0%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;81H[1;49r[49;1H
[1;50r[49;53Hcompare_props = pd.DataFrame({[50;194H[K[50;194H46,81[10C1%[44;81H[?25h[?25l[50;184H~@k[44;81H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61H[31m"Overall"[m: income_cat_proportions(housing),[50;194H[K[50;194H47,107[9C2%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;65H[31m"Stratified"[m: income_cat_proportions(strat_test_set),[50;194H[K[50;194H48,0-1[9C3%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;69H[31m"Random"[m: income_cat_proportions(test_set),[50;194H[K[50;194H49,107[9C3%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;69H}).sort_index()[50;194H[K[50;194H50,0-1[9C4%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;82H[1;49r[49;1H
[1;50r[44;82H[106m{[48;69H}[m[49;53Hcompare_props[[31m"Rand. %error"[m] = [31m100[m * compare_props[[31m"Random"[m] / compare_props[[31m"Overall"[m] - [31m100[m[50;194H[K[50;194H51,82[10C5%[44;82H[?25h[?25l[50;184H~@k[44;82H[50;184H   [44;103H[1;49r[49;1H
[1;50r[43;82H{[47;69H}[49;53Hcompare_props[[31m"Strat. %error"[m] = [31m100[m * compare_props[[31m"Stratified"[m] / compare_props[[31m"Overall"[m] - [31m100[m[50;194H[K[50;194H52,103[9C6%[44;103H[?25h[?25l[50;184H~@k[44;103H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H53,107[9C6%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;53H[38;5;130mfor[m set_ [38;5;130min[m (strat_train_set, strat_test_set):[50;194H[K[50;194H54,107[9C7%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;83H[1;49r[49;1H
[1;50r[44;82H[106m()[m[49;61Hset_.drop([31m"income_cat"[m, axis=[31m1[m, inplace=[36mTrue[m)[50;194H[K[50;194H55,83[10C8%[44;83H[?25h[?25l[50;184H~@k[44;83H[50;184H   [44;107H[1;49r[49;1H
[1;50r[43;82H()[50;194H[K[50;194H56,107[9C9%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61Hhousing = strat_train_set.copy()[50;194H[K[50;194H57,107[9C9%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;61Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m)[50;194H[K[50;194H58,0-1[8C10%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;98H[1;49r[49;1H
[1;50r[49;61Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m, alpha=[31m0.1[m)[50;194H[K[50;194H59,98[9C11%[44;98H[?25h[?25l[50;184H~@k[44;98H[50;184H   [44;105H[1;49r[49;1H
[1;50r[44;70H[106m([34C)[m[50;194H[K[50;194H60,105[8C12%[44;105H[?25h[?25l[50;184H~@k[44;105H[50;184H   [44;1H[1;49r[49;1H
[1;50r[43;70H([34C)[49;61Hcorr_matrix = housing.corr()[50;194H[K[50;194H61,0-1[8C12%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;92H[1;49r[49;1H
[1;50r[44;91H[106m()[m[49;61Hcorr_matrix[[31m"median_house_value"[m].sort_values(ascending=[36mFalse[m)[50;194H[K[50;194H62,92[9C13%[44;92H[?25h[?25l[50;184H~@k[44;92H[50;184H   [44;107H[1;49r[49;1H
[1;50r[43;91H()[49;61Hhousing[[31m"rooms_per_household"[m] = housing[[31m"total_rooms"[m]/housing[[31m"households"[m][50;194H[K[50;194H63,107[8C14%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61Hhousing[[31m"bedrooms_per_room"[m] = housing[[31m"total_bedrooms"[m]/housing[[31m"total_rooms"[m][50;194H[K[50;194H64,107[8C15%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;61Hhousing[[31m"population_per_household"[m]=housing[[31m"population"[m]/housing[[31m"households"[m][50;194H[K[50;194H65,0-1[8C15%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;88H[1;49r[49;1H
[1;50r[44;87H[106m()[m[50;194H[K[50;194H66,88[9C16%[44;88H[?25h[?25l[50;184H~@k[44;88H[50;184H   [44;107H[1;49r[49;1H
[1;50r[43;87H()[49;61Hhousing = strat_train_set.drop([31m"median_house_value"[m, axis=[31m1[m) [34m# drop labels for training set[m[50;194H[K[50;194H67,107[8C17%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61Hhousing_labels = strat_train_set[[31m"median_house_value"[m].copy()[50;194H[K[50;194H68,107[8C18%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H69,107[8C18%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61H[35mfrom[m sklearn.impute [35mimport[m SimpleImputer[50;194H[K[50;194H70,107[8C19%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;61Himputer = SimpleImputer(strategy=[31m"median"[m)[50;194H[K[50;194H71,0-1[8C20%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H72,107[8C21%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61Hhousing_num = housing.drop([31m'ocean_proximity'[m, axis=[31m1[m)[50;194H[K[50;194H73,107[8C21%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H74,0-1[8C22%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;100H[1;49r[49;1H
[1;50r[49;61Himputer.fit(housing_num)[50;194H[K[50;194H75,100[8C23%[44;100H[?25h[?25l[50;184H~@k[44;100H[50;184H   [44;102H[1;49r[49;1H
[1;50r[44;84H[106m([17C)[m[49;61HX = imputer.transform(housing_num)[50;194H[K[50;194H76,102[8C24%[44;102H[?25h[?25l[50;184H~@k[44;102H[50;184H   [44;1H[1;49r[49;1H
[1;50r[43;84H([17C)[50;194H[K[50;194H77,0-1[8C25%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61Hhousing_tr = pd.DataFrame(X, columns=housing_num.columns,[50;194H[K[50;194H78,107[8C25%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;95Hindex=housing.index)[50;194H[K[50;194H79,0-1[8C26%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;84H[1;49r[49;1H
[1;50r[44;72H[106m([11C)[m[49;61Hhousing_tr[[31m"rooms_per_household"[m] = housing_tr[[31m"total_rooms"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H80,84[9C27%[44;84H[?25h[?25l[50;184H~@k[44;84H[50;184H   [44;94H[1;49r[49;1H
[1;50r[43;72H([11C)[44;82H[106m([11C)[m[49;61Hhousing_tr[[31m"bedrooms_per_room"[m] = housing_tr[[31m"total_bedrooms"[m]/housing_tr[[31m"total_rooms"[m][50;194H[K[50;194H81,94[9C28%[44;94H[?25h[?25l[50;184H~@k[44;94H[50;184H   [44;1H[1;49r[49;1H
[1;50r[43;82H([11C)[49;61Hhousing_tr[[31m"population_per_household"[m]=housing_tr[[31m"population"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H82,0-1[8C28%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H83,107[8C29%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61Hhousing_cat = housing[[[31m'ocean_proximity'[m]][50;194H[K[50;194H84,107[8C30%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[44;107H[106m[[13C][m[49;61Hhousing_prepared = housing_tr.join(pd.get_dummies(housing_cat, drop_first=[36mTrue[m))[50;194H[K[50;194H85,107[8C31%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[43;107H[[13C][50;194H[K[50;194H86,107[8C31%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61H[35mfrom[m sklearn.linear_model [35mimport[m LinearRegression[50;194H[K[50;194H87,107[8C32%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H88,0-1[8C33%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;102H[1;49r[49;1H
[1;50r[44;82H[106m[[19C][m[49;61Hlin_reg = LinearRegression()[50;194H[K[50;194H89,102[8C34%[44;102H[?25h[?25l[50;184H~@k[44;102H[50;184H   [44;107H[1;49r[49;1H
[1;50r[43;82H[[19C][49;61Hlin_reg.fit(housing_prepared, housing_labels)[50;194H[K[50;194H90,107[8C34%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H91,0-1[8C35%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61H[35mfrom[m sklearn.metrics [35mimport[m mean_squared_error[50;194H[K[50;194H92,107[8C36%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;61Hhousing_predictions = lin_reg.predict(housing_prepared)[50;194H[K[50;194H93,0-1[8C37%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;88H[1;49r[49;1H
[1;50r[44;87H[106m()[m[49;61Hlin_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H94,88[9C37%[44;88H[?25h[?25l[50;184H~@k[44;88H[50;184H   [44;105H[1;49r[49;1H
[1;50r[43;87H()[44;72H[106m([32C)[m[49;61Hlin_rmse = np.sqrt(lin_mse)[50;194H[K[50;194H95,105[8C38%[44;105H[?25h[?25l[50;184H~@k[44;105H[50;184H   [44;1H[1;49r[49;1H
[1;50r[43;72H([32C)[49;61Hlin_rmse[50;194H[K[50;194H96,0-1[8C39%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;106H[1;49r[49;1H
[1;50r[50;194H[K[50;194H97,106[8C40%[44;106H[?25h[?25l[50;184H~@k[44;106H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H98,107[8C40%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61H[35mfrom[m sklearn.metrics [35mimport[m mean_absolute_error[50;194H[K[50;194H99,107[8C41%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;87H[1;49r[49;1H
[1;50r[44;79H[106m([7C)[m[49;61Hlin_mae = mean_absolute_error(housing_labels, housing_predictions)[50;194H[K[50;194H100,87[8C42%[44;87H[?25h[?25l[50;184H~@k[44;87H[50;184H   [44;68H[1;49r[49;1H
[1;50r[43;79H([7C)[49;61Hlin_mae[50;194H[K[50;194H101,68[8C43%[44;68H[?25h[?25l[50;184H~@k[44;68H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H102,0-1[7C43%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H103,0-1[7C44%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61H[35mfrom[m sklearn.tree [35mimport[m DecisionTreeRegressor[50;194H[K[50;194H104,107[7C45%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H105,107[7C46%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;67H[1;49r[49;1H
[1;50r[49;61Htree_reg = DecisionTreeRegressor(random_state=[31m42[m)[50;194H[K[50;194H106,67[8C46%[44;67H[?25h[?25l[50;184H~@k[44;67H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;61Htree_reg.fit(housing_prepared, housing_labels)[50;194H[K[50;194H107,0-1[7C47%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H108,0-1[7C48%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;106H[1;49r[49;1H
[1;50r[49;61Hhousing_predictions = tree_reg.predict(housing_prepared)[50;194H[K[50;194H109,106[7C49%[44;106H[?25h[?25l[50;184H~@k[44;106H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;61Htree_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H110,0-1[7C50%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61Htree_rmse = np.sqrt(tree_mse)[50;194H[K[50;194H111,107[7C50%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;106H[1;49r[49;1H
[1;50r[44;73H[106m([32C)[m[49;61Htree_rmse[50;194H[K[50;194H112,106[7C51%[44;106H[?25h[?25l[50;184H~@k[44;106H[50;184H   [44;1H[1;49r[49;1H
[1;50r[43;73H([32C)[50;194H[K[50;194H113,0-1[7C52%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H114,107[7C53%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61H[35mfrom[m sklearn.ensemble [35mimport[m RandomForestRegressor[50;194H[K[50;194H115,107[7C53%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;89H[1;49r[49;1H
[1;50r[44;80H[106m([8C)[m[49;61H[35mfrom[m sklearn.model_selection [35mimport[m RandomizedSearchCV[50;194H[K[50;194H116,89[8C54%[44;89H[?25h[?25l[50;184H~@k[44;89H[50;184H   [44;69H[1;49r[49;1H
[1;50r[43;80H([8C)[49;61H[35mfrom[m scipy.stats [35mimport[m randint[50;194H[K[50;194H117,69[8C55%[44;69H[?25h[?25l[50;184H~@k[44;69H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H118,0-1[7C56%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;61Hparam_distribs = {[50;194H[K[50;194H119,0-1[7C56%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77H[31m'n_estimators'[m: randint(low=[31m1[m, high=[31m200[m),[50;194H[K[50;194H120,107[7C57%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;85H[31m'max_features'[m: randint(low=[31m1[m, high=[31m8[m),[50;194H[K[50;194H121,107[7C58%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;91H[1;49r[49;1H
[1;50r[49;89H}[50;194H[K[50;194H122,91[8C59%[44;91H[?25h[?25l[50;184H~@k[44;91H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H123,0-1[7C59%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;78H[1;49r[49;1H
[1;50r[44;78H[106m{[47;89H}[m[49;61Hforest_reg = RandomForestRegressor(random_state=[31m42[m)[50;194H[K[50;194H124,78[8C60%[44;78H[?25h[?25l[50;184H~@k[44;78H[50;184H   [44;107H[1;49r[49;1H
[1;50r[43;78H{[46;89H}[49;61Hrnd_search = RandomizedSearchCV(forest_reg, param_distributions=param_distribs,[50;194H[K[50;194H125,107[7C61%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;101Hn_iter=[31m10[m, cv=[31m5[m, scoring=[31m'neg_mean_squared_error'[m, random_state=[31m42[m)[50;194H[K[50;194H126,107[7C62%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;89H[1;49r[49;1H
[1;50r[41;78H[106m{[44;89H}[m[49;61Hrnd_search.fit(housing_prepared, housing_labels)[50;194H[K[50;194H127,89[8C62%[44;89H[?25h[?25l[50;184H~@k[44;89H[50;184H   [44;1H[1;49r[49;1H
[1;50r[40;78H{[43;89H}[49;61Hcvres = rnd_search.cv_results_[50;194H[K[50;194H128,0-1[7C63%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;61H[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):[50;194H[K[50;194H129,107[7C64%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;69H[36mprint[m(np.sqrt(-mean_score), params)[50;194H[K[50;194H130,107[7C65%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H131,107[7C65%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H132,107[7C66%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;90H[1;49r[49;1H
[1;50r[49;69H[35mfrom[m sklearn.model_selection [35mimport[m GridSearchCV[50;194H[K[50;194H133,90[8C67%[44;90H[?25h[?25l[50;184H~@k[44;90H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H134,107[7C68%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;103H[1;49r[49;1H
[1;50r[44;74H[106m([28C)[m[49;69Hparam_grid = [[50;194H[K[50;194H135,103[7C68%[44;103H[?25h[?25l[50;184H~@k[44;103H[50;184H   [44;1H[1;49r[49;1H
[1;50r[43;74H([28C)[49;81H[34m# try 12 (3×[49;93H4) combinations of hyperparameters[m[50;194H[K[50;194H136,0-1[7C69%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;85H{[31m'n_estimators'[m: [[31m3[m, [31m10[m, [31m30[m], [31m'max_features'[m: [[31m2[m, [31m4[m, [31m6[m, [31m8[m]},[50;194H[K[50;194H137,0-1[7C70%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;89H[34m# then try 6 (2×[49;105H3) combinations with bootstrap set as False[m[50;194H[K[50;194H138,107[7C71%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;93H{[31m'bootstrap'[m: [[36mFalse[m], [31m'n_estimators'[m: [[31m3[m, [31m10[m], [31m'max_features'[m: [[31m2[m, [31m3[m, [31m4[m]},[50;194H[K[50;194H139,0-1[7C71%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;82H[1;49r[49;1H
[1;50r[44;82H[106m[[49;95H][m[50;194H[K[50;194H140,82[8C72%[44;82H[?25h[?25l[50;184H~@k[44;82H[50;184H   [44;107H[1;49r[49;1H
[1;50r[43;82H[[48;95H][50;194H[K[50;194H141,108-107   73%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;69Hforest_reg = RandomForestRegressor(random_state=[31m42[m)[50;194H[K[50;194H142,107[7C74%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;69H[34m# train across 5 folds, that's a total of (12+6)*5=90 rounds of training [m[50;194H[K[50;194H143,108-107   75%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[44;107H[106m[[5C][m[49;69Hgrid_search = GridSearchCV(forest_reg, param_grid, cv=[31m5[m,[50;194H[K[50;194H144,107[7C75%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;95H[1;49r[49;1H
[1;50r[39;82H[106m[[m[43;107H[[5C][44;95H[106m][m[49;104Hscoring=[31m'neg_mean_squared_error'[m, return_train_score=[36mTrue[m)[50;194H[K[50;194H145,95[8C76%[44;95H[?25h[?25l[50;184H~@k[44;95H[50;184H   [44;1H[1;49r[49;1H
[1;50r[38;82H[[43;95H][49;69Hgrid_search.fit(housing_prepared, housing_labels)[50;194H[K[50;194H146,0-1[7C77%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H147,107[7C78%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;69Hgrid_search.best_params_[50;194H[K[50;194H148,107[7C78%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;69Hcvres = grid_search.cv_results_[50;194H[K[50;194H149,107[7C79%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;69H[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):[50;194H[K[50;194H150,107[7C80%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77H[36mprint[m(np.sqrt(-mean_score), params)[50;194H[K[50;194H151,107[7C81%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H152,0-1[7C81%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;92H[1;49r[49;1H
[1;50r[49;77Hfeature_importances = grid_search.best_estimator_.feature_importances_[50;194H[K[50;194H153,92[8C82%[44;92H[?25h[?25l[50;184H~@k[44;92H[50;184H   [44;99H[1;49r[49;1H
[1;50r[49;77H[36msorted[m([36mzip[m(feature_importances, housing_prepared.columns), reverse=[36mTrue[m)[50;194H[K[50;194H154,99[8C83%[44;99H[?25h[?25l[50;184H~@k[44;99H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H155,107[7C84%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H156,107[7C84%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;77Hfinal_model = grid_search.best_estimator_[50;194H[K[50;194H157,0-1[7C85%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H158,107[7C86%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77HX_test = strat_test_set.drop([31m"median_house_value"[m, axis=[31m1[m)[50;194H[K[50;194H159,107[7C87%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;77Hy_test = strat_test_set[[31m"median_house_value"[m].copy()[50;194H[K[50;194H160,0-1[7C87%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H161,0-1[7C88%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77HX_test_num = X_test.drop([31m'ocean_proximity'[m, axis=[31m1[m)[50;194H[K[50;194H162,107[7C89%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;77HX_test_prepared = imputer.transform(X_test_num)[50;194H[K[50;194H163,0-1[7C90%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77HX_test_prepared = pd.DataFrame(X_test_prepared, columns=X_test_num.columns,[50;194H[K[50;194H164,107[7C90%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;111Hindex=X_test.index)[50;194H[K[50;194H165,107[7C91%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;77HX_test_prepared[[31m"rooms_per_household"[m] = X_test_prepared[[31m"total_rooms"[m]/X_test_prepared[[31m"households"[m][50;194H[K[50;194H166,0-1[7C92%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77HX_test_prepared[[31m"bedrooms_per_room"[m] = X_test_prepared[[31m"total_bedrooms"[m]/X_test_prepared[[31m"total_rooms"[m][50;194H[K[50;194H167,107[7C93%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77HX_test_prepared[[31m"population_per_household"[m]=X_test_prepared[[31m"population"[m]/X_test_prepared[[31m"households"[m][50;194H[K[50;194H168,107[7C93%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[44;107H[106m([45;129H)[m[50;194H[K[50;194H169,107[7C94%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[43;107H([44;129H)[49;77HX_test_cat = X_test[[[31m'ocean_proximity'[m]][50;194H[K[50;194H170,107[7C95%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77HX_test_prepared = X_test_prepared.join(pd.get_dummies(X_test_cat, drop_first=[36mTrue[m))[50;194H[K[50;194H171,107[7C96%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H172,107[7C96%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[50;194H[K[50;194H173,107[7C97%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;77Hfinal_predictions = final_model.predict(X_test_prepared)[50;194H[K[50;194H174,0-1[7C98%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77Hfinal_mse = mean_squared_error(y_test, final_predictions)[50;194H[K[50;194H175,107[7C99%[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [44;107H[1;49r[49;1H
[1;50r[49;77Hfinal_rmse = np.sqrt(final_mse)[50;194H[K[50;194H176,107[7CBot[44;107H[?25h[?25l[50;184H~@k[44;107H[50;184H   [45;1H[50;196H7,0-1[45;1H[?25h[?25l[50;184H~@k[45;1H[50;184H   [46;1H[50;196H8[46;1H[?25h[?25l[50;184H~@k[46;1H[50;184H   [47;107H[50;196H9,107[47;107H[?25h[?25l[50;184H~@k[47;107H[50;184H   [48;107H[106m([25C)[m[50;195H80[48;107H[?25h[?25l[50;184H~@k[48;107H[50;184H   [49;107H[48;107H([25C)[49;97H[106m([9C)[m[50;196H1[49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@k[49;107H[50;184H   [49;107H[?25h[?25l[50;184H~@ý[49;107H[50;184H   [49;90H[7C([9C)[50;198H90 [49;90H[?25h[?25l[50;184H~@ý[49;90H[50;184H   [49;88H[50;198H88[49;88H[?25h[?25l[50;184H~@ý[49;88H[50;184H   [49;77H[50;198H77[49;77H[?25h[?25l[50;184H~@ý[49;77H[50;184H   [48;116H[50;196H0,116[48;116H[?25h[?25l[50;184H~@ý[48;116H[50;184H   [48;89H[50;198H89 [48;89H[?25h[?25l[50;184H~@ý[48;89H[50;184H   [48;87H[50;199H7[48;87H[?25h[?25l[50;184H~@ý[48;87H[50;184H   [48;77H[50;198H7[48;77H[?25h[?25l[50;184H~@ý[48;77H[50;184H   [47;97H[50;195H79,9[47;97H[?25h[?25l[50;184H~@k[47;97H[50;184H   [46;1H[50;196H8,0-1[46;1H[?25h[?25l[50;184H~@k[46;1H[50;184H   [45;1H[50;196H7[45;1H[?25h[?25l[50;184H~@k[45;1H[50;184H   [44;97H[50;196H6,97 [44;97H[?25h[?25l[50;184H~@k[44;97H[50;184H   [43;97H[106m[[17C][m[50;196H5[43;97H[?25h[?25l[50;184H~@k[43;97H[50;184H   [42;1H[43;97H[[17C][50;196H4,0-1[42;1H[?25h[?25l[50;184H~@k[42;1H[50;184H   [41;97H[50;196H3,97 [41;97H[?25h[?25l[50;184H~@k[41;97H[50;184H   [40;97H[50;196H2[40;97H[?25h[?25l[50;184H~@k[40;97H[50;184H   [39;97H[50;196H1[39;97H[?25h[?25l[50;184H~@k[39;97H[50;184H   [38;97H[50;196H0[38;97H[?25h[?25l[50;184H~@k[38;97H[50;184H   [37;97H[50;195H69[37;97H[?25h[?25l[50;184H~@k[37;97H[50;184H   [36;97H[50;196H8[36;97H[?25h[?25l[50;184H~@k[36;97H[50;184H   [35;97H[50;196H7[35;97H[?25h[?25l[50;184H~@k[35;97H[50;184H   [34;1H[50;196H6,0-1[34;1H[?25h[?25l[50;184H~@k[34;1H[50;184H   [33;97H[50;196H5,97 [33;97H[?25h[?25l[50;184H~@k[33;97H[50;184H   [32;97H[50;196H4[32;97H[?25h[?25l[50;184H~@k[32;97H[50;184H   [31;1H[50;196H3,0-1[31;1H[?25h[?25l[50;184H~@k[31;1H[50;184H   [30;97H[50;196H2,97 [30;97H[?25h[?25l[50;184H~@k[30;97H[50;184H   [29;1H[50;196H1,0-1[29;1H[?25h[?25l[50;184H~@k[29;1H[50;184H   [28;1H[50;196H0[28;1H[?25h[?25l[50;184H~@k[28;1H[50;184H   [27;97H[50;195H59,97 [27;97H[?25h[?25l[50;184H~@k[27;97H[50;184H   [26;97H[50;196H8[26;97H[?25h[?25l[50;184H~@k[26;97H[50;184H   [25;1H[50;196H7,0-1[25;1H[?25h[?25l[50;184H~@k[25;1H[50;184H   [24;97H[50;196H6,97 [24;97H[?25h[?25l[50;184H~@k[24;97H[50;184H   [23;97H[50;196H5[23;97H[?25h[?25l[50;184H~@k[23;97H[50;184H   [22;97H[50;196H4[22;97H[?25h[?25l[50;184H~@k[22;97H[50;184H   [21;92H[50;196H3,92[21;92H[?25h[?25l[50;184H~@k[21;92H[50;184H   [20;1H[50;196H2,0-1[20;1H[?25h[?25l[50;184H~@k[20;1H[50;184H   [19;97H[50;196H1,97 [19;97H[?25h[?25l[50;184H~@k[19;97H[50;184H   [18;97H[50;196H0[18;97H[?25h[?25l[50;184H~@k[18;97H[50;184H   [17;97H[50;195H49[17;97H[?25h[?25l[50;184H~@k[17;97H[50;184H   [16;97H[50;196H8[16;97H[?25h[?25l[50;184H~@k[16;97H[50;184H   [15;97H[50;196H7[15;97H[?25h[?25l[50;184H~@k[15;97H[50;184H   [14;1H[50;196H6,0-1[14;1H[?25h[?25l[50;184H~@k[14;1H[50;184H   [13;95H[8;82H[106m[[13;95H][m[50;196H5,95 [13;95H[?25h[?25l[50;184H~@k[13;95H[50;184H   [12;97H[8;82H[[13;95H][50;196H4,97[12;97H[?25h[?25l[50;184H~@k[12;97H[50;184H   [11;97H[50;196H3[11;97H[?25h[?25l[50;184H~@k[11;97H[50;184H   [10;97H[50;196H2[10;97H[?25h[?25l[50;184H~@k[10;97H[50;184H   [9;97H[50;196H1,98-97[9;97H[?25h[?25l[50;184H~@k[9;97H[50;184H   [8;82H[106m[[13;95H][m[50;196H0,82   [8;82H[?25h[?25l[50;184H~@k[8;82H[50;184H   [7;1H[8;82H[[13;95H][50;195H39,0-1[7;1H[?25h[?25l[50;184H~@k[7;1H[50;184H   [6;97H[50;196H8,97 [6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hrnd_search.fit(housing_prepared, housing_labels)[50;194H[K[50;194H137,0-1[7C99%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;101Hn_iter=[31m10[m, cv=[31m5[m, scoring=[31m'neg_mean_squared_error'[m, random_state=[31m42[m)[50;194H[K[50;194H136,0-1[7C98%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hrnd_search = RandomizedSearchCV(forest_reg, param_distributions=param_distribs,[50;194H[K[50;194H135,97[8C97%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hforest_reg = RandomForestRegressor(random_state=[31m42[m)[50;194H[K[50;194H134,97[8C96%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;90H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H133,90[8C96%[6;90H[?25h[?25l[50;184H~@k[6;90H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;89H}[50;194H[K[50;194H132,97[8C95%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;85H[31m'max_features'[m: randint(low=[31m1[m, high=[31m8[m),[50;194H[K[50;194H131,97[8C94%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;77H[31m'n_estimators'[m: randint(low=[31m1[m, high=[31m200[m),[50;194H[K[50;194H130,97[8C93%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hparam_distribs = {[50;194H[K[50;194H129,97[8C93%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H128,0-1[7C92%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;89H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m scipy.stats [35mimport[m randint[3;78H[106m{[6;89H}[m[50;194H[K[50;194H127,89[8C91%[6;89H[?25h[?25l[50;184H~@k[6;89H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.model_selection [35mimport[m RandomizedSearchCV[4;78H{[7;89H}[50;194H[K[50;194H126,97[8C90%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.ensemble [35mimport[m RandomForestRegressor[50;194H[K[50;194H125,97[8C90%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;78H[1;49r[1;1H[L[1;50r[6;78H[106m{[9;89H}[m[50;194H[K[50;194H124,78[8C89%[6;78H[?25h[?25l[50;184H~@k[6;78H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;78H{[10;89H}[50;194H[K[50;194H123,0-1[7C88%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;91H[1;49r[1;1H[L[1;50r[1;61Htree_rmse[50;194H[K[50;194H122,91[8C87%[6;91H[?25h[?25l[50;184H~@k[6;91H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Htree_rmse = np.sqrt(tree_mse)[50;194H[K[50;194H121,97[8C87%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Htree_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H120,97[8C86%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing_predictions = tree_reg.predict(housing_prepared)[50;194H[K[50;194H119,0-1[7C85%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H118,0-1[7C84%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;69H[1;49r[1;1H[L[1;50r[1;61Htree_reg.fit(housing_prepared, housing_labels)[50;194H[K[50;194H117,69[8C84%[6;69H[?25h[?25l[50;184H~@k[6;69H[50;184H   [6;89H[1;49r[1;1H[L[1;50r[1;61Htree_reg = DecisionTreeRegressor(random_state=[31m42[m)[6;80H[106m([8C)[m[50;194H[K[50;194H116,89[8C83%[6;89H[?25h[?25l[50;184H~@k[6;89H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[7;80H([8C)[50;194H[K[50;194H115,97[8C82%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.tree [35mimport[m DecisionTreeRegressor[50;194H[K[50;194H114,97[8C81%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H113,0-1[7C81%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H112,97[8C80%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hlin_mae[50;194H[K[50;194H111,97[8C79%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hlin_mae = mean_absolute_error(housing_labels, housing_predictions)[50;194H[K[50;194H110,0-1[7C78%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.metrics [35mimport[m mean_absolute_error[50;194H[K[50;194H109,97[8C78%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H108,0-1[7C77%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H107,0-1[7C76%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;67H[1;49r[1;1H[L[1;50r[1;61Hlin_rmse[50;194H[K[50;194H106,67[8C75%[6;67H[?25h[?25l[50;184H~@k[6;67H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hlin_rmse = np.sqrt(lin_mse)[50;194H[K[50;194H105,97[8C75%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hlin_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H104,97[8C74%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing_predictions = lin_reg.predict(housing_prepared)[50;194H[K[50;194H103,0-1[7C73%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.metrics [35mimport[m mean_squared_error[50;194H[K[50;194H102,0-1[7C72%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;68H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H101,68[8C71%[6;68H[?25h[?25l[50;184H~@k[6;68H[50;184H   [6;87H[1;49r[1;1H[L[1;50r[1;61Hlin_reg.fit(housing_prepared, housing_labels)[6;79H[106m([7C)[m[50;194H[K[50;194H100,87[8C71%[6;87H[?25h[?25l[50;184H~@k[6;87H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hlin_reg = LinearRegression()[7;79H([7C)[50;194H[K[50;194H99,97[9C70%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H98,97[9C69%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.linear_model [35mimport[m LinearRegression[50;194H[K[50;194H97,97[9C68%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H96,0-1[8C68%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing_prepared = housing_tr.join(pd.get_dummies(housing_cat, drop_first=[36mTrue[m))[50;194H[K[50;194H95,97[9C67%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[1;61Hhousing_cat = housing[[[31m'ocean_proximity'[m]][6;87H[106m()[m[50;194H[K[50;194H94,88[9C66%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;87H()[50;194H[K[50;194H93,0-1[8C65%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing_tr[[31m"population_per_household"[m]=housing_tr[[31m"population"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H92,97[9C65%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing_tr[[31m"bedrooms_per_room"[m] = housing_tr[[31m"total_bedrooms"[m]/housing_tr[[31m"total_rooms"[m][50;194H[K[50;194H91,0-1[8C64%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing_tr[[31m"rooms_per_household"[m] = housing_tr[[31m"total_rooms"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H90,97[9C63%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;95Hindex=housing.index)[50;194H[K[50;194H89,97[9C62%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing_tr = pd.DataFrame(X, columns=housing_num.columns,[50;194H[K[50;194H88,0-1[8C62%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H87,97[9C61%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61HX = imputer.transform(housing_num)[50;194H[K[50;194H86,97[9C60%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Himputer.fit(housing_num)[50;194H[K[50;194H85,97[9C59%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H84,97[9C59%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing_num = housing.drop([31m'ocean_proximity'[m, axis=[31m1[m)[50;194H[K[50;194H83,97[9C58%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H82,0-1[8C57%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;94H[1;49r[1;1H[L[1;50r[1;61Himputer = SimpleImputer(strategy=[31m"median"[m)[6;82H[106m([11C)[m[50;194H[K[50;194H81,94[9C56%[6;94H[?25h[?25l[50;184H~@k[6;94H[50;184H   [6;84H[1;49r[1;1H[L[1;50r[1;61H[35mfrom[m sklearn.impute [35mimport[m SimpleImputer[6;72H[106m([11C)[m[7;82H([11C)[50;194H[K[50;194H80,84[9C56%[6;84H[?25h[?25l[50;184H~@k[6;84H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;72H([11C)[50;194H[K[50;194H79,0-1[8C55%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing_labels = strat_train_set[[31m"median_house_value"[m].copy()[50;194H[K[50;194H78,97[9C54%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing = strat_train_set.drop([31m"median_house_value"[m, axis=[31m1[m) [34m# drop labels for training set[m[50;194H[K[50;194H77,0-1[8C53%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H76,97[9C53%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing[[31m"population_per_household"[m]=housing[[31m"population"[m]/housing[[31m"households"[m][50;194H[K[50;194H75,97[9C52%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hhousing[[31m"bedrooms_per_room"[m] = housing[[31m"total_bedrooms"[m]/housing[[31m"total_rooms"[m][50;194H[K[50;194H74,0-1[8C51%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing[[31m"rooms_per_household"[m] = housing[[31m"total_rooms"[m]/housing[[31m"households"[m][50;194H[K[50;194H73,97[9C50%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hcorr_matrix[[31m"median_house_value"[m].sort_values(ascending=[36mFalse[m)[50;194H[K[50;194H72,97[9C50%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hcorr_matrix = housing.corr()[50;194H[K[50;194H71,0-1[8C49%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H70,97[9C48%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m, alpha=[31m0.1[m)[50;194H[K[50;194H69,97[9C47%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m)[50;194H[K[50;194H68,97[9C46%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61Hhousing = strat_train_set.copy()[50;194H[K[50;194H67,97[9C46%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[6;87H[106m()[m[50;194H[K[50;194H66,88[9C45%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;61Hset_.drop([31m"income_cat"[m, axis=[31m1[m, inplace=[36mTrue[m)[7;87H()[50;194H[K[50;194H65,0-1[8C44%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;53H[38;5;130mfor[m set_ [38;5;130min[m (strat_train_set, strat_test_set):[50;194H[K[50;194H64,97[9C43%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H63,97[9C43%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;92H[1;49r[1;1H[L[1;50r[1;53Hcompare_props[[31m"Strat. %error"[m] = [31m100[m * compare_props[[31m"Stratified"[m] / compare_props[[31m"Overall"[m] - [31m100[m[6;91H[106m()[m[50;194H[K[50;194H62,92[9C42%[6;92H[?25h[?25l[50;184H~@k[6;92H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;53Hcompare_props[[31m"Rand. %error"[m] = [31m100[m * compare_props[[31m"Random"[m] / compare_props[[31m"Overall"[m] - [31m100[m[7;91H()[50;194H[K[50;194H61,0-1[8C41%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;69H}).sort_index()[50;194H[K[50;194H60,97[9C40%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;69H[31m"Random"[m: income_cat_proportions(test_set),[6;65H[106m([31C)[m[50;194H[K[50;194H59,97[9C40%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;65H[31m"Stratified"[m: income_cat_proportions(strat_test_set),[7;65H([31C)[50;194H[K[50;194H58,0-1[8C39%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;61H[31m"Overall"[m: income_cat_proportions(housing),[50;194H[K[50;194H57,97[9C38%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;53Hcompare_props = pd.DataFrame({[50;194H[K[50;194H56,97[9C37%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;83H[1;49r[1;1H[L[1;50r[6;82H[106m()[m[50;194H[K[50;194H55,83[9C37%[6;83H[?25h[?25l[50;184H~@k[6;83H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;53Htrain_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)[7;82H()[50;194H[K[50;194H54,97[9C36%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H53,97[9C35%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;57H[38;5;130mreturn[m data[[31m"income_cat"[m].value_counts() / [36mlen[m(data)[50;194H[K[50;194H52,97[9C34%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;82H[1;49r[1;1H[L[1;50r[1;49H[38;5;130mdef[m [36mincome_cat_proportions[m(data):[6;82H[106m{[10;69H}[m[50;194H[K[50;194H51,82[9C34%[6;82H[?25h[?25l[50;184H~@k[6;82H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;82H{[11;69H}[50;194H[K[50;194H50,0-1[8C33%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H49,97[9C32%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;49Hstrat_test_set = housing.loc[test_index][50;194H[K[50;194H48,0-1[8C31%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;45Hstrat_train_set = housing.loc[train_index][50;194H[K[50;194H47,97[9C31%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;81H[1;49r[1;1H[L[1;50r[1;37H[38;5;130mfor[m train_index, test_index [38;5;130min[m split.split(housing, housing[[31m"income_cat"[m]):[50;194H[K[50;194H46,81[9C30%[6;81H[?25h[?25l[50;184H~@k[6;81H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;37Hsplit = StratifiedShuffleSplit(n_splits=[31m1[m, test_size=[31m0.2[m, random_state=[31m42[m)[50;194H[K[50;194H45,0-1[8C29%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H44,0-1[8C28%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[1;37H[35mfrom[m sklearn.model_selection [35mimport[m StratifiedShuffleSplit[6;77H[106m[[10C][m[50;194H[K[50;194H43,88[9C28%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;86H[1;49r[1;1H[L[1;50r[6;74H[106m[[11C][m[7;77H[[10C][50;194H[K[50;194H42,86[9C27%[6;86H[?25h[?25l[50;184H~@k[6;86H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;107Hlabels=[[31m1[m, [31m2[m, [31m3[m, [31m4[m, [31m5[m])[7;74H[[11C][50;194H[K[50;194H41,97[9C26%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;76Hbins=[[31m0.[m, [31m1.5[m, [31m3.0[m, [31m4.5[m, [31m6.[m, np.inf],[50;194H[K[50;194H40,97[9C25%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;37Hhousing[[31m"income_cat"[m] = pd.cut(housing[[31m"median_income"[m],[50;194H[K[50;194H39,0-1[8C25%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;94H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H38,94[9C24%[6;94H[?25h[?25l[50;184H~@k[6;94H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;37Htrain_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)[50;194H[K[50;194H37,0-1[8C23%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H36,97[9C22%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[1;37H[35mfrom[m sklearn.model_selection [35mimport[m train_test_split[50;194H[K[50;194H35,97[9C21%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;92H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H34,92[9C21%[6;92H[?25h[?25l[50;184H~@k[6;92H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;37Hhousing = load_housing_data[50;194H[K[50;194H33,0-1[8C20%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;97H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H32,97[9C19%[6;97H[?25h[?25l[50;184H~@k[6;97H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;41H[38;5;130mreturn[m pd.read_csv(csv_path)[50;194H[K[50;194H31,0-1[8C18%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[1;37Hcsv_path = os.path.join(housing_path, [31m"housing.csv"[m)[50;194H[K[50;194H30,88[9C18%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;29H[38;5;130mdef[m [36mload_housing_data[m(housing_path=HOUSING_PATH):[50;194H[K[50;194H29,0-1[8C17%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;63H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H28,63[9C16%[6;63H[?25h[?25l[50;184H~@k[6;63H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;29H[35mimport[m pandas [38;5;130mas[m pd[50;194H[K[50;194H27,0-1[8C15%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;68H[1;49r[1;1H[L[1;50r[6;59H[106m([8C)[m[50;194H[K[50;194H26,68[9C15%[6;68H[?25h[?25l[50;184H~@k[6;68H[50;184H   [6;88H[1;49r[1;1H[L[1;50r[1;29Hhousing_tgz.close()[6;60H[106m([27C)[m[7;59H([8C)[50;194H[K[50;194H25,88[9C14%[6;88H[?25h[?25l[50;184H~@k[6;88H[50;184H   [6;77H[1;49r[1;1H[L[1;50r[1;25Hhousing_tgz.extractall(path=housing_path)[7;60H([27C)[50;194H[K[50;194H24,77[9C13%[6;77H[?25h[?25l[50;184H~@k[6;77H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;21Hhousing_tgz = tarfile.open(tgz_path)[50;194H[K[50;194H23,0-1[8C12%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;47H[1;49r[1;1H[L[1;50r[1;17Hurllib.request.urlretrieve(housing_url, tgz_path)[50;194H[K[50;194H22,47[9C12%[6;47H[?25h[?25l[50;184H~@k[6;47H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;13Htgz_path = os.path.join(housing_path, [31m"housing.tgz"[m)[50;194H[K[50;194H21,0-1[8C11%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;47H[1;49r[1;1H[L[1;50r[1;9Hos.makedirs(housing_path, exist_ok=[36mTrue[m)[6;46H[106m()[m[50;194H[K[50;194H20,47[9C10%[6;47H[?25h[?25l[50;184H~@k[6;47H[50;184H   [6;65H[1;49r[1;1H[L[1;50r[1;1H[38;5;130mdef[m [36mfetch_housing_data[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):[6;47H[106m([17C)[m[7;46H()[50;194H[K[50;194H19,65[10C9%[6;65H[?25h[?25l[50;184H~@k[6;65H[50;184H   [6;56H[1;49r[1;1H[L[1;50r[6;47H[106m([8C)[m[7;47H([17C)[50;194H[K[50;194H18,56[10C9%[6;56H[?25h[?25l[50;184H~@k[6;56H[50;184H   [6;65H[1;49r[1;1H[L[1;50r[1;1HHOUSING_URL = DOWNLOAD_ROOT + [31m"datasets/housing/housing.tgz"[m[6;43H[106m([21C)[m[7;47H([8C)[50;194H[K[50;194H17,65[10C8%[6;65H[?25h[?25l[50;184H~@k[6;65H[50;184H   [6;64H[1;49r[1;1H[L[1;50r[1;1HHOUSING_PATH = os.path.join([31m"datasets"[m, [31m"housing"[m)[6;36H[106m([27C)[m[7;43H([21C)[50;194H[K[50;194H16,64[10C7%[6;64H[?25h[?25l[50;184H~@k[6;64H[50;184H   [6;48H[1;49r[1;1H[L[1;50r[1;1HDOWNLOAD_ROOT = [31m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[m[6;20H[106m([27C)[m[7;36H([27C)[50;194H[K[50;194H15,48[10C6%[6;48H[?25h[?25l[50;184H~@k[6;48H[50;184H   [6;75H[1;49r[1;1H[L[1;50r[7;20H([27C)[50;194H[K[50;194H14,75[10C6%[6;75H[?25h[?25l[50;184H~@k[6;75H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H13,0-1[9C5%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;60H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m six.moves [35mimport[m urllib[50;194H[K[50;194H12,60[10C4%[6;60H[?25h[?25l[50;184H~@k[6;60H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m tarfile[6;28H[106m([21C)[m[50;194H[K[50;194H11,50[10C3%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;77H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m os[7;28H([21C)[50;194H[K[50;194H10,77[10C3%[6;77H[?25h[?25l[50;184H~@k[6;77H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m matplotlib.pyplot [38;5;130mas[m plt[50;194H[K[50;194H9,0-1[10C2%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m matplotlib [38;5;130mas[m mpl[50;194H[K[50;194H8,0-1[10C1%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;28H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m pandas [38;5;130mas[m pd[50;194H[K[50;194H7,28[11C0%[6;28H[?25h[?25l[50;184H~@k[6;28H[50;184H   [6;14H[1;49r[1;1H[L[1;50r[1;1Hmport numpy [38;5;130mas[m np[50;194H[K[50;194H6,14[10CTop[6;14H[?25h[?25l[50;184H~@k[6;14H[50;184H   [5;9H[50;194H5,9 [5;9H[?25h[?25l[50;184H~@k[5;9H[50;184H   [4;31H[50;194H4,31[4;31H[?25h[?25l[50;184H~@k[4;31H[50;184H   [3;24H[50;194H3,24[3;24H[?25h[?25l[50;184H~@k[3;24H[50;184H   [2;19H[50;194H2,19[2;19H[?25h[?25l[50;184H~@k[2;19H[50;184H   [1;17H[50;194H1,17[1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [1;17H[?25h[?25l[50;184H~@k[1;17H[50;184H   [2;19H[50;194H2,19[2;19H[?25h[?25l[50;184H~@k[2;19H[50;184H   [3;24H[50;194H3,24[3;24H[?25h[?25l[50;184H~@k[3;24H[50;184H   [4;31H[50;194H4,31[4;31H[?25h[?25l[50;184H~@k[4;31H[50;184H   [5;9H[50;194H5,9 [5;9H[?25h[?25l[50;184H~@k[5;9H[50;184H   [6;14H[50;194H6,14[6;14H[?25h[?25l[50;184H~@k[6;14H[50;184H   [7;28H[50;194H7,28[7;28H[?25h[?25l[50;184H~@k[7;28H[50;184H   [8;1H[50;194H8,0-1[8;1H[?25h[?25l[50;184H~@k[8;1H[50;184H   [9;1H[50;194H9[9;1H[?25h[?25l[50;184H~@k[9;1H[50;184H   [10;77H[50;194H10,77[10;77H[?25h[?25l[50;184H~@k[10;77H[50;184H   [11;50H[11;28H[106m([21C)[m[50;195H1,50[11;50H[?25h[?25l[50;184H~@k[11;50H[50;184H   [12;60H[11;28H([21C)[50;195H2,6[12;60H[?25h[?25l[50;184H~@k[12;60H[50;184H   [13;1H[50;195H3,0-1[13;1H[?25h[?25l[50;184H~@k[13;1H[50;184H   [14;75H[50;195H4,75 [14;75H[?25h[?25l[50;184H~@k[14;75H[50;184H   [15;48H[15;20H[106m([27C)[m[50;195H5,48[15;48H[?25h[?25l[50;184H~@k[15;48H[50;184H   [16;64H[15;20H([27C)[16;36H[106m([27C)[m[50;195H6,64[16;64H[?25h[?25l[50;184H~@k[16;64H[50;184H   [15;48H[15;20H[106m([27C)[m[16;36H([27C)[50;195H5,48[15;48H[?25h[?25l[50;184H~@ý[15;48H[50;184H   [15;35H[15;20H([27C)[50;197H35[15;35H[?25h[?25l[50;184H~@ý[15;35H[50;184H   [15;9H[50;197H9 [15;9H[?25h[?25l[50;184H~@ý[15;9H[50;184H   [14;49H[50;195H4,49[14;49H[?25h[?25l[50;184H~@ý[14;49H[50;184H   [14;5H[50;197H5 [14;5H[?25h[?25l[50;184H~@ý[14;5H[50;184H   [14;1H[50;197H1[14;1H[?25h[?25l[50;184H~@k[14;1H[50;184H   [15;1H[50;195H5[15;1H[?25h[?25l[50;184H~@ý[15;1H[50;184H   [15;9H[50;197H9[15;9H[?25h[?25l[50;184H~@k[15;9H[50;184H   [15;8H[50;197H8[15;8H[?25h[?25l[50;184H~@k[15;8H[50;184H   [15;7H[50;197H7[15;7H[?25h[?25l[50;184H~@k[15;7H[50;184H   [15;6H[50;197H6[15;6H[?25h[?25l[50;184H~@k[15;6H[50;184H   [15;5H[50;197H5[15;5H[?25h[?25l[50;184H~@k[15;5H[50;184H   [15;4H[50;197H4[15;4H[?25h[?25l[50;184H~@k[15;4H[50;184H   [15;3H[50;197H3[15;3H[?25h[?25l[50;184H~@k[15;3H[50;184H   [15;2H[50;197H2[15;2H[?25h[?25l[50;184H~@k[15;2H[50;184H   [15;1H[50;197H1[15;1H[?25h[?25l[50;184H^[[15;1H[50;184H  [15;1H[50;184H^[[15;1H[50;184H  [15;1H[?25h[?25l[50;184H^[[15;1H[50;184H  [15;1H[50;184H^[[15;1H[50;184H  [15;1H[?25h[?25l[50;184H:[15;1H[50;184H[K[50;1H:[?2004h[?25hq[?25l[?2004l[23;2t[23;1t[50;1H[K[50;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ rm nostandardcode.py 
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ pico nonstant[Kdardcode.pu[Ky
[?2004h[?1049h[22;0;0t[1;50r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[48;100H(B[0;7m[ New File ](B[m[H(B[0;7m  GNU nano 4.8                                                                                    nonstandardcode.py                                                                                               [1;210H(B[m[49d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[49;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-Q(B[m Previous     (B[0;7m^B(B[m Back[49;188H(B[0;7m^◀(B[m Prev Word[50d(B[0;7m^X(B[m Exit[50;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Paste Text    (B[0;7m^T(B[m To Spell[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[50;120H(B[0;7mM-6(B[m Copy Text    (B[0;7m^Q(B[m Where Was     (B[0;7mM-W(B[m Next[50;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^▶(B[m Next Word[48d[2d[39;49m(B[m[?12l[?25h[?25l[1;202H(B[0;7mModified(B[m[2d(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas(B[0m[42m [49m(B[m[?12l[?25h[?25l np[3dimpor[?12l[?25h[?25l(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[4di[48d[K[4di[?12l[?25h[?25l(B[0;1m[36mimport[39m(B[m ma[?12l[?25h[?25ltplotlib[?12l[?25h[?25l (B[0;1m[36mas[39m(B[m mpl[5d[?12l[?25h[?25l(B[0;1m[36mimport[39m(B[m m[?12l[?25h[?25latplotli[?12l[?25h[?25lb.pyplot[?12l[?25h[?25l (B[0;1m[36mas[39m(B[m plt[6d[?12l[?25h[?25l(B[0;1m[36mimport[39m(B[m os[7d(B[0;1m[36mimport[39m(B[m[?12l[?25h[?25l tarfile[?12l[?25h[?25l[8d(B[0;1m[36mfrom[39m(B[m six.moves[42m [49m(B[m[?12l[?25h[?25l (B[0;1m[36mimport[39m(B[m urllib[11dDOWN[?12l[?25h[?25lLOAD_ROO[?12l[?25h[?25lT = "h[?12l[?25h[?25lttps://raw.githubuserco[?12l[?25h[?25lntent.com/ageron[?12l[?25h[?25l/handson[?12l[?25h[?25l[11;17H(B[0;1m[32m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[12d[39m(B[mHOUSI[?12l[?25h[?25lNG_P[?12l[?25h[?25lATH = os.path[?12l[?25h[?25l.join("[?12l[?25h[?25l(B[0;1m[32m"datasets"[39m(B[m, "h[?12l[?25h[?25l(B[0;1m[32m"housing"[39m(B[m)[13dHOU[?12l[?25h[?25lSING_URL = DO[?12l[?25h[?25lWNLO[?12l[?25h[?25lAD_ROOT +[?12l[?25h[?25l "data[?12l[?25h[?25lsets/hou[?12l[?25h[?25lsing/housing.tgz[?12l[?25h[?25l[13;31H(B[0;1m[32m"datasets/housing/housing.tgz"[15d[36mdef(B[0m[42m [49m(B[m[?12l[?25h[?25l(B[0;1m[34m fetch_housing_data[39m(B[m(housing_u[?12l[?25h[?25lrl=HOU[?12l[?25h[?25lSING_URL[?12l[?25h[?25l, housi[?12l[?25h[?25lng_path[?12l[?25h[?25l=HOUS[?12l[?25h[?25lING_[?12l[?25h[?25lPATH[?12l[?25h[?25l):[16;5Hos.mak[?12l[?25h[?25ledirs(housing_path, ex[?12l[?25h[?25list_ok=(B[0;1m[35mTrue[39m(B[m)[17;5Htgz_[?12l[?25h[?25lpath = os.path.[?12l[?25h[?25ljoin(housing_p[?12l[?25h[?25lath, "h[?12l[?25h[?25lousing.t[?12l[?25h[?25l[17;43H(B[0;1m[32m"housing.tgz"[39m(B[m)[18d[42m [49m(B[m[?12l[?25h[?25l    urllib.request.urlretrieve(housing_[?12l[?25h[?25lurl, tgz[?12l[?25h[?25l_path)[19;5Hhou[?12l[?25h[?25lsing_tgz = tarfile.open[?12l[?25h[?25l(tgz_p[?12l[?25h[?25lath)[20d[42m  [49m(B[m[?12l[?25h[?25l    housing_tgz.extractal[?12l[?25h[?25ll(path=[?12l[?25h[?25lhousing_path)[21d[?12l[?25h[?25l    housing_tgz[?12l[?25h[?25l.close([?12l[?25h[?25l)[23dimpo[?12l[?25h[?25l(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[25d(B[0;1m[36mdef[34m load_housing_data[39m(B[m[?12l[?25h[?25l(housing_path=HOUSING_PATH):[26d[42m   [49m(B[m[?12l[?25h[?25l    csv_path = os.path.join(housi[?12l[?25h[?25lng_path, "hous[?12l[?25h[?25l[43G(B[0;1m[32m"housing.csv"[39m(B[m[?12l[?25h[?25l)[27d[42m    [49m(B[m[?12l[?25h[?25l    (B[0;1m[36mreturn[39m(B[m pd.read_csv(csv_path)[?12l[?25h[?25l[29dhousin[?12l[?25h[?25lg = load_housing_data[31d(B[0;1m[36mfrom[39m(B[m sklearn.mo[?12l[?25h[?25ldel_selection (B[0;1m[36mimport[39m(B[m train_test_split[33dtrain_[?12l[?25h[?25lset, test_set = train_test_split(housing, t[?12l[?25h[?25lest_size=0.2, r[?12l[?25h[?25landom_state=42)[?12l[?25h[?25l[35dhousi[?12l[?25h[?25lng[(B[0;1m[32m"income_cat"[39m(B[m] = pd.cut(housing["median_[?12l[?25h[?25l[35;40H(B[0;1m[32m"median_income"[39m(B[m[?12l[?25h[?25l],[36;5H[42m[1K [49m(B[m[?12l[?25h[?25l[36;29H[42m[1K [49m(B[m[?12l[?25h[?25l [1K bins=[[?12l[?25h[?25l0., 1.5,[?12l[?25h[?25l 3.0, 4.[?12l[?25h[?25l5, 6., n[?12l[?25h[?25lp.inf],[37d[?12l[?25h[?25l[37;32Hlabels=[1[?12l[?25h[?25l, 2, 3, 4, 5])[38d[?12l[?25h[?25l[39d(B[0;1m[36mfrom[39m(B[m sklearn.model_sel[?12l[?25h[?25lection (B[0;1m[36mimport[39m(B[m StratifiedShuffleSplit[40d[?12l[?25h[?25l[41dsplit = StratifiedShuffleSpl[?12l[?25h[?25lit(n_splits=1, test_size=0.2, random_[?12l[?25h[?25lstate=42)[42d(B[0;1m[36mfor(B[0m[42m [49m(B[m[?12l[?25h[?25l train_index, test_index (B[0;1m[36min[39m(B[m split.split[?12l[?25h[?25l(housin[?12l[?25h[?25lg, housi[?12l[?25h[?25lng["inc[?12l[?25h[?25lome_cat[?12l[?25h[?25l[42;61H(B[0;1m[32m"income_cat"[39m(B[m]):[43d[?12l[?25h[?25l    strat_train_set = housing.loc[trai[?12l[?25h[?25ln_index][44;5Hst[?12l[?25h[?25lrat_test_set = housing[?12l[?25h[?25l.loc[tes[?12l[?25h[?25lt_index[?12l[?25h[?25l][47d(B[0;1m[36mdef[34m income_cat_pro[39m(B[m[?12l[?25h[?25l7[2;48r8[48d[3S[1;50r[44;19H(B[0;1m[34mportions[39m(B[m(data):[45;5H(B[0;1m[36mreturn[39m(B[m data[(B[0;1m[32m"income_cat"[39m(B[m].value_counts() / len(data)[47dtrain_set, test_s[?12l[?25h[?25l7[2;48r8[48d[3S[1;50r[44;18Het = train_test_split(housing, test_size=0.2, random_state=42)[46dcompare_props = pd.DataFrame({[47;5H(B[0;1m[32m"Overall"[39m(B[m: income_cat[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;26H_proportions(housing),[46;5H(B[0;1m[32m"Stratified"[39m(B[m: income_cat_proportions(strat_test_set),[47;5H(B[0;1m[32m"Random"[39m(B[m:[42m [49m(B[m[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;14H income_cat_proportions(test_set),[46d}).sort_index()[47dcompare_props[(B[0;1m[32m"Rand. %error"[39m(B[m] =[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;33H100 * compare_props[(B[0;1m[32m"Random"[39m(B[m] / compare_props[(B[0;1m[32m"Overall"[39m(B[m] - 100[47dcompare_props["Strat[?12l[?25h[?25l[15G(B[0;1m[32m"Strat. %error"[39m(B[m] = 100 * compare_props["Stratifi[?12l[?25h[?25l[47;54H(B[0;1m[32m"Stratified"[39m(B[m] / compare_[?12l[?25h[?25lprops["[?12l[?25h[?25lOveral[?12l[?25h[?25l[84G(B[0;1m[32m"Overall"[39m(B[m] - 1[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;98H00[47d(B[0;1m[36mfor(B[0m[42m [49m(B[m[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;4H set_ (B[0;1m[36min[39m(B[m (strat_train_set, strat_test_set):[47;5Hset_.drop((B[0;1m[32m"income_cat"[39m(B[m, axis=1, inpl[?12l[?25h[?25l7[2;48r8[48d[3S[1;50r[44;41Hace=(B[0;1m[35mTrue[39m(B[m)[46dhousing = strat_train_set.copy()[47dhousing.plot([?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;14Hkind=(B[0;1m[32m"scatter"[39m(B[m, x=(B[0;1m[32m"longitude"[39m(B[m, y=(B[0;1m[32m"latitude"[39m(B[m)[47dhousing.plot(kind=(B[0;1m[32m"scatter"[39m(B[m, x=(B[0;1m[32m"longitude"[39m(B[m, y="latitud[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;47H(B[0;1m[32m"latitude"[39m(B[m, alpha=0.1)[47dcorr_matrix = housing.corr()[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[46;1Hcorr_matrix[(B[0;1m[32m"median_house_value"[39m(B[m].sort_values(ascending=(B[0;1m[35mFalse[39m(B[m)[47dhousing["rooms_per_[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;9H(B[0;1m[32m"rooms_per_household"[39m(B[m] = housing[(B[0;1m[32m"total_rooms"[39m(B[m]/housing[(B[0;1m[32m"households"[39m(B[m][47dhousing[(B[0;1m[32m"bedrooms_per_room"[39m(B[m[?12l[?25h[?25l] = housing[(B[0;1m[32m"total_bedrooms"[39m(B[m]/housing[(B[0;1m[32m"total_rooms"[39m(B[m[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;79H][47dhousi[?12l[?25h[?25lng[(B[0;1m[32m"population_per_household"[39m(B[m]=housing["pop[?12l[?25h[?25l(B[0;1m[32m"population"[39m(B[m]/housi[?12l[?25h[?25lng["hou[?12l[?25h[?25l(B[0;1m[32m"households"[39m(B[m[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;79H][47dhous[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;5Hing = strat_train_set.drop((B[0;1m[32m"median_house_value"[39m(B[m, axis=1)(B[0;1m[31m # drop labels for training set[47d[39m(B[mhousing[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;8H_labels = strat_train_set[(B[0;1m[32m"median_house_value"[39m(B[m].copy()[47d[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[46;1H(B[0;1m[36mfrom[39m(B[m sklearn.impute (B[0;1m[36mimport[39m(B[m SimpleImputer[47dimputer = S[?12l[?25h[?25l7[2;48r8[48d[4S[1;50r[43;12HimpleImputer(strategy=(B[0;1m[32m"median"[39m(B[m)[45dhousing_num = housing.drop((B[0;1m[32m'ocean_proximity'[39m(B[m, axis=1)[47dimputer.fit(ho[?12l[?25h[?25l7[2;48r8[48d[5S[1;50r[42;15Husing_num)[43dX = imputer.transform(housing_num)[45dhousing_tr = pd.DataFrame(X, columns=housing_num.columns,[46;27Hindex=housing.index)[47dhousing_tr[(B[0;1m[32m"rooms_per_household"[39m(B[m] = housing_t[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;46Hr[(B[0;1m[32m"total_rooms"[39m(B[m]/housing_tr[(B[0;1m[32m"households"[39m(B[m][46dhousing_tr[(B[0;1m[32m"bedrooms_per_room"[39m(B[m] = housing_tr[(B[0;1m[32m"total_bedrooms"[39m(B[m]/housing_tr[(B[0;1m[32m"total_rooms"[39m(B[m][47dhousing_tr[(B[0;1m[32m"population_per_household"[39m(B[m]=housing_tr[(B[0;1m[32m"population"[39m(B[m]/ho[?12l[?25h[?25l7[2;48r8[48d[3S[1;50r[44;67Husing_tr[(B[0;1m[32m"households"[39m(B[m][46dhousing_cat = housing[[(B[0;1m[32m'ocean_proximity'[39m(B[m]][47dhousing_prepared = housing_tr.join(pd[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;38H.get_dummies(housing_cat, drop_first=(B[0;1m[35mTrue[39m(B[m))[47d(B[0;1m[36mfrom[39m(B[m[?12l[?25h[?25l sklearn[?12l[?25h[?25l.linear_[?12l[?25h[?25lmodel i[?12l[?25h[?25l(B[0;1m[36mimport[39m(B[m L[?12l[?25h[?25linearRegression[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[47;1Hlin_r[?12l[?25h[?25l7[2;48r8[48d[3S[1;50r[44;6Heg = LinearRegression()[45dlin_reg.fit(housing_prepared, housing_labels)[47d(B[0;1m[36mfrom[39m(B[m sklearn.metrics (B[0;1m[36mimport[39m(B[m mean_square[?12l[?25h[?25l7[2;48r8[48d[3S[1;50r[44;40Hd_error[45dhousing_predictions = lin_reg.predict(housing_prepared)[46dlin_mse = mean_squared_error(housing_labels, housing_predictions)[47dl[?12l[?25h[?25l7[2;48r8[48d[5S[1;50r[42;2Hin_rmse = np.sqrt(lin_mse)[43dlin_rmse[46d(B[0;1m[36mfrom[39m(B[m sklearn.metrics (B[0;1m[36mimport[39m(B[m mean_absolute_error[47dlin_mae = mean_absolute_error(h[?12l[?25h[?25l7[2;48r8[48d[7S[1;50r[40;32Housing_labels, housing_predictions)[41dlin_mae[44d(B[0;1m[36mfrom[39m(B[m sklearn.tree (B[0;1m[36mimport[39m(B[m DecisionTreeRegressor[46dtree_reg = DecisionTreeRegressor(random_state=42)[47dtree_reg.[?12l[?25h[?25l7[2;48r8[48d[8S[1;50r[39;10Hfit(housing_prepared, housing_labels)[41dhousing_predictions = tree_reg.predict(housing_prepared)[42dtree_mse = mean_squared_error(housing_labels, housing_predictions)[43dtree_rmse = np.sqrt(tree_mse)[44dtree_rmse[47d(B[0;1m[36mfrom[39m(B[m sklearn.ensemble (B[0;1m[36mimport[39m(B[m RandomF[?12l[?25h[?25l7[2;48r8[48d[9S[1;50r[38;37HorestRegressor[39d(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m RandomizedSearchCV[40d(B[0;1m[36mfrom[39m(B[m scipy.stats (B[0;1m[36mimport[39m(B[m randint[42dparam_distribs = {[43;9H(B[0;1m[32m'n_estimators'[39m(B[m: randint(low=1, high=200),[44;9H(B[0;1m[32m'max_features'[39m(B[m: randint(low=1, high=8),[45;5H}[47dforest_reg = RandomForestRegress[?12l[?25h[?25l7[2;48r8[48d[4S[1;50r[43;33Hor(random_state=42)[44drnd_search = RandomizedSearchCV(forest_reg, param_distributions=param_distribs,[45;33Hn_iter=10, cv=5, scoring=(B[0;1m[32m'neg_mean_squared_error'[39m(B[m, random_state=42)[46drnd_search.fit(housing_prepared, housing_labels)[47d[?12l[?25h[?25lcvres =[42m [49m(B[m[?12l[?25h[?25l rnd_sea[?12l[?25h[?25lrch.cv_[?12l[?25h[?25lresults_[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfor[39m(B[m me[?12l[?25h[?25lan_score, params (B[0;1m[36min[39m(B[m zip(cvres[(B[0;1m[32m"mean_test_score"[39m(B[m],[42m [49m(B[m[?12l[?25h[?25l cvres["[?12l[?25h[?25l(B[0;1m[32m"params"[39m(B[m[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;71H]):[47d[42m  [49m(B[m[?12l[?25h[?25l[2;46r[46;1H[3S[1;50r[44;5Hprint(np.sqrt(-mean_score), params)[47dfro[?12l[?25h[?25l7[2;48r8[48d[3S[1;50r[44;1H(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m GridSearchCV[46dparam_grid = [[47;4H(B[0;1m[31m # try 12 (3×4) combinations of hyperp[39m(B[m[?12l[?25h[?25l7[2;48r8[48d[9S[1;50r[38;42H(B[0;1m[31marameters[39;5H[39m(B[m{(B[0;1m[32m'n_estimators'[39m(B[m: [3, 10, 30], (B[0;1m[32m'max_features'[39m(B[m: [2, 4, 6, 8]},[40;4H(B[0;1m[31m # then try 6 (2×3) combinations with bootstrap set as False[41;5H[39m(B[m{(B[0;1m[32m'bootstrap'[39m(B[m: [(B[0;1m[35mFalse[39m(B[m], (B[0;1m[32m'n_estimators'[39m(B[m: [3, 10], (B[0;1m[32m'max_features'[39m(B[m: [2, 3, 4]},[42;3H][44dforest_reg = RandomForestRegressor(random_state=42)[45d(B[0;1m[31m# train across 5 folds, that's a total of (12+6)*5=90 rounds of training(B[0m[42m [46d[49m(B[mgrid_search = GridSearchCV(forest_reg, param_grid, cv=5,[47;11H[42m[1K [49m(B[m[?12l[?25h[?25l[2;46r[46;1H[8S[1;50r[39;28Hscoring=(B[0;1m[32m'neg_mean_squared_error'[39m(B[m, return_train_score=(B[0;1m[35mTrue[39m(B[m)[40dgrid_search.fit(housing_prepared, housing_labels)[42dgrid_search.best_params_[43dcvres = grid_search.cv_results_[44d(B[0;1m[36mfor[39m(B[m mean_score, params (B[0;1m[36min[39m(B[m zip(cvres[(B[0;1m[32m"mean_test_score"[39m(B[m], cvres[(B[0;1m[32m"params"[39m(B[m]):[45;5Hprint(np.sqrt(-mean_score), params)[47dfeature_importances = grid_search.b[?12l[?25h[?25l7[2;48r8[48d[4S[1;50r[43;36Hest_estimator_.feature_importances_[44dsorted(zip(feature_importances, housing_prepared.columns), reverse=(B[0;1m[35mTrue[39m(B[m)[47dfinal_model = grid_search.best_esti[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;36Hmator_[47d[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test = strat_test_set.drop("med[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;30H(B[0;1m[32m"median_house_value"[39m(B[m, axis=1)[47dy_test = strat_t[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;17Hest_set[(B[0;1m[32m"median_house_value"[39m(B[m].copy()[47dX_test_n[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;9Hum = X_test.drop((B[0;1m[32m'ocean_proximity'[39m(B[m, axis=1)[47dX_test_prepared = imputer.transform(X_test_num)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_prepared = pd.DataFrame(X_test_[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;39Hprepared, columns=X_test_num.columns,[47;7H[42m[1K [49m(B[m[?12l[?25h[?25l[2;46r[46;1H
[1;50r[46;27Hindex=X_test.index)[47dX_te[K[?12l[?25h[?25lst_prepared[(B[0;1m[32m"rooms_per_household"[39m(B[m] = X_test_prepared["t[?12l[?25h[?25lotal_ro[?12l[?25h[?25l[47;58H(B[0;1m[32m"total_rooms"[39m(B[m]/X[?12l[?25h[?25l_test_[?12l[?25h[?25lprepare[?12l[?25h[?25ld["hous[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;89H(B[0;1m[32m"households"[39m(B[m][47dX_te[?12l[?25h[?25lst_prepared[(B[0;1m[32m"bedrooms_per_room"[39m(B[m] = X_test_prepar[?12l[?25h[?25led["tot[?12l[?25h[?25lal_bedr[?12l[?25h[?25l[47;56H(B[0;1m[32m"total_bedrooms"[39m(B[m]/[?12l[?25h[?25lX_test[?12l[?25h[?25l_prepar[?12l[?25h[?25led["tot[?12l[?25h[?25lal_room[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;90H(B[0;1m[32m"total_rooms"[39m(B[m][47dX_test_p[?12l[?25h[?25lrepared[(B[0;1m[32m"population_per_household"[39m(B[m]=X_test_prepar[?12l[?25h[?25led["pop[?12l[?25h[?25l(B[0;1m[32m"population"[39m(B[m]/X_t[?12l[?25h[?25lest_prepared["[?12l[?25h[?25lhousehol[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;91H(B[0;1m[32m"households"[39m(B[m][47dX[?12l[?25h[?25l7[2;48r8[48d
[1;50r[46;2H_test_cat = X_test[[(B[0;1m[32m'ocean_proximity'[39m(B[m]][47dX_test_prepared = X_test_prepared.join(pd.get_dummies(X_test_cat, drop[?12l[?25h[?25l7[2;48r8[48d[3S[1;50r[44;71H_first=(B[0;1m[35mTrue[39m(B[m))[47dfinal_predictions = final_model.predict(X[?12l[?25h[?25l7[2;48r8[48d[2S[1;50r[45;42H_test_prepared)[46dfinal_mse = mean_squared_error(y_test, final_predictions)[47dfinal_rmse = np.sqrt(final_mse)[?12l[?25h[?25l[?12l[?25h[?25l[48d(B[0;7mSave modified buffer?                                                                                                                                                                                              [49;1H Y(B[m Yes[K[50d(B[0;7m N(B[m No  [50;17H(B[0;7m^C(B[m Cancel[K[48;23H[?12l[?25h[?25l[49d(B[0;7m^G(B[m Get Help[49;53H(B[0;7mM-D(B[m DOS Format[49;105H(B[0;7mM-A(B[m Append[49;157H(B[0;7mM-B(B[m Backup File[50d(B[0;7m^C(B[m Cancel[17G         [50;53H(B[0;7mM-M(B[m Mac Format[50;105H(B[0;7mM-P(B[m Prepend[50;157H(B[0;7m^T(B[m To Files[48d(B[0;7mFile Name to Write: nonstandardcode.py(B[m[48;39H[?12l[?25h[?25l[48;98H[1K (B[0;7m[ Writing... ](B[m[K[1;202H(B[0;7m        (B[m[48;97H(B[0;7m[ Wrote 181 lines ](B[m[J[50d[?12l[?25h[50;1H[?1049l[23;0;0t[?1l>[?2004l(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi nonstandardcode.py 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"nonstandardcode.py" 181L, 6908C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35mimport[m numpy [38;5;130mas[m np
[35mimport[m pandas [38;5;130mas[m pd
[35mimport[m matplotlib [38;5;130mas[m mpl
[35mimport[m matplotlib.pyplot [38;5;130mas[m plt
[35mimport[m os
[35mimport[m tarfile
[35mfrom[m six.moves [35mimport[m urllib


DOWNLOAD_ROOT = [31m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[m
HOUSING_PATH = os.path.join([31m"datasets"[m, [31m"housing"[m)
HOUSING_URL = DOWNLOAD_ROOT + [31m"datasets/housing/housing.tgz"[m

[38;5;130mdef[m [36mfetch_housing_data[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):
    os.makedirs(housing_path, exist_ok=[36mTrue[m)
    tgz_path = os.path.join(housing_path, [31m"housing.tgz"[m)
    urllib.request.urlretrieve(housing_url, tgz_path)
    housing_tgz = tarfile.open(tgz_path)
    housing_tgz.extractall(path=housing_path)
    housing_tgz.close()

[35mimport[m pandas [38;5;130mas[m pd

[38;5;130mdef[m [36mload_housing_data[m(housing_path=HOUSING_PATH):
    csv_path = os.path.join(housing_path, [31m"housing.csv"[m)
    [38;5;130mreturn[m pd.read_csv(csv_path)

housing = load_housing_data

[35mfrom[m sklearn.model_selection [35mimport[m train_test_split

train_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)

housing[[31m"income_cat"[m] = pd.cut(housing[[31m"median_income"[m],[35;32Hbins=[[31m0.[m, [31m1.5[m, [31m3.0[m, [31m4.5[m, [31m6.[m, np.inf],[36;32Hlabels=[[31m1[m, [31m2[m, [31m3[m, [31m4[m, [31m5[m])

[35mfrom[m sklearn.model_selection [35mimport[m StratifiedShuffleSplit

split = StratifiedShuffleSplit(n_splits=[31m1[m, test_size=[31m0.2[m, random_state=[31m42[m)
[38;5;130mfor[m train_index, test_index [38;5;130min[m split.split(housing, housing[[31m"income_cat"[m]):
    strat_train_set = housing.loc[train_index]
    strat_test_set = housing.loc[test_index]


[38;5;130mdef[m [36mincome_cat_proportions[m(data):
    [38;5;130mreturn[m data[[31m"income_cat"[m].value_counts() / [36mlen[m(data)

train_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)[50;194H1,1[11CTop[1;1H[?25h[?25l[50;184H~@k[1;1H[50;184H   [2;1H[50;194H2[2;1H[?25h[?25l[50;184H~@k[2;1H[50;184H   [3;1H[50;194H3[3;1H[?25h[?25l[50;184H~@k[3;1H[50;184H   [4;1H[50;194H4[4;1H[?25h[?25l[50;184H~@k[4;1H[50;184H   [5;1H[50;194H5[5;1H[?25h[?25l[50;184H~@k[5;1H[50;184H   [6;1H[50;194H6[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [7;1H[50;194H7[7;1H[?25h[?25l[50;184H~@k[7;1H[50;184H   [8;1H[50;194H8,0-1[8;1H[?25h[?25l[50;184H~@k[8;1H[50;184H   [9;1H[50;194H9[9;1H[?25h[?25l[50;184H~@k[9;1H[50;184H   [10;1H[50;194H10,1 [10;1H[?25h[?25l[50;184H~@k[10;1H[50;184H   [11;1H[50;195H1[11;1H[?25h[?25l[50;184H~@k[11;1H[50;184H   [12;1H[50;195H2[12;1H[?25h[?25l[50;184H~@k[12;1H[50;184H   [13;1H[50;195H3,0-1[13;1H[?25h[?25l[50;184H~@k[13;1H[50;184H   [14;1H[50;195H4,1  [14;1H[?25h[?25l[50;184H~@k[14;1H[50;184H   [15;1H[50;195H5[15;1H[?25h[?25l[50;184H~@k[15;1H[50;184H   [16;1H[50;195H6[16;1H[?25h[?25l[50;184H~@k[16;1H[50;184H   [17;1H[50;195H7[17;1H[?25h[?25l[50;184H~@k[17;1H[50;184H   [18;1H[50;195H8[18;1H[?25h[?25l[50;184H~@k[18;1H[50;184H   [19;1H[50;195H9[19;1H[?25h[?25l[50;184H~@k[19;1H[50;184H   [20;1H[50;194H20[20;1H[?25h[?25l[50;184H~@k[20;1H[50;184H   [21;1H[50;195H1,0-1[21;1H[?25h[?25l[50;184H~@k[21;1H[50;184H   [22;1H[50;195H2,1  [22;1H[?25h[?25l[50;184H~@k[22;1H[50;184H   [23;1H[50;195H3,0-1[23;1H[?25h[?25l[50;184H~@k[23;1H[50;184H   [24;1H[50;195H4,1  [24;1H[?25h[?25l[50;184H~@k[24;1H[50;184H   [25;1H[50;195H5[25;1H[?25h[?25l[50;184H~@k[25;1H[50;184H   [26;1H[50;195H6[26;1H[?25h[?25l[50;184H~@k[26;1H[50;184H   [27;1H[50;195H7,0-1[27;1H[?25h[?25l[50;184H~@k[27;1H[50;184H   [28;1H[50;195H8,1  [28;1H[?25h[?25l[50;184H~@k[28;1H[50;184H   [29;1H[50;195H9,0-1[29;1H[?25h[?25l[50;184H~@k[29;1H[50;184H   [30;1H[50;194H30,1  [30;1H[?25h[?25l[50;184H~@k[30;1H[50;184H   [31;1H[50;195H1,0-1[31;1H[?25h[?25l[50;184H~@k[31;1H[50;184H   [32;1H[50;195H2,1  [32;1H[?25h[?25l[50;184H~@k[32;1H[50;184H   [33;1H[50;195H3,0-1[33;1H[?25h[?25l[50;184H~@k[33;1H[50;184H   [34;1H[50;195H4,1  [34;1H[?25h[?25l[50;184H~@k[34;1H[50;184H   [35;1H[50;195H5[35;1H[?25h[?25l[50;184H~@k[35;1H[50;184H   [36;1H[50;195H6[36;1H[?25h[?25l[50;184H~@k[36;1H[50;184H   [37;1H[50;195H7,0-1[37;1H[?25h[?25l[50;184H~@k[37;1H[50;184H   [38;1H[50;195H8,1  [38;1H[?25h[?25l[50;184H~@k[38;1H[50;184H   [39;1H[50;195H9,0-1[39;1H[?25h[?25l[50;184H~@k[39;1H[50;184H   [40;1H[50;194H40,1  [40;1H[?25h[?25l[50;184H~@k[40;1H[50;184H   [41;1H[50;195H1[41;1H[?25h[?25l[50;184H~@k[41;1H[50;184H   [42;1H[50;195H2[42;1H[?25h[?25l[50;184H~@k[42;1H[50;184H   [43;1H[50;195H3[43;1H[?25h[?25l[50;184H~@k[43;1H[50;184H   [44;1H[50;195H4,0-1[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;1H[K[50;194H45,0-1[9C0%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hcompare_props = pd.DataFrame({[50;194H[K[50;194H46,1[11C1%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H[31m"Overall"[m: income_cat_proportions(housing),[50;194H[K[50;194H47,1[11C2%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H[31m"Stratified"[m: income_cat_proportions(strat_test_set),[50;194H[K[50;194H48,0-1[9C3%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H[31m"Random"[m: income_cat_proportions(test_set),[50;194H[K[50;194H49,1[11C3%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H}).sort_index()[50;194H[K[50;194H50,0-1[9C4%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hcompare_props[[31m"Rand. %error"[m] = [31m100[m * compare_props[[31m"Random"[m] / compare_props[[31m"Overall"[m] - [31m100[m[50;194H[K[50;194H51,1[11C5%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hcompare_props[[31m"Strat. %error"[m] = [31m100[m * compare_props[[31m"Stratified"[m] / compare_props[[31m"Overall"[m] - [31m100[m[50;194H[K[50;194H52,1[11C6%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H53,1[11C6%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[38;5;130mfor[m set_ [38;5;130min[m (strat_train_set, strat_test_set):[50;194H[K[50;194H54,1[11C7%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[40;30H[106m{[44;1H}[m[49;5Hset_.drop([31m"income_cat"[m, axis=[31m1[m, inplace=[36mTrue[m)[50;194H[K[50;194H55,1[11C8%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[39;30H{[43;1H}[50;194H[K[50;194H56,1[11C9%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing = strat_train_set.copy()[50;194H[K[50;194H57,1[11C9%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m)[50;194H[K[50;194H58,0-1[8C10%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m, alpha=[31m0.1[m)[50;194H[K[50;194H59,1[10C11%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H60,1[10C12%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hcorr_matrix = housing.corr()[50;194H[K[50;194H61,0-1[8C12%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hcorr_matrix[[31m"median_house_value"[m].sort_values(ascending=[36mFalse[m)[50;194H[K[50;194H62,1[10C13%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing[[31m"rooms_per_household"[m] = housing[[31m"total_rooms"[m]/housing[[31m"households"[m][50;194H[K[50;194H63,1[10C14%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing[[31m"bedrooms_per_room"[m] = housing[[31m"total_bedrooms"[m]/housing[[31m"total_rooms"[m][50;194H[K[50;194H64,1[10C15%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing[[31m"population_per_household"[m]=housing[[31m"population"[m]/housing[[31m"households"[m][50;194H[K[50;194H65,0-1[8C15%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H66,1[10C16%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing = strat_train_set.drop([31m"median_house_value"[m, axis=[31m1[m) [34m# drop labels for training set[m[50;194H[K[50;194H67,1[10C17%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_labels = strat_train_set[[31m"median_house_value"[m].copy()[50;194H[K[50;194H68,1[10C18%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H69,1[10C18%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m sklearn.impute [35mimport[m SimpleImputer[50;194H[K[50;194H70,1[10C19%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Himputer = SimpleImputer(strategy=[31m"median"[m)[50;194H[K[50;194H71,0-1[8C20%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H72,1[10C21%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_num = housing.drop([31m'ocean_proximity'[m, axis=[31m1[m)[50;194H[K[50;194H73,1[10C21%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H74,0-1[8C22%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Himputer.fit(housing_num)[50;194H[K[50;194H75,1[10C23%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX = imputer.transform(housing_num)[50;194H[K[50;194H76,1[10C24%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H77,0-1[8C25%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_tr = pd.DataFrame(X, columns=housing_num.columns,[50;194H[K[50;194H78,1[10C25%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;27Hindex=housing.index)[50;194H[K[50;194H79,0-1[8C26%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_tr[[31m"rooms_per_household"[m] = housing_tr[[31m"total_rooms"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H80,1[10C27%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_tr[[31m"bedrooms_per_room"[m] = housing_tr[[31m"total_bedrooms"[m]/housing_tr[[31m"total_rooms"[m][50;194H[K[50;194H81,1[10C28%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_tr[[31m"population_per_household"[m]=housing_tr[[31m"population"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H82,0-1[8C28%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H83,1[10C29%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_cat = housing[[[31m'ocean_proximity'[m]][50;194H[K[50;194H84,1[10C30%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_prepared = housing_tr.join(pd.get_dummies(housing_cat, drop_first=[36mTrue[m))[50;194H[K[50;194H85,1[10C31%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H86,1[10C31%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m sklearn.linear_model [35mimport[m LinearRegression[50;194H[K[50;194H87,1[10C32%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H88,0-1[8C33%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hlin_reg = LinearRegression()[50;194H[K[50;194H89,1[10C34%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hlin_reg.fit(housing_prepared, housing_labels)[50;194H[K[50;194H90,1[10C34%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H91,0-1[8C35%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m sklearn.metrics [35mimport[m mean_squared_error[50;194H[K[50;194H92,1[10C36%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_predictions = lin_reg.predict(housing_prepared)[50;194H[K[50;194H93,0-1[8C37%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hlin_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H94,1[10C37%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hlin_rmse = np.sqrt(lin_mse)[50;194H[K[50;194H95,1[10C38%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hlin_rmse[50;194H[K[50;194H96,0-1[8C39%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H97,1[10C40%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H98,1[10C40%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m sklearn.metrics [35mimport[m mean_absolute_error[50;194H[K[50;194H99,1[10C41%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hlin_mae = mean_absolute_error(housing_labels, housing_predictions)[50;194H[K[50;194H100,1[9C42%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hlin_mae[50;194H[K[50;194H101,1[9C43%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H102,0-1[7C43%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H103,0-1[7C44%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m sklearn.tree [35mimport[m DecisionTreeRegressor[50;194H[K[50;194H104,1[9C45%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H105,1[9C46%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Htree_reg = DecisionTreeRegressor(random_state=[31m42[m)[50;194H[K[50;194H106,1[9C46%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Htree_reg.fit(housing_prepared, housing_labels)[50;194H[K[50;194H107,0-1[7C47%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H108,0-1[7C48%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hhousing_predictions = tree_reg.predict(housing_prepared)[50;194H[K[50;194H109,1[9C49%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Htree_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H110,0-1[7C50%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Htree_rmse = np.sqrt(tree_mse)[50;194H[K[50;194H111,1[9C50%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Htree_rmse[50;194H[K[50;194H112,1[9C51%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H113,0-1[7C52%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H114,1[9C53%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m sklearn.ensemble [35mimport[m RandomForestRegressor[50;194H[K[50;194H115,1[9C53%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m sklearn.model_selection [35mimport[m RandomizedSearchCV[50;194H[K[50;194H116,1[9C54%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m scipy.stats [35mimport[m randint[50;194H[K[50;194H117,1[9C55%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H118,0-1[7C56%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hparam_distribs = {[50;194H[K[50;194H119,0-1[7C56%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;9H[31m'n_estimators'[m: randint(low=[31m1[m, high=[31m200[m),[50;194H[K[50;194H120,1[9C57%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;9H[31m'max_features'[m: randint(low=[31m1[m, high=[31m8[m),[50;194H[K[50;194H121,1[9C58%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H}[50;194H[K[50;194H122,1[9C59%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H123,0-1[7C59%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hforest_reg = RandomForestRegressor(random_state=[31m42[m)[50;194H[K[50;194H124,1[9C60%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hrnd_search = RandomizedSearchCV(forest_reg, param_distributions=param_distribs,[50;194H[K[50;194H125,1[9C61%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;33Hn_iter=[31m10[m, cv=[31m5[m, scoring=[31m'neg_mean_squared_error'[m, random_state=[31m42[m)[50;194H[K[50;194H126,1[9C62%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hrnd_search.fit(housing_prepared, housing_labels)[50;194H[K[50;194H127,1[9C62%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hcvres = rnd_search.cv_results_[50;194H[K[50;194H128,0-1[7C63%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):[50;194H[K[50;194H129,1[9C64%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H[36mprint[m(np.sqrt(-mean_score), params)[50;194H[K[50;194H130,1[9C65%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H131,1[9C65%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H132,1[9C66%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[35mfrom[m sklearn.model_selection [35mimport[m GridSearchCV[50;194H[K[50;194H133,1[9C67%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H134,1[9C68%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hparam_grid = [[50;194H[K[50;194H135,1[9C68%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H[34m# try 12 (3×[49;17H4) combinations of hyperparameters[m[50;194H[K[50;194H136,0-1[7C69%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H{[31m'n_estimators'[m: [[31m3[m, [31m10[m, [31m30[m], [31m'max_features'[m: [[31m2[m, [31m4[m, [31m6[m, [31m8[m]},[50;194H[K[50;194H137,0-1[7C70%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H[34m# then try 6 (2×[49;21H3) combinations with bootstrap set as False[m[50;194H[K[50;194H138,1[9C71%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H{[31m'bootstrap'[m: [[36mFalse[m], [31m'n_estimators'[m: [[31m3[m, [31m10[m], [31m'max_features'[m: [[31m2[m, [31m3[m, [31m4[m]},[50;194H[K[50;194H139,0-1[7C71%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;3H][50;194H[K[50;194H140,1[9C72%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H141,1[9C73%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hforest_reg = RandomForestRegressor(random_state=[31m42[m)[50;194H[K[50;194H142,1[9C74%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[34m# train across 5 folds, that's a total of (12+6)*5=90 rounds of training [m[50;194H[K[50;194H143,1[9C75%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hgrid_search = GridSearchCV(forest_reg, param_grid, cv=[31m5[m,[50;194H[K[50;194H144,1[9C75%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;28Hscoring=[31m'neg_mean_squared_error'[m, return_train_score=[36mTrue[m)[50;194H[K[50;194H145,1[9C76%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hgrid_search.fit(housing_prepared, housing_labels)[50;194H[K[50;194H146,0-1[7C77%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H147,1[9C78%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hgrid_search.best_params_[50;194H[K[50;194H148,1[9C78%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hcvres = grid_search.cv_results_[50;194H[K[50;194H149,1[9C79%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):[50;194H[K[50;194H150,1[9C80%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;5H[36mprint[m(np.sqrt(-mean_score), params)[50;194H[K[50;194H151,1[9C81%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H152,0-1[7C81%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hfeature_importances = grid_search.best_estimator_.feature_importances_[50;194H[K[50;194H153,1[9C82%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1H[36msorted[m([36mzip[m(feature_importances, housing_prepared.columns), reverse=[36mTrue[m)[50;194H[K[50;194H154,1[9C83%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H155,1[9C84%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H156,1[9C84%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hfinal_model = grid_search.best_estimator_[50;194H[K[50;194H157,0-1[7C85%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H158,1[9C86%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test = strat_test_set.drop([31m"median_house_value"[m, axis=[31m1[m)[50;194H[K[50;194H159,1[9C87%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hy_test = strat_test_set[[31m"median_house_value"[m].copy()[50;194H[K[50;194H160,0-1[7C87%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H161,0-1[7C88%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test_num = X_test.drop([31m'ocean_proximity'[m, axis=[31m1[m)[50;194H[K[50;194H162,1[9C89%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test_prepared = imputer.transform(X_test_num)[50;194H[K[50;194H163,0-1[7C90%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test_prepared = pd.DataFrame(X_test_prepared, columns=X_test_num.columns,[50;194H[K[50;194H164,1[9C90%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;27Hindex=X_test.index)[50;194H[K[50;194H165,1[9C91%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test_prepared[[31m"rooms_per_household"[m] = X_test_prepared[[31m"total_rooms"[m]/X_test_prepared[[31m"households"[m][50;194H[K[50;194H166,0-1[7C92%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test_prepared[[31m"bedrooms_per_room"[m] = X_test_prepared[[31m"total_bedrooms"[m]/X_test_prepared[[31m"total_rooms"[m][50;194H[K[50;194H167,1[9C93%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test_prepared[[31m"population_per_household"[m]=X_test_prepared[[31m"population"[m]/X_test_prepared[[31m"households"[m][50;194H[K[50;194H168,1[9C93%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H169,1[9C94%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test_cat = X_test[[[31m'ocean_proximity'[m]][50;194H[K[50;194H170,1[9C95%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1HX_test_prepared = X_test_prepared.join(pd.get_dummies(X_test_cat, drop_first=[36mTrue[m))[50;194H[K[50;194H171,1[9C96%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H172,1[9C96%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[50;194H[K[50;194H173,1[9C97%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hfinal_predictions = final_model.predict(X_test_prepared)[50;194H[K[50;194H174,0-1[7C98%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hfinal_mse = mean_squared_error(y_test, final_predictions)[50;194H[K[50;194H175,1[9C99%[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [44;1H[1;49r[49;1H
[1;50r[49;1Hfinal_rmse = np.sqrt(final_mse)[50;194H[K[50;194H176,1[9CBot[44;1H[?25h[?25l[50;184H~@k[44;1H[50;184H   [45;1H[50;196H7,0-1[45;1H[?25h[?25l[50;184H~@k[45;1H[50;184H   [46;1H[50;196H8[46;1H[?25h[?25l[50;184H~@k[46;1H[50;184H   [47;1H[50;196H9,1  [47;1H[?25h[?25l[50;184H~@k[47;1H[50;184H   [48;1H[50;195H80[48;1H[?25h[?25l[50;184H~@k[48;1H[50;184H   [49;1H[50;196H1[49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H^[[49;1H[50;184H  [49;1H[50;184H^[[49;1H[50;184H  [49;1H[?25h[?25l[50;184H^X[49;1H[50;184H  [49;1H[?25h[?25l[50;184H^X[49;1H[50;184H  [49;1H[?25h[?25l[50;184H^[[49;1H[50;184H  [49;1H[50;184H^[[49;1H[50;184H  [49;1H[?25h[?25l[50;184H^X[49;1H[50;184H  [49;1H[?25h[?25l[50;184H^X[49;1H[50;184H  [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;1H[?25h[?25l[50;184H~@k[49;1H[50;184H   [49;2H[50;198H2[49;2H[?25h[?25l[50;184H~@k[49;2H[50;184H   [49;3H[50;198H3[49;3H[?25h[?25l[50;184H~@k[49;3H[50;184H   [49;4H[50;198H4[49;4H[?25h[?25l[50;184H~@k[49;4H[50;184H   [49;5H[50;198H5[49;5H[?25h[?25l[50;184H~@k[49;5H[50;184H   [49;6H[50;198H6[49;6H[?25h[?25l[50;184H~@k[49;6H[50;184H   [49;7H[50;198H7[49;7H[?25h[?25l[50;184H~@k[49;7H[50;184H   [49;8H[50;198H8[49;8H[?25h[?25l[50;184H~@k[49;8H[50;184H   [49;9H[50;198H9[49;9H[?25h[?25l[50;184H~@k[49;9H[50;184H   [49;10H[50;198H10[49;10H[?25h[?25l[50;184H~@k[49;10H[50;184H   [49;11H[50;199H1[49;11H[?25h[?25l[50;184H~@k[49;11H[50;184H   [49;12H[50;199H2[49;12H[?25h[?25l[50;184H~@k[49;12H[50;184H   [49;13H[50;199H3[49;13H[?25h[?25l[50;184H~@k[49;13H[50;184H   [49;14H[50;199H4[49;14H[?25h[?25l[50;184H~@k[49;14H[50;184H   [49;15H[50;199H5[49;15H[?25h[?25l[50;184H~@k[49;15H[50;184H   [49;16H[50;199H6[49;16H[?25h[?25l[50;184H~@k[49;16H[50;184H   [49;17H[50;199H7[49;17H[?25h[?25l[50;184H~@k[49;17H[50;184H   [49;18H[50;199H8[49;18H[?25h[?25l[50;184H~@k[49;18H[50;184H   [49;19H[50;199H9[49;19H[?25h[?25l[50;184H~@k[49;19H[50;184H   [49;20H[50;198H20[49;20H[?25h[?25l[50;184H~@k[49;20H[50;184H   [49;21H[106m([9C)[m[50;199H1[49;21H[?25h[?25l[50;184H~@k[49;21H[50;184H   [49;22H([9C)[50;199H2[49;22H[?25h[?25l[50;184H~@k[49;22H[50;184H   [49;23H[50;199H3[49;23H[?25h[?25l[50;184H~@k[49;23H[50;184H   [49;24H[50;199H4[49;24H[?25h[?25l[50;184H~@k[49;24H[50;184H   [49;25H[50;199H5[49;25H[?25h[?25l[50;184H~@k[49;25H[50;184H   [49;26H[50;199H6[49;26H[?25h[?25l[50;184H~@k[49;26H[50;184H   [49;27H[50;199H7[49;27H[?25h[?25l[50;184H~@k[49;27H[50;184H   [49;28H[50;199H8[49;28H[?25h[?25l[50;184H~@k[49;28H[50;184H   [49;29H[50;199H9[49;29H[?25h[?25l[50;184H~@k[49;29H[50;184H   [49;30H[50;198H30[49;30H[?25h[?25l[50;184H~@k[49;30H[50;184H   [49;31H[49;21H[106m([9C)[m[50;199H1[49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H^[[49;31H[50;184H  [49;31H[50;184H^[[49;31H[50;184H  [49;31H[?25h[?25l[50;184H^[[49;31H[50;184H  [49;31H[50;184H^[[49;31H[50;184H  [49;31H[?25h[?25l[50;184H:[49;31H[50;184H[K[50;1H:[?2004h[?25hq[?25l[?2004l[23;2t[23;1t[50;1H[K[50;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ 
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ 
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi README.md 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"README.md" 2L, 28C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#[m[35m mle-training[m
MLE Training
[94m~                                                                                                                                                                                                                  [4;1H~                                                                                                                                                                                                                  [5;1H~                                                                                                                                                                                                                  [6;1H~                                                                                                                                                                                                                  [7;1H~                                                                                                                                                                                                                  [8;1H~                                                                                                                                                                                                                  [9;1H~                                                                                                                                                                                                                  [10;1H~                                                                                                                                                                                                                  [11;1H~                                                                                                                                                                                                                  [12;1H~                                                                                                                                                                                                                  [13;1H~                                                                                                                                                                                                                  [14;1H~                                                                                                                                                                                                                  [15;1H~                                                                                                                                                                                                                  [16;1H~                                                                                                                                                                                                                  [17;1H~                                                                                                                                                                                                                  [18;1H~                                                                                                                                                                                                                  [19;1H~                                                                                                                                                                                                                  [20;1H~                                                                                                                                                                                                                  [21;1H~                                                                                                                                                                                                                  [22;1H~                                                                                                                                                                                                                  [23;1H~                                                                                                                                                                                                                  [24;1H~                                                                                                                                                                                                                  [25;1H~                                                                                                                                                                                                                  [26;1H~                                                                                                                                                                                                                  [27;1H~                                                                                                                                                                                                                  [28;1H~                                                                                                                                                                                                                  [29;1H~                                                                                                                                                                                                                  [30;1H~                                                                                                                                                                                                                  [31;1H~                                                                                                                                                                                                                  [32;1H~                                                                                                                                                                                                                  [33;1H~                                                                                                                                                                                                                  [34;1H~                                                                                                                                                                                                                  [35;1H~                                                                                                                                                                                                                  [36;1H~                                                                                                                                                                                                                  [37;1H~                                                                                                                                                                                                                  [38;1H~                                                                                                                                                                                                                  [39;1H~                                                                                                                                                                                                                  [40;1H~                                                                                                                                                                                                                  [41;1H~                                                                                                                                                                                                                  [42;1H~                                                                                                                                                                                                                  [43;1H~                                                                                                                                                                                                                  [44;1H~                                                                                                                                                                                                                  [45;1H~                                                                                                                                                                                                                  [46;1H~                                                                                                                                                                                                                  [47;1H~                                                                                                                                                                                                                  [48;1H~                                                                                                                                                                                                                  [49;1H~                                                                                                                                                                                                                  [m[50;194H1,1[11CAll[1;1H[?25h[?25l[50;184H~@k[1;1H[50;184H   [2;1H[50;194H2[2;1H[?25h[?25l[50;184H~@k[2;1H[50;184H   [2;1H[?25h[?25l[50;184H~@k[2;1H[50;184H   [2;1H[?25h[?25l[50;184H^[[2;1H[50;184H  [2;1H[50;184H^[[2;1H[50;184H  [2;1H[?25h[?25l[50;184H:[2;1H[50;1H[K[50;1H:[?2004h[?25hq[?25l[?2004l[23;2t[23;1t[50;1H[K[50;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git status
On branch en/1/improve_code_quality
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31mnonstandardcode.py[m

nothing added to commit but untracked files present (use "git add" to track)
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git add nonstandardcode.py 
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git status
On branch en/1/improve_code_quality
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   nonstandardcode.py[m

(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git commit -m 'committing updated code'[1P code'[1P code'[1P code'[1P code'[1P code'[1P code'[1P code'n code'o code'n code's code't code'a code'n code'd code'a code'r code'd code'[C[C[C[C[C[C
[en/1/improve_code_quality 6c959ca] committing nonstandard code
 1 file changed, 181 insertions(+)
 create mode 100644 nonstandardcode.py
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git at[K[Kstatus
On branch en/1/improve_code_quality
nothing to commit, working tree clean
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git push origin en/1/improve_code_quality 
Enumerating objects: 4, done.
Counting objects:  25% (1/4)Counting objects:  50% (2/4)Counting objects:  75% (3/4)Counting objects: 100% (4/4)Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects:  33% (1/3)Compressing objects:  66% (2/3)Compressing objects: 100% (3/3)Compressing objects: 100% (3/3), done.
Writing objects:  33% (1/3)Writing objects:  66% (2/3)Writing objects: 100% (3/3)Writing objects: 100% (3/3), 2.27 KiB | 2.27 MiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/1)[Kremote: Resolving deltas: 100% (1/1)[Kremote: Resolving deltas: 100% (1/1), completed with 1 local object.[K
remote: 
remote: Create a pull request for 'en/1/improve_code_quality' on GitHub by visiting:[K
remote:      https://github.com/nitin-tiger/mle-training/pull/new/en/1/improve_code_quality[K
remote: 
To https://github.com/nitin-tiger/mle-training
 * [new branch]      en/1/improve_code_quality -> en/1/improve_code_quality
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi .gitignore 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H".gitignore" 129L, 1799C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[34m# Byte-compiled / optimized / DLL files[m
__pycache__/
*.py[cod]
*$py.class

[34m# C extensions[m
*.so

[34m# Distribution / packaging[m
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

[34m# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.[m
*.manifest
*.spec

[34m# Installer logs[m
pip-log.txt
pip-delete-this-directory.txt

[34m# Unit test / coverage reports[m
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover[50;194H5,0-1[9CTop[5;1H[?25h[?25l[50;184H~@k[5;1H[50;184H   [6;1H[50;194H6,1  [6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [5;1H[50;194H5,0-1[5;1H[?25h[?25l[50;184Hi[5;1H[50;184H [5;1H[50;1H[1m-- INSERT --[m[50;14H[K[50;194H5,1[11CTop[5;1H[?25h[?25l*[50;196H2[5;2H[?25h[?25l.[50;196H3[5;3H[?25h[?25lp[50;196H4[5;4H[?25h[?25ly[50;196H5[5;5H[?25h[?25lc[50;196H6[5;6H[?25h[?25l[6;49r[6;1H[L[1;50r[50;194H[K[50;194H6,1[11CTop[6;1H[?25h[?25l*[50;196H2[6;2H[?25h[?25l.[50;196H3[6;3H[?25h[?25lc[50;196H4[6;4H[?25h[?25ls[50;196H5[6;5H[?25h[?25lv[50;196H6[6;6H[?25h[?25l[7;49r[7;1H[L[1;50r[50;194H[K[50;194H7,1[11CTop[7;1H[?25h[50;1H[K[7;1H[?25l[50;184H^[[7;1H[50;184H  [7;1H[50;194H7,0-1[9CTop[7;1H[?25h[?25l[50;184H^[[7;1H[50;184H  [7;1H[50;184H^[[7;1H[50;184H  [7;1H[?25h[?25l[50;184H:[7;1H[50;184H[K[50;1H:[?2004h[?25hwq[?25l[?2004l".gitignore" 131L, 1811C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ 
(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda create --name mle-dev
Collecting package metadata (current_repodata.json): - done
Solving environment: | done


==> WARNING: A newer version of conda exists. <==
  current version: 4.10.3
  latest version: 4.11.0

Please update conda by running

    $ conda update -n base -c defaults conda



## Package Plan ##

  environment location: /home/nitin/miniconda3/envs/mle-dev



Proceed ([y]/n)? y

Preparing transaction: - done
Verifying transaction: | done
Executing transaction: - done
#
# To activate this environment, use
#
#     $ conda activate mle-dev
#
# To deactivate an active environment, use
#
#     $ conda deactivate

(mlops) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda avtivate ml[K[K[K[K[K[K[K[K[K[K[Kdeactivate
(base) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda activate mle-dev
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md  nonstandardcode.py
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ python nonstandardcode.py 

Command 'python' not found, did you mean:

  command 'python3' from deb python3
  command 'python' from deb python-is-python3

(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ python nonstandardcode.py [1@3
Traceback (most recent call last):
  File "nonstandardcode.py", line 1, in <module>
    import numpy as np
ModuleNotFoundError: No module named 'numpy'
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda installn[K nup[Kmpy
Collecting package metadata (current_repodata.json): - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - done
Solving environment: | / - done


==> WARNING: A newer version of conda exists. <==
  current version: 4.10.3
  latest version: 4.11.0

Please update conda by running

    $ conda update -n base -c defaults conda



## Package Plan ##

  environment location: /home/nitin/miniconda3/envs/mle-dev

  added / updated specs:
    - numpy


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    blas-1.0                   |              mkl           6 KB
    certifi-2021.10.8          |   py39h06a4308_2         151 KB
    intel-openmp-2021.4.0      |    h06a4308_3561         4.2 MB
    mkl-2021.4.0               |     h06a4308_640       142.6 MB
    mkl-service-2.4.0          |   py39h7f8727e_0          59 KB
    mkl_fft-1.3.1              |   py39hd3c417c_0         182 KB
    mkl_random-1.2.2           |   py39h51133e4_0         309 KB
    numpy-1.21.2               |   py39h20f2e39_0          23 KB
    numpy-base-1.21.2          |   py39h79a1101_0         4.9 MB
    pip-21.2.4                 |   py39h06a4308_0         1.8 MB
    python-3.9.7               |       h12debd9_1        18.6 MB
    readline-8.1.2             |       h7f8727e_1         354 KB
    setuptools-58.0.4          |   py39h06a4308_0         790 KB
    six-1.16.0                 |     pyhd3eb1b0_1          18 KB
    sqlite-3.37.2              |       hc218d9a_0        1008 KB
    tzdata-2021e               |       hda174b7_0         112 KB
    wheel-0.37.1               |     pyhd3eb1b0_0          33 KB
    ------------------------------------------------------------
                                           Total:       175.0 MB

The following NEW packages will be INSTALLED:

  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main
  _openmp_mutex      pkgs/main/linux-64::_openmp_mutex-4.5-1_gnu
  blas               pkgs/main/linux-64::blas-1.0-mkl
  ca-certificates    pkgs/main/linux-64::ca-certificates-2021.10.26-h06a4308_2
  certifi            pkgs/main/linux-64::certifi-2021.10.8-py39h06a4308_2
  intel-openmp       pkgs/main/linux-64::intel-openmp-2021.4.0-h06a4308_3561
  ld_impl_linux-64   pkgs/main/linux-64::ld_impl_linux-64-2.35.1-h7274673_9
  libffi             pkgs/main/linux-64::libffi-3.3-he6710b0_2
  libgcc-ng          pkgs/main/linux-64::libgcc-ng-9.3.0-h5101ec6_17
  libgomp            pkgs/main/linux-64::libgomp-9.3.0-h5101ec6_17
  libstdcxx-ng       pkgs/main/linux-64::libstdcxx-ng-9.3.0-hd4cf53a_17
  mkl                pkgs/main/linux-64::mkl-2021.4.0-h06a4308_640
  mkl-service        pkgs/main/linux-64::mkl-service-2.4.0-py39h7f8727e_0
  mkl_fft            pkgs/main/linux-64::mkl_fft-1.3.1-py39hd3c417c_0
  mkl_random         pkgs/main/linux-64::mkl_random-1.2.2-py39h51133e4_0
  ncurses            pkgs/main/linux-64::ncurses-6.3-h7f8727e_2
  numpy              pkgs/main/linux-64::numpy-1.21.2-py39h20f2e39_0
  numpy-base         pkgs/main/linux-64::numpy-base-1.21.2-py39h79a1101_0
  openssl            pkgs/main/linux-64::openssl-1.1.1m-h7f8727e_0
  pip                pkgs/main/linux-64::pip-21.2.4-py39h06a4308_0
  python             pkgs/main/linux-64::python-3.9.7-h12debd9_1
  readline           pkgs/main/linux-64::readline-8.1.2-h7f8727e_1
  setuptools         pkgs/main/linux-64::setuptools-58.0.4-py39h06a4308_0
  six                pkgs/main/noarch::six-1.16.0-pyhd3eb1b0_1
  sqlite             pkgs/main/linux-64::sqlite-3.37.2-hc218d9a_0
  tk                 pkgs/main/linux-64::tk-8.6.11-h1ccaba5_0
  tzdata             pkgs/main/noarch::tzdata-2021e-hda174b7_0
  wheel              pkgs/main/noarch::wheel-0.37.1-pyhd3eb1b0_0
  xz                 pkgs/main/linux-64::xz-5.2.5-h7b6447c_0
  zlib               pkgs/main/linux-64::zlib-1.2.11-h7f8727e_4


Proceed ([y]/n)? y


Downloading and Extracting Packages
sqlite-3.37.2        | 1008 KB   |                                                                                                                                                                          |   0% sqlite-3.37.2        | 1008 KB   | ##6                                                                                                                                                                      |   2% sqlite-3.37.2        | 1008 KB   | #############################################################################################################################################################2           |  94% sqlite-3.37.2        | 1008 KB   | ######################################################################################################################################################################## | 100% 
mkl_fft-1.3.1        | 182 KB    |                                                                                                                                                                          |   0% mkl_fft-1.3.1        | 182 KB    | ######################################################################################################################################################################## | 100% 
intel-openmp-2021.4. | 4.2 MB    |                                                                                                                                                                          |   0% intel-openmp-2021.4. | 4.2 MB    | ##########################################8                                                                                                                              |  26% intel-openmp-2021.4. | 4.2 MB    | ################################################################################################################1                                                        |  67% intel-openmp-2021.4. | 4.2 MB    | ######################################################################################################################################################################## | 100% 
six-1.16.0           | 18 KB     |                                                                                                                                                                          |   0% six-1.16.0           | 18 KB     | ######################################################################################################################################################################## | 100% 
numpy-base-1.21.2    | 4.9 MB    |                                                                                                                                                                          |   0% numpy-base-1.21.2    | 4.9 MB    | #####################5                                                                                                                                                   |  13% numpy-base-1.21.2    | 4.9 MB    | ##############################################################4                                                                                                          |  37% numpy-base-1.21.2    | 4.9 MB    | ###########################################################################################################                                                              |  64% numpy-base-1.21.2    | 4.9 MB    | ###############################################################################################################################################################8         |  95% numpy-base-1.21.2    | 4.9 MB    | ######################################################################################################################################################################## | 100% 
readline-8.1.2       | 354 KB    |                                                                                                                                                                          |   0% readline-8.1.2       | 354 KB    | ######################################################################################################################################################################## | 100% 
blas-1.0             | 6 KB      |                                                                                                                                                                          |   0% blas-1.0             | 6 KB      | ######################################################################################################################################################################## | 100% 
mkl-service-2.4.0    | 59 KB     |                                                                                                                                                                          |   0% mkl-service-2.4.0    | 59 KB     | ######################################################################################################################################################################## | 100% 
mkl_random-1.2.2     | 309 KB    |                                                                                                                                                                          |   0% mkl_random-1.2.2     | 309 KB    | ######################################################################################################################################################################## | 100% 
numpy-1.21.2         | 23 KB     |                                                                                                                                                                          |   0% numpy-1.21.2         | 23 KB     | ######################################################################################################################################################################## | 100% 
tzdata-2021e         | 112 KB    |                                                                                                                                                                          |   0% tzdata-2021e         | 112 KB    | ######################################################################################################################################################################## | 100% 
pip-21.2.4           | 1.8 MB    |                                                                                                                                                                          |   0% pip-21.2.4           | 1.8 MB    | ######################################################################################################5                                                                  |  61% pip-21.2.4           | 1.8 MB    | ######################################################################################################################################################################## | 100% 
python-3.9.7         | 18.6 MB   |                                                                                                                                                                          |   0% python-3.9.7         | 18.6 MB   | #######4                                                                                                                                                                 |   4% python-3.9.7         | 18.6 MB   | #####################4                                                                                                                                                   |  13% python-3.9.7         | 18.6 MB   | ################################9                                                                                                                                        |  20% python-3.9.7         | 18.6 MB   | ###############################################3                                                                                                                         |  28% python-3.9.7         | 18.6 MB   | ##############################################################6                                                                                                          |  37% python-3.9.7         | 18.6 MB   | #############################################################################1                                                                                           |  46% python-3.9.7         | 18.6 MB   | ###########################################################################################3                                                                             |  54% python-3.9.7         | 18.6 MB   | ##########################################################################################################8                                                              |  64% python-3.9.7         | 18.6 MB   | #########################################################################################################################3                                               |  72% python-3.9.7         | 18.6 MB   | #######################################################################################################################################7                                 |  81% python-3.9.7         | 18.6 MB   | ######################################################################################################################################################                   |  89% python-3.9.7         | 18.6 MB   | ####################################################################################################################################################################1    |  98% python-3.9.7         | 18.6 MB   | ######################################################################################################################################################################## | 100% 
mkl-2021.4.0         | 142.6 MB  |                                                                                                                                                                          |   0% mkl-2021.4.0         | 142.6 MB  | 6                                                                                                                                                                        |   0% mkl-2021.4.0         | 142.6 MB  | ##3                                                                                                                                                                      |   1% mkl-2021.4.0         | 142.6 MB  | ####3                                                                                                                                                                    |   3% mkl-2021.4.0         | 142.6 MB  | ######1                                                                                                                                                                  |   4% mkl-2021.4.0         | 142.6 MB  | #######8                                                                                                                                                                 |   5% mkl-2021.4.0         | 142.6 MB  | #########8                                                                                                                                                               |   6% mkl-2021.4.0         | 142.6 MB  | ###########8                                                                                                                                                             |   7% mkl-2021.4.0         | 142.6 MB  | #############7                                                                                                                                                           |   8% mkl-2021.4.0         | 142.6 MB  | ###############5                                                                                                                                                         |   9% mkl-2021.4.0         | 142.6 MB  | #################4                                                                                                                                                       |  10% mkl-2021.4.0         | 142.6 MB  | ###################2                                                                                                                                                     |  11% mkl-2021.4.0         | 142.6 MB  | #####################2                                                                                                                                                   |  13% mkl-2021.4.0         | 142.6 MB  | #######################1                                                                                                                                                 |  14% mkl-2021.4.0         | 142.6 MB  | ########################9                                                                                                                                                |  15% mkl-2021.4.0         | 142.6 MB  | ##########################8                                                                                                                                              |  16% mkl-2021.4.0         | 142.6 MB  | ############################6                                                                                                                                            |  17% mkl-2021.4.0         | 142.6 MB  | ##############################5                                                                                                                                          |  18% mkl-2021.4.0         | 142.6 MB  | ################################3                                                                                                                                        |  19% mkl-2021.4.0         | 142.6 MB  | ##################################                                                                                                                                       |  20% mkl-2021.4.0         | 142.6 MB  | ###################################9                                                                                                                                     |  21% mkl-2021.4.0         | 142.6 MB  | #####################################7                                                                                                                                   |  22% mkl-2021.4.0         | 142.6 MB  | #######################################4                                                                                                                                 |  24% mkl-2021.4.0         | 142.6 MB  | #########################################2                                                                                                                               |  25% mkl-2021.4.0         | 142.6 MB  | ###########################################                                                                                                                              |  26% mkl-2021.4.0         | 142.6 MB  | ############################################7                                                                                                                            |  27% mkl-2021.4.0         | 142.6 MB  | ##############################################4                                                                                                                          |  28% mkl-2021.4.0         | 142.6 MB  | ################################################2                                                                                                                        |  29% mkl-2021.4.0         | 142.6 MB  | #################################################8                                                                                                                       |  30% mkl-2021.4.0         | 142.6 MB  | ###################################################7                                                                                                                     |  31% mkl-2021.4.0         | 142.6 MB  | #####################################################6                                                                                                                   |  32% mkl-2021.4.0         | 142.6 MB  | #######################################################4                                                                                                                 |  33% mkl-2021.4.0         | 142.6 MB  | #########################################################                                                                                                                |  34% mkl-2021.4.0         | 142.6 MB  | ##########################################################6                                                                                                              |  35% mkl-2021.4.0         | 142.6 MB  | ############################################################1                                                                                                            |  36% mkl-2021.4.0         | 142.6 MB  | #############################################################6                                                                                                           |  37% mkl-2021.4.0         | 142.6 MB  | ###############################################################                                                                                                          |  38% mkl-2021.4.0         | 142.6 MB  | ################################################################4                                                                                                        |  38% mkl-2021.4.0         | 142.6 MB  | #################################################################8                                                                                                       |  39% mkl-2021.4.0         | 142.6 MB  | ###################################################################2                                                                                                     |  40% mkl-2021.4.0         | 142.6 MB  | ####################################################################6                                                                                                    |  41% mkl-2021.4.0         | 142.6 MB  | ######################################################################1                                                                                                  |  42% mkl-2021.4.0         | 142.6 MB  | #######################################################################7                                                                                                 |  43% mkl-2021.4.0         | 142.6 MB  | #########################################################################1                                                                                               |  44% mkl-2021.4.0         | 142.6 MB  | ##########################################################################4                                                                                              |  44% mkl-2021.4.0         | 142.6 MB  | ###########################################################################7                                                                                             |  45% mkl-2021.4.0         | 142.6 MB  | #############################################################################1                                                                                           |  46% mkl-2021.4.0         | 142.6 MB  | ##############################################################################5                                                                                          |  47% mkl-2021.4.0         | 142.6 MB  | ################################################################################1                                                                                        |  48% mkl-2021.4.0         | 142.6 MB  | #################################################################################8                                                                                       |  49% mkl-2021.4.0         | 142.6 MB  | ###################################################################################5                                                                                     |  50% mkl-2021.4.0         | 142.6 MB  | #####################################################################################4                                                                                   |  51% mkl-2021.4.0         | 142.6 MB  | #######################################################################################3                                                                                 |  52% mkl-2021.4.0         | 142.6 MB  | #########################################################################################                                                                                |  53% mkl-2021.4.0         | 142.6 MB  | ##########################################################################################7                                                                              |  54% mkl-2021.4.0         | 142.6 MB  | ############################################################################################4                                                                            |  55% mkl-2021.4.0         | 142.6 MB  | ##############################################################################################                                                                           |  56% mkl-2021.4.0         | 142.6 MB  | ###############################################################################################4                                                                         |  57% mkl-2021.4.0         | 142.6 MB  | #################################################################################################                                                                        |  58% mkl-2021.4.0         | 142.6 MB  | ##################################################################################################5                                                                      |  59% mkl-2021.4.0         | 142.6 MB  | ###################################################################################################9                                                                     |  60% mkl-2021.4.0         | 142.6 MB  | #####################################################################################################3                                                                   |  60% mkl-2021.4.0         | 142.6 MB  | ######################################################################################################7                                                                  |  61% mkl-2021.4.0         | 142.6 MB  | ########################################################################################################                                                                 |  62% mkl-2021.4.0         | 142.6 MB  | #########################################################################################################7                                                               |  63% mkl-2021.4.0         | 142.6 MB  | ###########################################################################################################5                                                             |  64% mkl-2021.4.0         | 142.6 MB  | #############################################################################################################2                                                           |  65% mkl-2021.4.0         | 142.6 MB  | ###############################################################################################################                                                          |  66% mkl-2021.4.0         | 142.6 MB  | ################################################################################################################6                                                        |  67% mkl-2021.4.0         | 142.6 MB  | ##################################################################################################################2                                                      |  68% mkl-2021.4.0         | 142.6 MB  | ###################################################################################################################7                                                     |  69% mkl-2021.4.0         | 142.6 MB  | #####################################################################################################################2                                                   |  70% mkl-2021.4.0         | 142.6 MB  | ######################################################################################################################9                                                  |  71% mkl-2021.4.0         | 142.6 MB  | ########################################################################################################################4                                                |  72% mkl-2021.4.0         | 142.6 MB  | #########################################################################################################################9                                               |  73% mkl-2021.4.0         | 142.6 MB  | ###########################################################################################################################2                                             |  73% mkl-2021.4.0         | 142.6 MB  | ############################################################################################################################3                                            |  74% mkl-2021.4.0         | 142.6 MB  | #############################################################################################################################5                                           |  75% mkl-2021.4.0         | 142.6 MB  | ##############################################################################################################################6                                          |  75% mkl-2021.4.0         | 142.6 MB  | ################################################################################################################################1                                        |  76% mkl-2021.4.0         | 142.6 MB  | #################################################################################################################################5                                       |  77% mkl-2021.4.0         | 142.6 MB  | ###################################################################################################################################2                                     |  78% mkl-2021.4.0         | 142.6 MB  | ####################################################################################################################################7                                    |  79% mkl-2021.4.0         | 142.6 MB  | ######################################################################################################################################1                                  |  80% mkl-2021.4.0         | 142.6 MB  | #######################################################################################################################################7                                 |  81% mkl-2021.4.0         | 142.6 MB  | #########################################################################################################################################3                               |  82% mkl-2021.4.0         | 142.6 MB  | ##########################################################################################################################################7                              |  83% mkl-2021.4.0         | 142.6 MB  | ############################################################################################################################################3                            |  84% mkl-2021.4.0         | 142.6 MB  | #############################################################################################################################################8                           |  84% mkl-2021.4.0         | 142.6 MB  | ###############################################################################################################################################3                         |  85% mkl-2021.4.0         | 142.6 MB  | ################################################################################################################################################8                        |  86% mkl-2021.4.0         | 142.6 MB  | ##################################################################################################################################################3                      |  87% mkl-2021.4.0         | 142.6 MB  | ###################################################################################################################################################7                     |  88% mkl-2021.4.0         | 142.6 MB  | ####################################################################################################################################################9                    |  89% mkl-2021.4.0         | 142.6 MB  | ######################################################################################################################################################1                  |  89% mkl-2021.4.0         | 142.6 MB  | #######################################################################################################################################################4                 |  90% mkl-2021.4.0         | 142.6 MB  | ########################################################################################################################################################7                |  91% mkl-2021.4.0         | 142.6 MB  | ##########################################################################################################################################################1              |  92% mkl-2021.4.0         | 142.6 MB  | ###########################################################################################################################################################6             |  93% mkl-2021.4.0         | 142.6 MB  | #############################################################################################################################################################1           |  94% mkl-2021.4.0         | 142.6 MB  | ##############################################################################################################################################################5          |  94% mkl-2021.4.0         | 142.6 MB  | ################################################################################################################################################################         |  95% mkl-2021.4.0         | 142.6 MB  | #################################################################################################################################################################5       |  96% mkl-2021.4.0         | 142.6 MB  | ###################################################################################################################################################################3     |  97% mkl-2021.4.0         | 142.6 MB  | #####################################################################################################################################################################1   |  98% mkl-2021.4.0         | 142.6 MB  | ######################################################################################################################################################################6  |  99% mkl-2021.4.0         | 142.6 MB  | ######################################################################################################################################################################## | 100% 
setuptools-58.0.4    | 790 KB    |                                                                                                                                                                          |   0% setuptools-58.0.4    | 790 KB    | ######################################################################################################################################################################## | 100% setuptools-58.0.4    | 790 KB    | ######################################################################################################################################################################## | 100% 
wheel-0.37.1         | 33 KB     |                                                                                                                                                                          |   0% wheel-0.37.1         | 33 KB     | ######################################################################################################################################################################## | 100% 
certifi-2021.10.8    | 151 KB    |                                                                                                                                                                          |   0% certifi-2021.10.8    | 151 KB    | ######################################################################################################################################################################## | 100% 
Preparing transaction: | / done
Verifying transaction: \ | / - \ | / - done
Executing transaction: | / - \ | / done
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda install numpypython3 nonstandardcode.py 
Traceback (most recent call last):
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 2, in <module>
    import pandas as pd
ModuleNotFoundError: No module named 'pandas'
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ python3 nonstandardcode.py [8Pconda install numpy[K[K[K[K[Kpandas
Collecting package metadata (current_repodata.json): - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - done
Solving environment: | / done


==> WARNING: A newer version of conda exists. <==
  current version: 4.10.3
  latest version: 4.11.0

Please update conda by running

    $ conda update -n base -c defaults conda



## Package Plan ##

  environment location: /home/nitin/miniconda3/envs/mle-dev

  added / updated specs:
    - pandas


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    bottleneck-1.3.2           |   py39hdd57654_1         125 KB
    numexpr-2.8.1              |   py39h6abb31d_0         124 KB
    packaging-21.3             |     pyhd3eb1b0_0          36 KB
    pandas-1.4.1               |   py39h295c915_0         9.9 MB
    pyparsing-3.0.4            |     pyhd3eb1b0_0          81 KB
    python-dateutil-2.8.2      |     pyhd3eb1b0_0         233 KB
    pytz-2021.3                |     pyhd3eb1b0_0         171 KB
    ------------------------------------------------------------
                                           Total:        10.6 MB

The following NEW packages will be INSTALLED:

  bottleneck         pkgs/main/linux-64::bottleneck-1.3.2-py39hdd57654_1
  numexpr            pkgs/main/linux-64::numexpr-2.8.1-py39h6abb31d_0
  packaging          pkgs/main/noarch::packaging-21.3-pyhd3eb1b0_0
  pandas             pkgs/main/linux-64::pandas-1.4.1-py39h295c915_0
  pyparsing          pkgs/main/noarch::pyparsing-3.0.4-pyhd3eb1b0_0
  python-dateutil    pkgs/main/noarch::python-dateutil-2.8.2-pyhd3eb1b0_0
  pytz               pkgs/main/noarch::pytz-2021.3-pyhd3eb1b0_0


Proceed ([y]/n)? y


Downloading and Extracting Packages
pandas-1.4.1         | 9.9 MB    |                                                                                                                                                                          |   0% pandas-1.4.1         | 9.9 MB    | 2                                                                                                                                                                        |   0% pandas-1.4.1         | 9.9 MB    | #3                                                                                                                                                                       |   1% pandas-1.4.1         | 9.9 MB    | #############5                                                                                                                                                           |   8% pandas-1.4.1         | 9.9 MB    | ###################################1                                                                                                                                     |  21% pandas-1.4.1         | 9.9 MB    | ##################################################                                                                                                                       |  30% pandas-1.4.1         | 9.9 MB    | ###############################################################                                                                                                          |  38% pandas-1.4.1         | 9.9 MB    | #############################################################################6                                                                                           |  46% pandas-1.4.1         | 9.9 MB    | #############################################################################################6                                                                           |  56% pandas-1.4.1         | 9.9 MB    | ##############################################################################################################6                                                          |  66% pandas-1.4.1         | 9.9 MB    | ################################################################################################################################5                                        |  76% pandas-1.4.1         | 9.9 MB    | ##################################################################################################################################################3                      |  87% pandas-1.4.1         | 9.9 MB    | #####################################################################################################################################################################7   |  99% pandas-1.4.1         | 9.9 MB    | ######################################################################################################################################################################## | 100% 
bottleneck-1.3.2     | 125 KB    |                                                                                                                                                                          |   0% bottleneck-1.3.2     | 125 KB    | ######################################################################################################################################################################## | 100% 
numexpr-2.8.1        | 124 KB    |                                                                                                                                                                          |   0% numexpr-2.8.1        | 124 KB    | ######################################################################################################################################################################## | 100% 
python-dateutil-2.8. | 233 KB    |                                                                                                                                                                          |   0% python-dateutil-2.8. | 233 KB    | ######################################################################################################################################################################## | 100% 
packaging-21.3       | 36 KB     |                                                                                                                                                                          |   0% packaging-21.3       | 36 KB     | ######################################################################################################################################################################## | 100% 
pytz-2021.3          | 171 KB    |                                                                                                                                                                          |   0% pytz-2021.3          | 171 KB    | ######################################################################################################################################################################## | 100% 
pyparsing-3.0.4      | 81 KB     |                                                                                                                                                                          |   0% pyparsing-3.0.4      | 81 KB     | ######################################################################################################################################################################## | 100% 
Preparing transaction: \ done
Verifying transaction: / - done
Executing transaction: | / - \ done
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda install pandaspython3 nonstandardcode.py 
Traceback (most recent call last):
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 3, in <module>
    import matplotlib as mpl
ModuleNotFoundError: No module named 'matplotlib'
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ python3 nonstandardcode.py [7Pconda install pandas[K[K[K[K[K[Kmatplotlib
Collecting package metadata (current_repodata.json): - \ | done
Solving environment: - \ | done


==> WARNING: A newer version of conda exists. <==
  current version: 4.10.3
  latest version: 4.11.0

Please update conda by running

    $ conda update -n base -c defaults conda



## Package Plan ##

  environment location: /home/nitin/miniconda3/envs/mle-dev

  added / updated specs:
    - matplotlib


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    brotli-1.0.9               |       he6710b0_2         375 KB
    cycler-0.11.0              |     pyhd3eb1b0_0          12 KB
    dbus-1.13.18               |       hb2f20db_0         504 KB
    fontconfig-2.13.1          |       h6c09931_0         250 KB
    fonttools-4.25.0           |     pyhd3eb1b0_0         632 KB
    freetype-2.11.0            |       h70c0345_0         618 KB
    giflib-5.2.1               |       h7b6447c_0          78 KB
    glib-2.69.1                |       h4ff587b_1         1.7 MB
    gst-plugins-base-1.14.0    |       h8213a91_2         4.9 MB
    gstreamer-1.14.0           |       h28cd5cc_2         3.2 MB
    jpeg-9d                    |       h7f8727e_0         232 KB
    kiwisolver-1.3.2           |   py39h295c915_0          80 KB
    lcms2-2.12                 |       h3be6417_0         312 KB
    libpng-1.6.37              |       hbc83047_0         278 KB
    libtiff-4.2.0              |       h85742a9_0         502 KB
    libuuid-1.0.3              |       h7f8727e_2          17 KB
    libwebp-1.2.0              |       h89dd481_0         493 KB
    libwebp-base-1.2.0         |       h27cfd23_0         437 KB
    libxcb-1.14                |       h7b6447c_0         505 KB
    lz4-c-1.9.3                |       h295c915_1         185 KB
    matplotlib-3.5.0           |   py39h06a4308_0          28 KB
    matplotlib-base-3.5.0      |   py39h3ed280b_0         5.7 MB
    munkres-1.1.4              |             py_0          13 KB
    olefile-0.46               |     pyhd3eb1b0_0          34 KB
    pcre-8.45                  |       h295c915_0         207 KB
    pillow-8.4.0               |   py39h5aabda8_0         652 KB
    pyqt-5.9.2                 |   py39h2531618_6         4.7 MB
    qt-5.9.7                   |       h5867ecd_1        68.5 MB
    sip-4.19.13                |   py39h295c915_0         278 KB
    tornado-6.1                |   py39h27cfd23_0         595 KB
    zstd-1.4.9                 |       haebb681_0         480 KB
    ------------------------------------------------------------
                                           Total:        96.3 MB

The following NEW packages will be INSTALLED:

  brotli             pkgs/main/linux-64::brotli-1.0.9-he6710b0_2
  cycler             pkgs/main/noarch::cycler-0.11.0-pyhd3eb1b0_0
  dbus               pkgs/main/linux-64::dbus-1.13.18-hb2f20db_0
  expat              pkgs/main/linux-64::expat-2.4.4-h295c915_0
  fontconfig         pkgs/main/linux-64::fontconfig-2.13.1-h6c09931_0
  fonttools          pkgs/main/noarch::fonttools-4.25.0-pyhd3eb1b0_0
  freetype           pkgs/main/linux-64::freetype-2.11.0-h70c0345_0
  giflib             pkgs/main/linux-64::giflib-5.2.1-h7b6447c_0
  glib               pkgs/main/linux-64::glib-2.69.1-h4ff587b_1
  gst-plugins-base   pkgs/main/linux-64::gst-plugins-base-1.14.0-h8213a91_2
  gstreamer          pkgs/main/linux-64::gstreamer-1.14.0-h28cd5cc_2
  icu                pkgs/main/linux-64::icu-58.2-he6710b0_3
  jpeg               pkgs/main/linux-64::jpeg-9d-h7f8727e_0
  kiwisolver         pkgs/main/linux-64::kiwisolver-1.3.2-py39h295c915_0
  lcms2              pkgs/main/linux-64::lcms2-2.12-h3be6417_0
  libpng             pkgs/main/linux-64::libpng-1.6.37-hbc83047_0
  libtiff            pkgs/main/linux-64::libtiff-4.2.0-h85742a9_0
  libuuid            pkgs/main/linux-64::libuuid-1.0.3-h7f8727e_2
  libwebp            pkgs/main/linux-64::libwebp-1.2.0-h89dd481_0
  libwebp-base       pkgs/main/linux-64::libwebp-base-1.2.0-h27cfd23_0
  libxcb             pkgs/main/linux-64::libxcb-1.14-h7b6447c_0
  libxml2            pkgs/main/linux-64::libxml2-2.9.12-h03d6c58_0
  lz4-c              pkgs/main/linux-64::lz4-c-1.9.3-h295c915_1
  matplotlib         pkgs/main/linux-64::matplotlib-3.5.0-py39h06a4308_0
  matplotlib-base    pkgs/main/linux-64::matplotlib-base-3.5.0-py39h3ed280b_0
  munkres            pkgs/main/noarch::munkres-1.1.4-py_0
  olefile            pkgs/main/noarch::olefile-0.46-pyhd3eb1b0_0
  pcre               pkgs/main/linux-64::pcre-8.45-h295c915_0
  pillow             pkgs/main/linux-64::pillow-8.4.0-py39h5aabda8_0
  pyqt               pkgs/main/linux-64::pyqt-5.9.2-py39h2531618_6
  qt                 pkgs/main/linux-64::qt-5.9.7-h5867ecd_1
  sip                pkgs/main/linux-64::sip-4.19.13-py39h295c915_0
  tornado            pkgs/main/linux-64::tornado-6.1-py39h27cfd23_0
  zstd               pkgs/main/linux-64::zstd-1.4.9-haebb681_0


Proceed ([y]/n)? y


Downloading and Extracting Packages
libuuid-1.0.3        | 17 KB     |                                                                                                                                                                          |   0% libuuid-1.0.3        | 17 KB     | ##############################################################################################################################################################5          |  94% libuuid-1.0.3        | 17 KB     | ######################################################################################################################################################################## | 100% 
matplotlib-3.5.0     | 28 KB     |                                                                                                                                                                          |   0% matplotlib-3.5.0     | 28 KB     | ######################################################################################################################################################################## | 100% 
cycler-0.11.0        | 12 KB     |                                                                                                                                                                          |   0% cycler-0.11.0        | 12 KB     | ######################################################################################################################################################################## | 100% 
gst-plugins-base-1.1 | 4.9 MB    |                                                                                                                                                                          |   0% gst-plugins-base-1.1 | 4.9 MB    | ##################7                                                                                                                                                      |  11% gst-plugins-base-1.1 | 4.9 MB    | ################################################################4                                                                                                        |  38% gst-plugins-base-1.1 | 4.9 MB    | ##########################################################################################################################9                                              |  73% gst-plugins-base-1.1 | 4.9 MB    | ######################################################################################################################################################################## | 100% gst-plugins-base-1.1 | 4.9 MB    | ######################################################################################################################################################################## | 100% 
libtiff-4.2.0        | 502 KB    |                                                                                                                                                                          |   0% libtiff-4.2.0        | 502 KB    | ######################################################################################################################################################################## | 100% 
pcre-8.45            | 207 KB    |                                                                                                                                                                          |   0% pcre-8.45            | 207 KB    | ######################################################################################################################################################################## | 100% 
sip-4.19.13          | 278 KB    |                                                                                                                                                                          |   0% sip-4.19.13          | 278 KB    | #########6                                                                                                                                                               |   6% sip-4.19.13          | 278 KB    | ######################################################################################################################################################################## | 100% 
dbus-1.13.18         | 504 KB    |                                                                                                                                                                          |   0% dbus-1.13.18         | 504 KB    | ######################################################################################################################################################################## | 100% dbus-1.13.18         | 504 KB    | ######################################################################################################################################################################## | 100% 
giflib-5.2.1         | 78 KB     |                                                                                                                                                                          |   0% giflib-5.2.1         | 78 KB     | ######################################################################################################################################################################## | 100% 
olefile-0.46         | 34 KB     |                                                                                                                                                                          |   0% olefile-0.46         | 34 KB     | ######################################################################################################################################################################## | 100% 
brotli-1.0.9         | 375 KB    |                                                                                                                                                                          |   0% brotli-1.0.9         | 375 KB    | ######################################################################################################################################################################## | 100% 
matplotlib-base-3.5. | 5.7 MB    |                                                                                                                                                                          |   0% matplotlib-base-3.5. | 5.7 MB    | ##########################9                                                                                                                                              |  16% matplotlib-base-3.5. | 5.7 MB    | ##############################################################################8                                                                                          |  47% matplotlib-base-3.5. | 5.7 MB    | #############################################################################################################################7                                           |  75% matplotlib-base-3.5. | 5.7 MB    | ######################################################################################################################################################################## | 100% 
lcms2-2.12           | 312 KB    |                                                                                                                                                                          |   0% lcms2-2.12           | 312 KB    | ######################################################################################################################################################################## | 100% 
freetype-2.11.0      | 618 KB    |                                                                                                                                                                          |   0% freetype-2.11.0      | 618 KB    | ######################################################################################################################################################################## | 100% freetype-2.11.0      | 618 KB    | ######################################################################################################################################################################## | 100% 
lz4-c-1.9.3          | 185 KB    |                                                                                                                                                                          |   0% lz4-c-1.9.3          | 185 KB    | ######################################################################################################################################################################## | 100% 
pillow-8.4.0         | 652 KB    |                                                                                                                                                                          |   0% pillow-8.4.0         | 652 KB    | ######################################################################################################################################################################## | 100% pillow-8.4.0         | 652 KB    | ######################################################################################################################################################################## | 100% 
libwebp-1.2.0        | 493 KB    |                                                                                                                                                                          |   0% libwebp-1.2.0        | 493 KB    | ######################################################################################################################################################################## | 100% 
fonttools-4.25.0     | 632 KB    |                                                                                                                                                                          |   0% fonttools-4.25.0     | 632 KB    | ######################################################################################################################################################################## | 100% 
tornado-6.1          | 595 KB    |                                                                                                                                                                          |   0% tornado-6.1          | 595 KB    | ######################################################################################################################################################################## | 100% tornado-6.1          | 595 KB    | ######################################################################################################################################################################## | 100% 
kiwisolver-1.3.2     | 80 KB     |                                                                                                                                                                          |   0% kiwisolver-1.3.2     | 80 KB     | ######################################################################################################################################################################## | 100% 
qt-5.9.7             | 68.5 MB   |                                                                                                                                                                          |   0% qt-5.9.7             | 68.5 MB   | ##4                                                                                                                                                                      |   1% qt-5.9.7             | 68.5 MB   | #####5                                                                                                                                                                   |   3% qt-5.9.7             | 68.5 MB   | #########3                                                                                                                                                               |   6% qt-5.9.7             | 68.5 MB   | ############9                                                                                                                                                            |   8% qt-5.9.7             | 68.5 MB   | #################                                                                                                                                                        |  10% qt-5.9.7             | 68.5 MB   | #####################2                                                                                                                                                   |  13% qt-5.9.7             | 68.5 MB   | #########################3                                                                                                                                               |  15% qt-5.9.7             | 68.5 MB   | #############################                                                                                                                                            |  17% qt-5.9.7             | 68.5 MB   | ################################7                                                                                                                                        |  20% qt-5.9.7             | 68.5 MB   | ####################################4                                                                                                                                    |  22% qt-5.9.7             | 68.5 MB   | ########################################2                                                                                                                                |  24% qt-5.9.7             | 68.5 MB   | ############################################                                                                                                                             |  26% qt-5.9.7             | 68.5 MB   | ###############################################7                                                                                                                         |  28% qt-5.9.7             | 68.5 MB   | ###################################################6                                                                                                                     |  31% qt-5.9.7             | 68.5 MB   | #######################################################3                                                                                                                 |  33% qt-5.9.7             | 68.5 MB   | ###########################################################1                                                                                                             |  35% qt-5.9.7             | 68.5 MB   | ##############################################################7                                                                                                          |  37% qt-5.9.7             | 68.5 MB   | ##################################################################1                                                                                                      |  39% qt-5.9.7             | 68.5 MB   | #####################################################################7                                                                                                   |  41% qt-5.9.7             | 68.5 MB   | #########################################################################                                                                                                |  43% qt-5.9.7             | 68.5 MB   | ############################################################################2                                                                                            |  45% qt-5.9.7             | 68.5 MB   | ###############################################################################3                                                                                         |  47% qt-5.9.7             | 68.5 MB   | ##################################################################################4                                                                                      |  49% qt-5.9.7             | 68.5 MB   | #####################################################################################3                                                                                   |  51% qt-5.9.7             | 68.5 MB   | ########################################################################################9                                                                                |  53% qt-5.9.7             | 68.5 MB   | ############################################################################################2                                                                            |  55% qt-5.9.7             | 68.5 MB   | ###############################################################################################4                                                                         |  57% qt-5.9.7             | 68.5 MB   | ##################################################################################################7                                                                      |  59% qt-5.9.7             | 68.5 MB   | #####################################################################################################9                                                                   |  61% qt-5.9.7             | 68.5 MB   | #########################################################################################################                                                                |  63% qt-5.9.7             | 68.5 MB   | ############################################################################################################1                                                            |  64% qt-5.9.7             | 68.5 MB   | ###############################################################################################################1                                                         |  66% qt-5.9.7             | 68.5 MB   | ##################################################################################################################6                                                      |  68% qt-5.9.7             | 68.5 MB   | ######################################################################################################################                                                   |  70% qt-5.9.7             | 68.5 MB   | #########################################################################################################################2                                               |  72% qt-5.9.7             | 68.5 MB   | ############################################################################################################################1                                            |  74% qt-5.9.7             | 68.5 MB   | ###############################################################################################################################1                                         |  76% qt-5.9.7             | 68.5 MB   | ##################################################################################################################################1                                      |  77% qt-5.9.7             | 68.5 MB   | #####################################################################################################################################5                                   |  80% qt-5.9.7             | 68.5 MB   | #########################################################################################################################################1                               |  82% qt-5.9.7             | 68.5 MB   | ############################################################################################################################################4                            |  84% qt-5.9.7             | 68.5 MB   | ###############################################################################################################################################7                         |  86% qt-5.9.7             | 68.5 MB   | ##################################################################################################################################################7                      |  87% qt-5.9.7             | 68.5 MB   | #####################################################################################################################################################7                   |  89% qt-5.9.7             | 68.5 MB   | ########################################################################################################################################################6                |  91% qt-5.9.7             | 68.5 MB   | ###########################################################################################################################################################5             |  93% qt-5.9.7             | 68.5 MB   | ##############################################################################################################################################################9          |  95% qt-5.9.7             | 68.5 MB   | #################################################################################################################################################################8       |  96% qt-5.9.7             | 68.5 MB   | ####################################################################################################################################################################6    |  98% qt-5.9.7             | 68.5 MB   | #######################################################################################################################################################################1 |  99% qt-5.9.7             | 68.5 MB   | ######################################################################################################################################################################## | 100% 
zstd-1.4.9           | 480 KB    |                                                                                                                                                                          |   0% zstd-1.4.9           | 480 KB    | ######################################################################################################################################################################## | 100% zstd-1.4.9           | 480 KB    | ######################################################################################################################################################################## | 100% 
libwebp-base-1.2.0   | 437 KB    |                                                                                                                                                                          |   0% libwebp-base-1.2.0   | 437 KB    | ######################################################################################################################################################################## | 100% libwebp-base-1.2.0   | 437 KB    | ######################################################################################################################################################################## | 100% 
libxcb-1.14          | 505 KB    |                                                                                                                                                                          |   0% libxcb-1.14          | 505 KB    | ######################################################################################################################################################################## | 100% libxcb-1.14          | 505 KB    | ######################################################################################################################################################################## | 100% 
munkres-1.1.4        | 13 KB     |                                                                                                                                                                          |   0% munkres-1.1.4        | 13 KB     | ######################################################################################################################################################################## | 100% 
libpng-1.6.37        | 278 KB    |                                                                                                                                                                          |   0% libpng-1.6.37        | 278 KB    | ######################################################################################################################################################################## | 100% 
glib-2.69.1          | 1.7 MB    |                                                                                                                                                                          |   0% glib-2.69.1          | 1.7 MB    | ##########################################################################################8                                                                              |  54% glib-2.69.1          | 1.7 MB    | ######################################################################################################################################################################## | 100% 
fontconfig-2.13.1    | 250 KB    |                                                                                                                                                                          |   0% fontconfig-2.13.1    | 250 KB    | ######################################################################################################################################################################## | 100% 
jpeg-9d              | 232 KB    |                                                                                                                                                                          |   0% jpeg-9d              | 232 KB    | ######################################################################################################################################################################## | 100% 
pyqt-5.9.2           | 4.7 MB    |                                                                                                                                                                          |   0% pyqt-5.9.2           | 4.7 MB    | ##############################3                                                                                                                                          |  18% pyqt-5.9.2           | 4.7 MB    | ##############################################################################                                                                                           |  46% pyqt-5.9.2           | 4.7 MB    | ################################################################################################################################                                         |  76% pyqt-5.9.2           | 4.7 MB    | ######################################################################################################################################################################## | 100% 
gstreamer-1.14.0     | 3.2 MB    |                                                                                                                                                                          |   0% gstreamer-1.14.0     | 3.2 MB    | ##################################################7                                                                                                                      |  30% gstreamer-1.14.0     | 3.2 MB    | ####################################################################################################################1                                                    |  69% gstreamer-1.14.0     | 3.2 MB    | ######################################################################################################################################################################## | 100% 
Preparing transaction: - \ | done
Verifying transaction: - \ | / - \ | / done
Executing transaction: \ | / - \ | / - \ | / done
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda install matplotlibpython3 nonstandardcode.py 
Traceback (most recent call last):
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 30, in <module>
    from sklearn.model_selection import train_test_split
ModuleNotFoundError: No module named 'sklearn'
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ python3 nonstandardcode.py [3Pconda install matplotlib[K[K[K[K[K[K[K[K[K[Ksklearn
Collecting package metadata (current_repodata.json): - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ done
Solving environment: / failed with initial frozen solve. Retrying with flexible solve.
Collecting package metadata (repodata.json): \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | done
Solving environment: - failed with initial frozen solve. Retrying with flexible solve.

PackagesNotFoundError: The following packages are not available from current channels:

  - sklearn

Current channels:

  - https://repo.anaconda.com/pkgs/main/linux-64
  - https://repo.anaconda.com/pkgs/main/noarch
  - https://repo.anaconda.com/pkgs/r/linux-64
  - https://repo.anaconda.com/pkgs/r/noarch

To search for alternate channels that may provide the conda package you're
looking for, navigate to

    https://anaconda.org

and use the search bar at the top of the page.


(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda install -c anaconda scikit-learn
Collecting package metadata (current_repodata.json): - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ | / - \ done
Solving environment: / - \ | / - \ done


==> WARNING: A newer version of conda exists. <==
  current version: 4.10.3
  latest version: 4.11.0

Please update conda by running

    $ conda update -n base -c defaults conda



## Package Plan ##

  environment location: /home/nitin/miniconda3/envs/mle-dev

  added / updated specs:
    - scikit-learn


The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    ca-certificates-2020.10.14 |                0         128 KB  anaconda
    joblib-0.17.0              |             py_0         205 KB  anaconda
    libgfortran-ng-7.5.0       |      ha8ba4b0_17          22 KB
    libgfortran4-7.5.0         |      ha8ba4b0_17         995 KB
    scikit-learn-1.0.2         |   py39h51133e4_1         5.6 MB
    scipy-1.7.3                |   py39hc147768_0        16.9 MB
    threadpoolctl-2.1.0        |     pyh5ca1d4c_0          16 KB  anaconda
    ------------------------------------------------------------
                                           Total:        23.8 MB

The following NEW packages will be INSTALLED:

  joblib             anaconda/noarch::joblib-0.17.0-py_0
  libgfortran-ng     pkgs/main/linux-64::libgfortran-ng-7.5.0-ha8ba4b0_17
  libgfortran4       pkgs/main/linux-64::libgfortran4-7.5.0-ha8ba4b0_17
  scikit-learn       pkgs/main/linux-64::scikit-learn-1.0.2-py39h51133e4_1
  scipy              pkgs/main/linux-64::scipy-1.7.3-py39hc147768_0
  threadpoolctl      anaconda/noarch::threadpoolctl-2.1.0-pyh5ca1d4c_0

The following packages will be SUPERSEDED by a higher-priority channel:

  ca-certificates    pkgs/main::ca-certificates-2021.10.26~ --> anaconda::ca-certificates-2020.10.14-0


Proceed ([y]/n)? y


Downloading and Extracting Packages
libgfortran4-7.5.0   | 995 KB    |                                                                                                                                                                          |   0% libgfortran4-7.5.0   | 995 KB    | ##7                                                                                                                                                                      |   2% libgfortran4-7.5.0   | 995 KB    | ######################################################################################################################################################################## | 100% libgfortran4-7.5.0   | 995 KB    | ######################################################################################################################################################################## | 100% 
joblib-0.17.0        | 205 KB    |                                                                                                                                                                          |   0% joblib-0.17.0        | 205 KB    | #############1                                                                                                                                                           |   8% joblib-0.17.0        | 205 KB    | ######################################################################################################################################################################## | 100% 
scikit-learn-1.0.2   | 5.6 MB    |                                                                                                                                                                          |   0% scikit-learn-1.0.2   | 5.6 MB    | #####################1                                                                                                                                                   |  13% scikit-learn-1.0.2   | 5.6 MB    | #####################################################################5                                                                                                   |  41% scikit-learn-1.0.2   | 5.6 MB    | ##########################################################################################################1                                                              |  63% scikit-learn-1.0.2   | 5.6 MB    | ##################################################################################################################################################1                      |  87% scikit-learn-1.0.2   | 5.6 MB    | ######################################################################################################################################################################## | 100% 
scipy-1.7.3          | 16.9 MB   |                                                                                                                                                                          |   0% scipy-1.7.3          | 16.9 MB   | ####8                                                                                                                                                                    |   3% scipy-1.7.3          | 16.9 MB   | #############                                                                                                                                                            |   8% scipy-1.7.3          | 16.9 MB   | ########################5                                                                                                                                                |  15% scipy-1.7.3          | 16.9 MB   | ####################################3                                                                                                                                    |  22% scipy-1.7.3          | 16.9 MB   | ################################################5                                                                                                                        |  29% scipy-1.7.3          | 16.9 MB   | ############################################################6                                                                                                            |  36% scipy-1.7.3          | 16.9 MB   | ##########################################################################3                                                                                              |  44% scipy-1.7.3          | 16.9 MB   | ########################################################################################5                                                                                |  53% scipy-1.7.3          | 16.9 MB   | #######################################################################################################3                                                                 |  61% scipy-1.7.3          | 16.9 MB   | ####################################################################################################################5                                                    |  69% scipy-1.7.3          | 16.9 MB   | ##################################################################################################################################4                                      |  78% scipy-1.7.3          | 16.9 MB   | ###############################################################################################################################################8                         |  86% scipy-1.7.3          | 16.9 MB   | #############################################################################################################################################################1           |  94% scipy-1.7.3          | 16.9 MB   | ######################################################################################################################################################################## | 100% 
ca-certificates-2020 | 128 KB    |                                                                                                                                                                          |   0% ca-certificates-2020 | 128 KB    | ######################################################################################################################################################################## | 100% 
libgfortran-ng-7.5.0 | 22 KB     |                                                                                                                                                                          |   0% libgfortran-ng-7.5.0 | 22 KB     | ######################################################################################################################################################################## | 100% 
threadpoolctl-2.1.0  | 16 KB     |                                                                                                                                                                          |   0% threadpoolctl-2.1.0  | 16 KB     | ######################################################################################################################################################################## | 100% 
Preparing transaction: / - done
Verifying transaction: | / done
Executing transaction: \ | / 

    Installed package of scikit-learn can be accelerated using scikit-learn-intelex.
    More details are available here: https://intel.github.io/scikit-learn-intelex

    For example:

        $ conda install scikit-learn-intelex
        $ python -m sklearnex my_application.py

    

- \ | done
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ conda install -c anaconda scikit-learnsklearn[Kpython3 nonstandardcode.py 
Traceback (most recent call last):
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 32, in <module>
    train_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/model_selection/_split.py", line 2417, in train_test_split
    arrays = indexable(*arrays)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 378, in indexable
    check_consistent_length(*result)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 329, in check_consistent_length
    lengths = [_num_samples(X) for X in arrays if X is not None]
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 329, in <listcomp>
    lengths = [_num_samples(X) for X in arrays if X is not None]
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 269, in _num_samples
    raise TypeError(
TypeError: Singleton array array(<function load_housing_data at 0x7fca1d33e430>, dtype=object) cannot be considered a valid collection.
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md  nonstandardcode.py
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ pico nonstandardcode.py 
[?2004h[?1049h[22;0;0t[1;50r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[48;99H(B[0;7m[ Reading... ](B[m[48;97H(B[0;7m[ Read 181 lines ](B[m[H(B[0;7m  GNU nano 4.8                                                                                    nonstandardcode.py                                                                                               [1;210H(B[m[49d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[49;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-Q(B[m Previous     (B[0;7m^B(B[m Back[49;188H(B[0;7m^◀(B[m Prev Word[50d(B[0;7m^X(B[m Exit[50;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Paste Text    (B[0;7m^T(B[m To Spell[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[50;120H(B[0;7mM-6(B[m Copy Text    (B[0;7m^Q(B[m Where Was     (B[0;7mM-W(B[m Next[50;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^▶(B[m Next Word[48d[2d(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np[3d(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[4d(B[0;1m[36mimport[39m(B[m matplotlib (B[0;1m[36mas[39m(B[m mpl[5d(B[0;1m[36mimport[39m(B[m matplotlib.pyplot (B[0;1m[36mas[39m(B[m plt[6d(B[0;1m[36mimport[39m(B[m os[7d(B[0;1m[36mimport[39m(B[m tarfile[8d(B[0;1m[36mfrom[39m(B[m six.moves (B[0;1m[36mimport[39m(B[m urllib[11dDOWNLOAD_ROOT = (B[0;1m[32m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[12d[39m(B[mHOUSING_PATH = os.path.join((B[0;1m[32m"datasets"[39m(B[m, (B[0;1m[32m"housing"[39m(B[m)[13dHOUSING_URL = DOWNLOAD_ROOT + (B[0;1m[32m"datasets/housing/housing.tgz"[15d[36mdef[34m fetch_housing_data[39m(B[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):[16;5Hos.makedirs(housing_path, exist_ok=(B[0;1m[35mTrue[39m(B[m)[17;5Htgz_path = os.path.join(housing_path, (B[0;1m[32m"housing.tgz"[39m(B[m)[18;5Hurllib.request.urlretrieve(housing_url, tgz_path)[19;5Hhousing_tgz = tarfile.open(tgz_path)[20;5Hhousing_tgz.extractall(path=housing_path)[21;5Hhousing_tgz.close()[23d(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[25d(B[0;1m[36mdef[34m load_housing_data[39m(B[m(housing_path=HOUSING_PATH):[26;5Hcsv_path = os.path.join(housing_path, (B[0;1m[32m"housing.csv"[39m(B[m)[27;5H(B[0;1m[36mreturn[39m(B[m pd.read_csv(csv_path)[29dhousing = load_housing_data[31d(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m train_test_split[33dtrain_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)[35dhousing[(B[0;1m[32m"income_cat"[39m(B[m] = pd.cut(housing[(B[0;1m[32m"median_income"[39m(B[m],[36;32Hbins=[0., 1.5, 3.0, 4.5, 6., np.inf],[37;32Hlabels=[1, 2, 3, 4, 5])[39d(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m StratifiedShuffleSplit[41dsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)[42d(B[0;1m[36mfor[39m(B[m train_index, test_index (B[0;1m[36min[39m(B[m split.split(housing, housing[(B[0;1m[32m"income_cat"[39m(B[m]):[43;5Hstrat_train_set = housing.loc[train_index][44;5Hstrat_test_set = housing.loc[test_index][47d(B[0;1m[36mdef[34m income_cat_proportions[39m(B[m(data):[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[48d[K[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[41d[?12l[?25h[?25l[42d[?12l[?25h[?25l[43d[?12l[?25h[?25l[44d[?12l[?25h[?25l[45d[?12l[?25h[?25l[46d[?12l[?25h[?25l[47d[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H(B[0;1m[36mreturn[39m(B[m data[(B[0;1m[32m"income_cat"[39m(B[m].value_counts() / len(data)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Htrain_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcompare_props = pd.DataFrame({[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H(B[0;1m[32m"Overall"[39m(B[m: income_cat_proportions(housing),[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H(B[0;1m[32m"Stratified"[39m(B[m: income_cat_proportions(strat_test_set),[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H(B[0;1m[32m"Random"[39m(B[m: income_cat_proportions(test_set),[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H}).sort_index()[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcompare_props[(B[0;1m[32m"Rand. %error"[39m(B[m] = 100 * compare_props[(B[0;1m[32m"Random"[39m(B[m] / compare_props[(B[0;1m[32m"Overall"[39m(B[m] - 100[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcompare_props[(B[0;1m[32m"Strat. %error"[39m(B[m] = 100 * compare_props[(B[0;1m[32m"Stratified"[39m(B[m] / compare_props[(B[0;1m[32m"Overall"[39m(B[m] - 100[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfor[39m(B[m set_ (B[0;1m[36min[39m(B[m (strat_train_set, strat_test_set):[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5Hset_.drop((B[0;1m[32m"income_cat"[39m(B[m, axis=1, inplace=(B[0;1m[35mTrue[39m(B[m)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing = strat_train_set.copy()[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing.plot(kind=(B[0;1m[32m"scatter"[39m(B[m, x=(B[0;1m[32m"longitude"[39m(B[m, y=(B[0;1m[32m"latitude"[39m(B[m)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing.plot(kind=(B[0;1m[32m"scatter"[39m(B[m, x=(B[0;1m[32m"longitude"[39m(B[m, y=(B[0;1m[32m"latitude"[39m(B[m, alpha=0.1)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcorr_matrix = housing.corr()[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcorr_matrix[(B[0;1m[32m"median_house_value"[39m(B[m].sort_values(ascending=(B[0;1m[35mFalse[39m(B[m)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing[(B[0;1m[32m"rooms_per_household"[39m(B[m] = housing[(B[0;1m[32m"total_rooms"[39m(B[m]/housing[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing[(B[0;1m[32m"bedrooms_per_room"[39m(B[m] = housing[(B[0;1m[32m"total_bedrooms"[39m(B[m]/housing[(B[0;1m[32m"total_rooms"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing[(B[0;1m[32m"population_per_household"[39m(B[m]=housing[(B[0;1m[32m"population"[39m(B[m]/housing[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing = strat_train_set.drop((B[0;1m[32m"median_house_value"[39m(B[m, axis=1)(B[0;1m[31m # drop labels for training set[39m(B[m[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_labels = strat_train_set[(B[0;1m[32m"median_house_value"[39m(B[m].copy()[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m sklearn.impute (B[0;1m[36mimport[39m(B[m SimpleImputer[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Himputer = SimpleImputer(strategy=(B[0;1m[32m"median"[39m(B[m)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_num = housing.drop((B[0;1m[32m'ocean_proximity'[39m(B[m, axis=1)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Himputer.fit(housing_num)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX = imputer.transform(housing_num)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_tr = pd.DataFrame(X, columns=housing_num.columns,[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;27Hindex=housing.index)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_tr[(B[0;1m[32m"rooms_per_household"[39m(B[m] = housing_tr[(B[0;1m[32m"total_rooms"[39m(B[m]/housing_tr[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_tr[(B[0;1m[32m"bedrooms_per_room"[39m(B[m] = housing_tr[(B[0;1m[32m"total_bedrooms"[39m(B[m]/housing_tr[(B[0;1m[32m"total_rooms"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_tr[(B[0;1m[32m"population_per_household"[39m(B[m]=housing_tr[(B[0;1m[32m"population"[39m(B[m]/housing_tr[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_cat = housing[[(B[0;1m[32m'ocean_proximity'[39m(B[m]][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_prepared = housing_tr.join(pd.get_dummies(housing_cat, drop_first=(B[0;1m[35mTrue[39m(B[m))[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m sklearn.linear_model (B[0;1m[36mimport[39m(B[m LinearRegression[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hlin_reg = LinearRegression()[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hlin_reg.fit(housing_prepared, housing_labels)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m sklearn.metrics (B[0;1m[36mimport[39m(B[m mean_squared_error[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_predictions = lin_reg.predict(housing_prepared)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hlin_mse = mean_squared_error(housing_labels, housing_predictions)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hlin_rmse = np.sqrt(lin_mse)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hlin_rmse[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m sklearn.metrics (B[0;1m[36mimport[39m(B[m mean_absolute_error[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hlin_mae = mean_absolute_error(housing_labels, housing_predictions)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hlin_mae[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m sklearn.tree (B[0;1m[36mimport[39m(B[m DecisionTreeRegressor[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Htree_reg = DecisionTreeRegressor(random_state=42)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Htree_reg.fit(housing_prepared, housing_labels)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hhousing_predictions = tree_reg.predict(housing_prepared)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Htree_mse = mean_squared_error(housing_labels, housing_predictions)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Htree_rmse = np.sqrt(tree_mse)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Htree_rmse[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m sklearn.ensemble (B[0;1m[36mimport[39m(B[m RandomForestRegressor[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m RandomizedSearchCV[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m scipy.stats (B[0;1m[36mimport[39m(B[m randint[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hparam_distribs = {[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;9H(B[0;1m[32m'n_estimators'[39m(B[m: randint(low=1, high=200),[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;9H(B[0;1m[32m'max_features'[39m(B[m: randint(low=1, high=8),[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H}[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hforest_reg = RandomForestRegressor(random_state=42)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hrnd_search = RandomizedSearchCV(forest_reg, param_distributions=param_distribs,[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;33Hn_iter=10, cv=5, scoring=(B[0;1m[32m'neg_mean_squared_error'[39m(B[m, random_state=42)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hrnd_search.fit(housing_prepared, housing_labels)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcvres = rnd_search.cv_results_[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfor[39m(B[m mean_score, params (B[0;1m[36min[39m(B[m zip(cvres[(B[0;1m[32m"mean_test_score"[39m(B[m], cvres[(B[0;1m[32m"params"[39m(B[m]):[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5Hprint(np.sqrt(-mean_score), params)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m GridSearchCV[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hparam_grid = [[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;4H(B[0;1m[31m # try 12 (3×4) combinations of hyperparameters[39m(B[m[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H{(B[0;1m[32m'n_estimators'[39m(B[m: [3, 10, 30], (B[0;1m[32m'max_features'[39m(B[m: [2, 4, 6, 8]},[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;4H(B[0;1m[31m # then try 6 (2×3) combinations with bootstrap set as False[39m(B[m[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H{(B[0;1m[32m'bootstrap'[39m(B[m: [(B[0;1m[35mFalse[39m(B[m], (B[0;1m[32m'n_estimators'[39m(B[m: [3, 10], (B[0;1m[32m'max_features'[39m(B[m: [2, 3, 4]},[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;3H][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hforest_reg = RandomForestRegressor(random_state=42)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[31m# train across 5 folds, that's a total of (12+6)*5=90 rounds of training(B[0m[42m [49m(B[m[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hgrid_search = GridSearchCV(forest_reg, param_grid, cv=5,[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;28Hscoring=(B[0;1m[32m'neg_mean_squared_error'[39m(B[m, return_train_score=(B[0;1m[35mTrue[39m(B[m)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hgrid_search.fit(housing_prepared, housing_labels)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hgrid_search.best_params_[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcvres = grid_search.cv_results_[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfor[39m(B[m mean_score, params (B[0;1m[36min[39m(B[m zip(cvres[(B[0;1m[32m"mean_test_score"[39m(B[m], cvres[(B[0;1m[32m"params"[39m(B[m]):[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5Hprint(np.sqrt(-mean_score), params)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hfeature_importances = grid_search.best_estimator_.feature_importances_[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hsorted(zip(feature_importances, housing_prepared.columns), reverse=(B[0;1m[35mTrue[39m(B[m)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hfinal_model = grid_search.best_estimator_[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test = strat_test_set.drop((B[0;1m[32m"median_house_value"[39m(B[m, axis=1)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hy_test = strat_test_set[(B[0;1m[32m"median_house_value"[39m(B[m].copy()[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_num = X_test.drop((B[0;1m[32m'ocean_proximity'[39m(B[m, axis=1)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_prepared = imputer.transform(X_test_num)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_prepared = pd.DataFrame(X_test_prepared, columns=X_test_num.columns,[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;27Hindex=X_test.index)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_prepared[(B[0;1m[32m"rooms_per_household"[39m(B[m] = X_test_prepared[(B[0;1m[32m"total_rooms"[39m(B[m]/X_test_prepared[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_prepared[(B[0;1m[32m"bedrooms_per_room"[39m(B[m] = X_test_prepared[(B[0;1m[32m"total_bedrooms"[39m(B[m]/X_test_prepared[(B[0;1m[32m"total_rooms"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_prepared[(B[0;1m[32m"population_per_household"[39m(B[m]=X_test_prepared[(B[0;1m[32m"population"[39m(B[m]/X_test_prepared[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_cat = X_test[[(B[0;1m[32m'ocean_proximity'[39m(B[m]][?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1HX_test_prepared = X_test_prepared.join(pd.get_dummies(X_test_cat, drop_first=(B[0;1m[35mTrue[39m(B[m))[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hfinal_predictions = final_model.predict(X_test_prepared)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hfinal_mse = mean_squared_error(y_test, final_predictions)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hfinal_rmse = np.sqrt(final_mse)[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;5Hprint(np.sqrt(-mean_score), params)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfor[39m(B[m mean_score, params (B[0;1m[36min[39m(B[m zip(cvres[(B[0;1m[32m"mean_test_score"[39m(B[m], cvres[(B[0;1m[32m"params"[39m(B[m]):[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hcvres = rnd_search.cv_results_[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hrnd_search.fit(housing_prepared, housing_labels)[?12l[?25h[?25l7[2;48r8M[1;50r[2;33Hn_iter=10, cv=5, scoring=(B[0;1m[32m'neg_mean_squared_error'[39m(B[m, random_state=42)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hrnd_search = RandomizedSearchCV(forest_reg, param_distributions=param_distribs,[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hforest_reg = RandomForestRegressor(random_state=42)[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;5H}[?12l[?25h[?25l7[2;47r8M[1;50r[2;9H(B[0;1m[32m'max_features'[39m(B[m: randint(low=1, high=8),[?12l[?25h[?25l7[2;47r8M[1;50r[2;9H(B[0;1m[32m'n_estimators'[39m(B[m: randint(low=1, high=200),[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hparam_distribs = {[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m scipy.stats (B[0;1m[36mimport[39m(B[m randint[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m RandomizedSearchCV[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.ensemble (B[0;1m[36mimport[39m(B[m RandomForestRegressor[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Htree_rmse[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Htree_rmse = np.sqrt(tree_mse)[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Htree_mse = mean_squared_error(housing_labels, housing_predictions)[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hhousing_predictions = tree_reg.predict(housing_prepared)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Htree_reg.fit(housing_prepared, housing_labels)[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Htree_reg = DecisionTreeRegressor(random_state=42)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.tree (B[0;1m[36mimport[39m(B[m DecisionTreeRegressor[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hlin_mae[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hlin_mae = mean_absolute_error(housing_labels, housing_predictions)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.metrics (B[0;1m[36mimport[39m(B[m mean_absolute_error[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hlin_rmse[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hlin_rmse = np.sqrt(lin_mse)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hlin_mse = mean_squared_error(housing_labels, housing_predictions)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing_predictions = lin_reg.predict(housing_prepared)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.metrics (B[0;1m[36mimport[39m(B[m mean_squared_error[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hlin_reg.fit(housing_prepared, housing_labels)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hlin_reg = LinearRegression()[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.linear_model (B[0;1m[36mimport[39m(B[m LinearRegression[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hhousing_prepared = housing_tr.join(pd.get_dummies(housing_cat, drop_first=(B[0;1m[35mTrue[39m(B[m))[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing_cat = housing[[(B[0;1m[32m'ocean_proximity'[39m(B[m]][?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing_tr[(B[0;1m[32m"population_per_household"[39m(B[m]=housing_tr[(B[0;1m[32m"population"[39m(B[m]/housing_tr[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing_tr[(B[0;1m[32m"bedrooms_per_room"[39m(B[m] = housing_tr[(B[0;1m[32m"total_bedrooms"[39m(B[m]/housing_tr[(B[0;1m[32m"total_rooms"[39m(B[m][?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing_tr[(B[0;1m[32m"rooms_per_household"[39m(B[m] = housing_tr[(B[0;1m[32m"total_rooms"[39m(B[m]/housing_tr[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;47r8M[1;50r[2;27Hindex=housing.index)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing_tr = pd.DataFrame(X, columns=housing_num.columns,[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1HX = imputer.transform(housing_num)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Himputer.fit(housing_num)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing_num = housing.drop((B[0;1m[32m'ocean_proximity'[39m(B[m, axis=1)[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Himputer = SimpleImputer(strategy=(B[0;1m[32m"median"[39m(B[m)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.impute (B[0;1m[36mimport[39m(B[m SimpleImputer[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hhousing_labels = strat_train_set[(B[0;1m[32m"median_house_value"[39m(B[m].copy()[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hhousing = strat_train_set.drop((B[0;1m[32m"median_house_value"[39m(B[m, axis=1)(B[0;1m[31m # drop labels for training set[39m(B[m[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing[(B[0;1m[32m"population_per_household"[39m(B[m]=housing[(B[0;1m[32m"population"[39m(B[m]/housing[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing[(B[0;1m[32m"bedrooms_per_room"[39m(B[m] = housing[(B[0;1m[32m"total_bedrooms"[39m(B[m]/housing[(B[0;1m[32m"total_rooms"[39m(B[m][?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing[(B[0;1m[32m"rooms_per_household"[39m(B[m] = housing[(B[0;1m[32m"total_rooms"[39m(B[m]/housing[(B[0;1m[32m"households"[39m(B[m][?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hcorr_matrix[(B[0;1m[32m"median_house_value"[39m(B[m].sort_values(ascending=(B[0;1m[35mFalse[39m(B[m)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hcorr_matrix = housing.corr()[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hhousing.plot(kind=(B[0;1m[32m"scatter"[39m(B[m, x=(B[0;1m[32m"longitude"[39m(B[m, y=(B[0;1m[32m"latitude"[39m(B[m, alpha=0.1)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing.plot(kind=(B[0;1m[32m"scatter"[39m(B[m, x=(B[0;1m[32m"longitude"[39m(B[m, y=(B[0;1m[32m"latitude"[39m(B[m)[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hhousing = strat_train_set.copy()[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;5Hset_.drop((B[0;1m[32m"income_cat"[39m(B[m, axis=1, inplace=(B[0;1m[35mTrue[39m(B[m)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfor[39m(B[m set_ (B[0;1m[36min[39m(B[m (strat_train_set, strat_test_set):[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hcompare_props[(B[0;1m[32m"Strat. %error"[39m(B[m] = 100 * compare_props[(B[0;1m[32m"Stratified"[39m(B[m] / compare_props[(B[0;1m[32m"Overall"[39m(B[m] - 100[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hcompare_props[(B[0;1m[32m"Rand. %error"[39m(B[m] = 100 * compare_props[(B[0;1m[32m"Random"[39m(B[m] / compare_props[(B[0;1m[32m"Overall"[39m(B[m] - 100[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H}).sort_index()[?12l[?25h[?25l7[2;47r8M[1;50r[2;5H(B[0;1m[32m"Random"[39m(B[m: income_cat_proportions(test_set),[?12l[?25h[?25l7[2;47r8M[1;50r[2;5H(B[0;1m[32m"Stratified"[39m(B[m: income_cat_proportions(strat_test_set),[?12l[?25h[?25l7[2;47r8M[1;50r[2;5H(B[0;1m[32m"Overall"[39m(B[m: income_cat_proportions(housing),[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hcompare_props = pd.DataFrame({[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Htrain_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;5H(B[0;1m[36mreturn[39m(B[m data[(B[0;1m[32m"income_cat"[39m(B[m].value_counts() / len(data)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mdef[34m income_cat_proportions[39m(B[m(data):[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;5Hstrat_test_set = housing.loc[test_index][?12l[?25h[?25l7[2;48r8M[1;50r[2;5Hstrat_train_set = housing.loc[train_index][?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfor[39m(B[m train_index, test_index (B[0;1m[36min[39m(B[m split.split(housing, housing[(B[0;1m[32m"income_cat"[39m(B[m]):[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m StratifiedShuffleSplit[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;32Hlabels=[1, 2, 3, 4, 5])[?12l[?25h[?25l7[2;47r8M[1;50r[2;32Hbins=[0., 1.5, 3.0, 4.5, 6., np.inf],[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Hhousing[(B[0;1m[32m"income_cat"[39m(B[m] = pd.cut(housing[(B[0;1m[32m"median_income"[39m(B[m],[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1Htrain_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m train_test_split[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;1Hhousing = load_housing_data[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;5H(B[0;1m[36mreturn[39m(B[m pd.read_csv(csv_path)[?12l[?25h[?25l7[2;48r8M[1;50r[2;5Hcsv_path = os.path.join(housing_path, (B[0;1m[32m"housing.csv"[39m(B[m)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mdef[34m load_housing_data[39m(B[m(housing_path=HOUSING_PATH):[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;5Hhousing_tgz.close()[?12l[?25h[?25l7[2;48r8M[1;50r[2;5Hhousing_tgz.extractall(path=housing_path)[?12l[?25h[?25l7[2;47r8M[1;50r[2;5Hhousing_tgz = tarfile.open(tgz_path)[?12l[?25h[?25l7[2;47r8M[1;50r[2;5Hurllib.request.urlretrieve(housing_url, tgz_path)[?12l[?25h[?25l7[2;47r8M[1;50r[2;5Htgz_path = os.path.join(housing_path, (B[0;1m[32m"housing.tgz"[39m(B[m)[?12l[?25h[?25l7[2;48r8M[1;50r[2;5Hos.makedirs(housing_path, exist_ok=(B[0;1m[35mTrue[39m(B[m)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mdef[34m fetch_housing_data[39m(B[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;48r8M[1;50r[2;1HHOUSING_URL = DOWNLOAD_ROOT + (B[0;1m[32m"datasets/housing/housing.tgz"[39m(B[m[?12l[?25h[?25l7[2;47r8M[1;50r[2;1HHOUSING_PATH = os.path.join((B[0;1m[32m"datasets"[39m(B[m, (B[0;1m[32m"housing"[39m(B[m)[?12l[?25h[?25l7[2;47r8M[1;50r[2;1HDOWNLOAD_ROOT = (B[0;1m[32m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[39m(B[m[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mfrom[39m(B[m six.moves (B[0;1m[36mimport[39m(B[m urllib[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mimport[39m(B[m tarfile[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mimport[39m(B[m os[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H(B[0;1m[36mimport[39m(B[m matplotlib.pyplot (B[0;1m[36mas[39m(B[m plt[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mimport[39m(B[m matplotlib (B[0;1m[36mas[39m(B[m mpl[?12l[?25h[?25l7[2;48r8M[1;50r[2;1H(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[?12l[?25h[?25l7[2;47r8M[1;50r[2;1H(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[1;202H(B[0;7mModified(B[m[2d:(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np:[?12l[?25h[?25l[1P[?12l[?25h[?25l[48d(B[0;7mSave modified buffer?                                                                                                                                                                                              [49;1H Y(B[m Yes[K[50d(B[0;7m N(B[m No  [50;17H(B[0;7m^C(B[m Cancel[K[48;23H[?12l[?25h[?25l[J[50d[?12l[?25h[50;1H[?1049l[23;0;0t[?1l>[?2004l(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ 
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ 
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ env
SHELL=/bin/bash
CONDA_EXE=/home/nitin/miniconda3/bin/conda
_CE_M=
WSL_DISTRO_NAME=Ubuntu
SSH_AUTH_SOCK=/tmp/ssh-LE6LhLvLR4at/agent.956
SSH_AGENT_PID=957
NAME=US-Nitin
PWD=/home/nitin/mle-training/mle-training
LOGNAME=nitin
CONDA_PREFIX=/home/nitin/miniconda3/envs/mle-dev
MOTD_SHOWN=update-motd
HOME=/home/nitin
LANG=C.UTF-8
WSL_INTEROP=/run/WSL/8_interop
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
CONDA_PROMPT_MODIFIER=(mle-dev) 
LESSCLOSE=/usr/bin/lesspipe %s %s
TERM=xterm-256color
_CE_CONDA=
LESSOPEN=| /usr/bin/lesspipe %s
USER=nitin
CONDA_SHLVL=2
SHLVL=2
CONDA_PYTHON_EXE=/home/nitin/miniconda3/bin/python
CONDA_DEFAULT_ENV=mle-dev
WSLENV=
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
PATH=/home/nitin/miniconda3/envs/mle-dev/bin:/home/nitin/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/WindowsApps/CanonicalGroupLimited.UbuntuonWindows_2004.2021.825.0_x64__79rhkp1fndgsc:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0:/mnt/c/windows/System32/OpenSSH:/mnt/c/Users/nitin/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/nitin/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin
HOSTTYPE=x86_64
CONDA_PREFIX_1=/home/nitin/miniconda3
OLDPWD=/home/nitin/mle-training
_=/usr/bin/env
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ env>env.yml
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md  env.yml  nonstandardcode.py
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ pic[K[K[Kvi env.yml 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"env.yml" 32L, 2841C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1HSHELL=/bin/bash
CONDA_EXE=/home/nitin/miniconda3/bin/conda
_CE_M=
WSL_DISTRO_NAME=Ubuntu
SSH_AUTH_SOCK=/tmp/ssh-LE6LhLvLR4at/agent.956
SSH_AGENT_PID=957
NAME=US-Nitin
PWD=/home/nitin/mle-training/mle-training
LOGNAME=nitin
CONDA_PREFIX=/home/nitin/miniconda3/envs/mle-dev
MOTD_SHOWN=update-motd
HOME=/home/nitin
LANG=C.UTF-8
WSL_INTEROP=/run/WSL/8_interop
[36mLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arr[16;1Hj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zss[17;1Ht=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;33[18;1H1:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xx[19;1Hbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v==[20;1H01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cc[21;1Hgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;;[22;1H36:*.spx=00;36:*.xspf=00;36[m[35m:[m
CONDA_PROMPT_MODIFIER=(mle-dev)
LESSCLOSE=/usr/bin/lesspipe %s %s
TERM=xterm-256color
_CE_CONDA=
LESSOPEN=| /usr/bin/lesspipe %s
USER=nitin
CONDA_SHLVL=2
SHLVL=2
CONDA_PYTHON_EXE=/home/nitin/miniconda3/bin/python
CONDA_DEFAULT_ENV=mle-dev
WSLENV=
XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop
PATH=/home/nitin/miniconda3/envs/mle-dev/bin:/home/nitin/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Windowss[36;1HApps/CanonicalGroupLimited.UbuntuonWindows_2004.2021.825.0_x64__79rhkp1fndgsc:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0:/mnt/c/windows/Syss[37;1Htem32/OpenSSH:/mnt/c/Users/nitin/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/nitin/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin
HOSTTYPE=x86_64
CONDA_PREFIX_1=/home/nitin/miniconda3
OLDPWD=/home/nitin/mle-training
_=/usr/bin/env
[94m~                                                                                                                                                                                                                  [43;1H~                                                                                                                                                                                                                  [44;1H~                                                                                                                                                                                                                  [45;1H~                                                                                                                                                                                                                  [46;1H~                                                                                                                                                                                                                  [47;1H~                                                                                                                                                                                                                  [48;1H~                                                                                                                                                                                                                  [49;1H~                                                                                                                                                                                                                  [m[50;194H1,1[11CAll[1;1H[?25h[?25l[50;184H^[[1;1H[50;184H  [1;1H[50;184H^[[1;1H[50;184H  [1;1H[?25h[?25l[50;184H:[1;1H[50;1H[K[50;1H:[?2004h[?25hq[?25l[?2004l[23;2t[23;1t[50;1H[K[50;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md  env.yml  nonstandardcode.py
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git status
On branch en/1/improve_code_quality
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   .gitignore[m

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	[31menv.yml[m

no changes added to commit (use "git add" and/or "git commit -a")
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git add env.yml 
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git status
On branch en/1/improve_code_quality
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	[32mnew file:   env.yml[m

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   .gitignore[m

(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git commit - [Km 'add env [K.yml and updated.gitignore .gitignore[C[C[C[C[C[C[C[C[C[C'[K"[1P[1@"
[en/1/improve_code_quality a5b8562] add env.yml and updated .gitignore
 1 file changed, 32 insertions(+)
 create mode 100644 env.yml
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git status
On branch en/1/improve_code_quality
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   .gitignore[m

no changes added to commit (use "git add" and/or "git commit -a")
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git statuscommit -m "add env.yml and updated .gitignore"[1@a
[en/1/improve_code_quality f904ecf] add env.yml and updated .gitignore
 1 file changed, 2 insertions(+)
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git commit -am "add env.yml and updated .gitignore"status[Kcommit -m "add env.yml and updated .gitignore"status[K
On branch en/1/improve_code_quality
nothing to commit, working tree clean
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md  env.yml  nonstandardcode.py
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git py[Kush origin en/1/improve_code_quality 
Enumerating objects: 8, done.
Counting objects:  12% (1/8)Counting objects:  25% (2/8)Counting objects:  37% (3/8)Counting objects:  50% (4/8)Counting objects:  62% (5/8)Counting objects:  75% (6/8)Counting objects:  87% (7/8)Counting objects: 100% (8/8)Counting objects: 100% (8/8), done.
Delta compression using up to 8 threads
Compressing objects:  16% (1/6)Compressing objects:  33% (2/6)Compressing objects:  50% (3/6)Compressing objects:  66% (4/6)Compressing objects:  83% (5/6)Compressing objects: 100% (6/6)Compressing objects: 100% (6/6), done.
Writing objects:  16% (1/6)Writing objects:  33% (2/6)Writing objects:  50% (3/6)Writing objects:  66% (4/6)Writing objects:  83% (5/6)Writing objects: 100% (6/6)Writing objects: 100% (6/6), 1.74 KiB | 1.74 MiB/s, done.
Total 6 (delta 2), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/2)[Kremote: Resolving deltas:  50% (1/2)[Kremote: Resolving deltas: 100% (2/2)[Kremote: Resolving deltas: 100% (2/2), completed with 1 local object.[K
To https://github.com/nitin-tiger/mle-training
   6c959ca..f904ecf  en/1/improve_code_quality -> en/1/improve_code_quality
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git push origin en/1/improve_code_quality [Kpython3 nonstandardcode.py 
Traceback (most recent call last):
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 32, in <module>
    train_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/model_selection/_split.py", line 2417, in train_test_split
    arrays = indexable(*arrays)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 378, in indexable
    check_consistent_length(*result)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 329, in check_consistent_length
    lengths = [_num_samples(X) for X in arrays if X is not None]
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 329, in <listcomp>
    lengths = [_num_samples(X) for X in arrays if X is not None]
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 269, in _num_samples
    raise TypeError(
TypeError: Singleton array array(<function load_housing_data at 0x7f4c7c43b430>, dtype=object) cannot be considered a valid collection.
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ python3 nonstandardcode.py [C[1P[1P[1P[1P[1P[1P[1@i[1@c[1@o
[?2004h[?1049h[22;0;0t[1;50r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[48;99H(B[0;7m[ Reading... ](B[m[48;97H(B[0;7m[ Read 181 lines ](B[m[H(B[0;7m  GNU nano 4.8                                                                                    nonstandardcode.py                                                                                               [1;210H(B[m[49d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[49;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-Q(B[m Previous     (B[0;7m^B(B[m Back[49;188H(B[0;7m^◀(B[m Prev Word[50d(B[0;7m^X(B[m Exit[50;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Paste Text    (B[0;7m^T(B[m To Spell[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[50;120H(B[0;7mM-6(B[m Copy Text    (B[0;7m^Q(B[m Where Was     (B[0;7mM-W(B[m Next[50;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^▶(B[m Next Word[48d[2d(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np[3d(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[4d(B[0;1m[36mimport[39m(B[m matplotlib (B[0;1m[36mas[39m(B[m mpl[5d(B[0;1m[36mimport[39m(B[m matplotlib.pyplot (B[0;1m[36mas[39m(B[m plt[6d(B[0;1m[36mimport[39m(B[m os[7d(B[0;1m[36mimport[39m(B[m tarfile[8d(B[0;1m[36mfrom[39m(B[m six.moves (B[0;1m[36mimport[39m(B[m urllib[11dDOWNLOAD_ROOT = (B[0;1m[32m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[12d[39m(B[mHOUSING_PATH = os.path.join((B[0;1m[32m"datasets"[39m(B[m, (B[0;1m[32m"housing"[39m(B[m)[13dHOUSING_URL = DOWNLOAD_ROOT + (B[0;1m[32m"datasets/housing/housing.tgz"[15d[36mdef[34m fetch_housing_data[39m(B[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):[16;5Hos.makedirs(housing_path, exist_ok=(B[0;1m[35mTrue[39m(B[m)[17;5Htgz_path = os.path.join(housing_path, (B[0;1m[32m"housing.tgz"[39m(B[m)[18;5Hurllib.request.urlretrieve(housing_url, tgz_path)[19;5Hhousing_tgz = tarfile.open(tgz_path)[20;5Hhousing_tgz.extractall(path=housing_path)[21;5Hhousing_tgz.close()[23d(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[25d(B[0;1m[36mdef[34m load_housing_data[39m(B[m(housing_path=HOUSING_PATH):[26;5Hcsv_path = os.path.join(housing_path, (B[0;1m[32m"housing.csv"[39m(B[m)[27;5H(B[0;1m[36mreturn[39m(B[m pd.read_csv(csv_path)[29dhousing = load_housing_data[31d(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m train_test_split[33dtrain_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)[35dhousing[(B[0;1m[32m"income_cat"[39m(B[m] = pd.cut(housing[(B[0;1m[32m"median_income"[39m(B[m],[36;32Hbins=[0., 1.5, 3.0, 4.5, 6., np.inf],[37;32Hlabels=[1, 2, 3, 4, 5])[39d(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m StratifiedShuffleSplit[41dsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)[42d(B[0;1m[36mfor[39m(B[m train_index, test_index (B[0;1m[36min[39m(B[m split.split(housing, housing[(B[0;1m[32m"income_cat"[39m(B[m]):[43;5Hstrat_train_set = housing.loc[train_index][44;5Hstrat_test_set = housing.loc[test_index][47d(B[0;1m[36mdef[34m income_cat_proportions[39m(B[m(data):[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[48d[K[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[39d[?12l[?25h[?25l[40d[?12l[?25h[?25l[41d[?12l[?25h[?25l[42d[?12l[?25h[?25l[43d[?12l[?25h[?25l[44d[?12l[?25h[?25l[45d[?12l[?25h[?25l[46d[?12l[?25h[?25l[47d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25ls[?12l[?25h[?25lp[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25lS[?12l[?25h[?25lt[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25lt[?12l[?25h[?25li[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25le[?12l[?25h[?25ld[?12l[?25h[?25lS[?12l[?25h[?25lh[?12l[?25h[?25lu[?12l[?25h[?25lf[?12l[?25h[?25lf[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25lS[?12l[?25h[?25lp[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25lt[?12l[?25h[?25l([?12l[?25h[?25ln[?12l[?25h[?25l_[?12l[?25h[?25ls[?12l[?25h[?25lp[?12l[?25h[?25ll[?12l[?25h[?25li[?12l[?25h[?25lt[?12l[?25h[?25ls[?12l[?25h[?25l=[?12l[?25h[?25l1[?12l[?25h[?25l,[?12l[?25h[?25l [?12l[?25h[?25lt[?12l[?25h[?25l[42d[?12l[?25h[?25l[43d[?12l[?25h[?25l[44d[?12l[?25h[?25l[45d[?12l[?25h[?25l[46d[?12l[?25h[?25l[47;34H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H(B[0;1m[36mreturn[39m(B[m data[(B[0;1m[32m"income_cat"[39m(B[m].value_counts() / len(data)[47;45H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Htrain_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)[47;45H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcompare_props = pd.DataFrame({[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H(B[0;1m[32m"Overall"[39m(B[m: income_cat_proportions(housing),[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H(B[0;1m[32m"Stratified"[39m(B[m: income_cat_proportions(strat_test_set),[47;45H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5H(B[0;1m[32m"Random"[39m(B[m: income_cat_proportions(test_set),[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H}).sort_index()[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcompare_props[(B[0;1m[32m"Rand. %error"[39m(B[m] = 100 * compare_props[(B[0;1m[32m"Random"[39m(B[m] / compare_props[(B[0;1m[32m"Overall"[39m(B[m] - 100[47;45H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1Hcompare_props[(B[0;1m[32m"Strat. %error"[39m(B[m] = 100 * compare_props[(B[0;1m[32m"Stratified"[39m(B[m] / compare_props[(B[0;1m[32m"Overall"[39m(B[m] - 100[47;45H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;1H(B[0;1m[36mfor[39m(B[m set_ (B[0;1m[36min[39m(B[m (strat_train_set, strat_test_set):[?12l[?25h[?25l7[2;48r8[48d
[1;50r[47;5Hset_.drop((B[0;1m[32m"income_cat"[39m(B[m, axis=1, inplace=(B[0;1m[35mTrue[39m(B[m)[45G[?12l[?25h[?25l[?12l[?25h[?25l[49d[J[50d[?12l[?25h[50;1H[?1049l[23;0;0t[?1l>[?2004l(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ pico nonstandardcode.py [3@ython3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P
Traceback (most recent call last):
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 32, in <module>
    train_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/model_selection/_split.py", line 2417, in train_test_split
    arrays = indexable(*arrays)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 378, in indexable
    check_consistent_length(*result)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 329, in check_consistent_length
    lengths = [_num_samples(X) for X in arrays if X is not None]
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 329, in <listcomp>
    lengths = [_num_samples(X) for X in arrays if X is not None]
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/sklearn/utils/validation.py", line 269, in _num_samples
    raise TypeError(
TypeError: Singleton array array(<function load_housing_data at 0x7f42764e5430>, dtype=object) cannot be considered a valid collection.
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ python nonstandardcode.py [2Pico[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004h[?1049h[22;0;0t[1;50r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[48;99H(B[0;7m[ Reading... ](B[m[48;97H(B[0;7m[ Read 181 lines ](B[m[H(B[0;7m  GNU nano 4.8                                                                                    nonstandardcode.py                                                                                               [1;210H(B[m[49d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[49;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-Q(B[m Previous     (B[0;7m^B(B[m Back[49;188H(B[0;7m^◀(B[m Prev Word[50d(B[0;7m^X(B[m Exit[50;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Paste Text    (B[0;7m^T(B[m To Spell[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[50;120H(B[0;7mM-6(B[m Copy Text    (B[0;7m^Q(B[m Where Was     (B[0;7mM-W(B[m Next[50;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^▶(B[m Next Word[48d[2d(B[0;1m[36mimport[39m(B[m numpy (B[0;1m[36mas[39m(B[m np[3d(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[4d(B[0;1m[36mimport[39m(B[m matplotlib (B[0;1m[36mas[39m(B[m mpl[5d(B[0;1m[36mimport[39m(B[m matplotlib.pyplot (B[0;1m[36mas[39m(B[m plt[6d(B[0;1m[36mimport[39m(B[m os[7d(B[0;1m[36mimport[39m(B[m tarfile[8d(B[0;1m[36mfrom[39m(B[m six.moves (B[0;1m[36mimport[39m(B[m urllib[11dDOWNLOAD_ROOT = (B[0;1m[32m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[12d[39m(B[mHOUSING_PATH = os.path.join((B[0;1m[32m"datasets"[39m(B[m, (B[0;1m[32m"housing"[39m(B[m)[13dHOUSING_URL = DOWNLOAD_ROOT + (B[0;1m[32m"datasets/housing/housing.tgz"[15d[36mdef[34m fetch_housing_data[39m(B[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):[16;5Hos.makedirs(housing_path, exist_ok=(B[0;1m[35mTrue[39m(B[m)[17;5Htgz_path = os.path.join(housing_path, (B[0;1m[32m"housing.tgz"[39m(B[m)[18;5Hurllib.request.urlretrieve(housing_url, tgz_path)[19;5Hhousing_tgz = tarfile.open(tgz_path)[20;5Hhousing_tgz.extractall(path=housing_path)[21;5Hhousing_tgz.close()[23d(B[0;1m[36mimport[39m(B[m pandas (B[0;1m[36mas[39m(B[m pd[25d(B[0;1m[36mdef[34m load_housing_data[39m(B[m(housing_path=HOUSING_PATH):[26;5Hcsv_path = os.path.join(housing_path, (B[0;1m[32m"housing.csv"[39m(B[m)[27;5H(B[0;1m[36mreturn[39m(B[m pd.read_csv(csv_path)[29dhousing = load_housing_data[31d(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m train_test_split[33dtrain_set, test_set = train_test_split(housing, test_size=0.2, random_state=42)[35dhousing[(B[0;1m[32m"income_cat"[39m(B[m] = pd.cut(housing[(B[0;1m[32m"median_income"[39m(B[m],[36;32Hbins=[0., 1.5, 3.0, 4.5, 6., np.inf],[37;32Hlabels=[1, 2, 3, 4, 5])[39d(B[0;1m[36mfrom[39m(B[m sklearn.model_selection (B[0;1m[36mimport[39m(B[m StratifiedShuffleSplit[41dsplit = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)[42d(B[0;1m[36mfor[39m(B[m train_index, test_index (B[0;1m[36min[39m(B[m split.split(housing, housing[(B[0;1m[32m"income_cat"[39m(B[m]):[43;5Hstrat_train_set = housing.loc[train_index][44;5Hstrat_test_set = housing.loc[test_index][47d(B[0;1m[36mdef[34m income_cat_proportions[39m(B[m(data):[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[6d[?12l[?25h[?25l[7d[?12l[?25h[?25l[8d[?12l[?25h[?25l[9d[?12l[?25h[?25l[10d[?12l[?25h[?25l[11d[?12l[?25h[?25l[12d[?12l[?25h[?25l[13d[?12l[?25h[?25l[14d[?12l[?25h[?25l[15d[?12l[?25h[?25l[16d[?12l[?25h[?25l[17d[?12l[?25h[?25l[18d[?12l[?25h[?25l[19d[?12l[?25h[?25l[20d[?12l[?25h[?25l[21d[?12l[?25h[?25l[22d[?12l[?25h[?25l[23d[?12l[?25h[?25l[24d[?12l[?25h[?25l[25d[?12l[?25h[?25l[26d[?12l[?25h[?25l[27d[?12l[?25h[?25l[48d[K[28d[?12l[?25h[?25l[29d[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[A[?12l[?25h[?25l[30d[?12l[?25h[?25l[31d[?12l[?25h[?25l[32d[?12l[?25h[?25l[33d[?12l[?25h[?25l[34d[?12l[?25h[?25l[35d[?12l[?25h[?25l[36d[?12l[?25h[?25l[37d[?12l[?25h[?25l[38d[?12l[?25h[?25l[39d[?12l[?25h[?25l[?12l[?25h[?25l[48;94H(B[0;7m[ Recording a macro... ](B[m[39d[?12l[?25h[?25l[?12l[?25h[?25l[?12l[?25h[?25l[48d[J[50d[?12l[?25h[50;1H[?1049l[23;0;0t[?1l>[?2004l(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ pico nonstandardcode.py [C[1P[1P[1P[1P[1@v[1@i
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"nonstandardcode.py" 181L, 6908C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1Hcvres = rnd_search.cv_results_
[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):
    [36mprint[m(np.sqrt(-mean_score), params)


[35mfrom[m sklearn.model_selection [35mimport[m GridSearchCV

param_grid = [
    [34m# try 12 (3×[9;17H4) combinations of hyperparameters[m
    {[31m'n_estimators'[m: [[31m3[m, [31m10[m, [31m30[m], [31m'max_features'[m: [[31m2[m, [31m4[m, [31m6[m, [31m8[m]},
    [34m# then try 6 (2×[11;21H3) combinations with bootstrap set as False[m
    {[31m'bootstrap'[m: [[36mFalse[m], [31m'n_estimators'[m: [[31m3[m, [31m10[m], [31m'max_features'[m: [[31m2[m, [31m3[m, [31m4[m]},
  ]

forest_reg = RandomForestRegressor(random_state=[31m42[m)
[34m# train across 5 folds, that's a total of (12+6)*5=90 rounds of training [m
grid_search = GridSearchCV(forest_reg, param_grid, cv=[31m5[m,[18;28Hscoring=[31m'neg_mean_squared_error'[m, return_train_score=[36mTrue[m)
grid_search.fit(housing_prepared, housing_labels)

grid_search.best_params_
cvres = grid_search.cv_results_
[38;5;130mfor[m mean_score, params [38;5;130min[m [36mzip[m(cvres[[31m"mean_test_score"[m], cvres[[31m"params"[m]):
    [36mprint[m(np.sqrt(-mean_score), params)

feature_importances = grid_search.best_estimator_.feature_importances_
[36msorted[m([36mzip[m(feature_importances, housing_prepared.columns), reverse=[36mTrue[m)


final_model = grid_search.best_estimator_

X_test = strat_test_set.drop([31m"median_house_value"[m, axis=[31m1[m)
y_test = strat_test_set[[31m"median_house_value"[m].copy()

X_test_num = X_test.drop([31m'ocean_proximity'[m, axis=[31m1[m)
X_test_prepared = imputer.transform(X_test_num)
X_test_prepared = pd.DataFrame(X_test_prepared, columns=X_test_num.columns,[38;27Hindex=X_test.index)
X_test_prepared[[31m"rooms_per_household"[m] = X_test_prepared[[31m"total_rooms"[m]/X_test_prepared[[31m"households"[m]
X_test_prepared[[31m"bedrooms_per_room"[m] = X_test_prepared[[31m"total_bedrooms"[m]/X_test_prepared[[31m"total_rooms"[m]
X_test_prepared[[31m"population_per_household"[m]=X_test_prepared[[31m"population"[m]/X_test_prepared[[31m"households"[m]

X_test_cat = X_test[[[31m'ocean_proximity'[m]]
X_test_prepared = X_test_prepared.join(pd.get_dummies(X_test_cat, drop_first=[36mTrue[m))


final_predictions = final_model.predict(X_test_prepared)
final_mse = mean_squared_error(y_test, final_predictions)
final_rmse = np.sqrt[106m([mfinal_mse[106m)[m[50;194H181,31[8CBot[49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [49;31H[?25h[?25l[50;184H~@k[49;31H[50;184H   [48;31H[106m([25C)[m[49;21H([9C)[50;196H0[48;31H[?25h[?25l[50;184H~@k[48;31H[50;184H   [47;31H[48;31H([25C)[50;195H79[47;31H[?25h[?25l[50;184H~@k[47;31H[50;184H   [46;1H[50;196H8,0-1[46;1H[?25h[?25l[50;184H~@k[46;1H[50;184H   [45;1H[50;196H7[45;1H[?25h[?25l[50;184H~@k[45;1H[50;184H   [44;31H[50;196H6,31 [44;31H[?25h[?25l[50;184H~@k[44;31H[50;184H   [43;31H[50;196H5[43;31H[?25h[?25l[50;184H~@k[43;31H[50;184H   [42;1H[50;196H4,0-1[42;1H[?25h[?25l[50;184H~@k[42;1H[50;184H   [41;31H[50;196H3,31 [41;31H[?25h[?25l[50;184H~@k[41;31H[50;184H   [40;31H[50;196H2[40;31H[?25h[?25l[50;184H~@k[40;31H[50;184H   [39;31H[50;196H1[39;31H[?25h[?25l[50;184H~@k[39;31H[50;184H   [38;31H[50;196H0[38;31H[?25h[?25l[50;184H~@k[38;31H[50;184H   [37;31H[106m([38;45H)[m[50;195H69[37;31H[?25h[?25l[50;184H~@k[37;31H[50;184H   [36;31H[37;31H([38;45H)[50;196H8[36;31H[?25h[?25l[50;184H~@k[36;31H[50;184H   [35;31H[50;196H7[35;31H[?25h[?25l[50;184H~@k[35;31H[50;184H   [34;1H[50;196H6,0-1[34;1H[?25h[?25l[50;184H~@k[34;1H[50;184H   [33;31H[50;196H5,31 [33;31H[?25h[?25l[50;184H~@k[33;31H[50;184H   [32;31H[50;196H4[32;31H[?25h[?25l[50;184H~@k[32;31H[50;184H   [31;1H[50;196H3,0-1[31;1H[?25h[?25l[50;184H~@k[31;1H[50;184H   [30;31H[50;196H2,31 [30;31H[?25h[?25l[50;184H~@k[30;31H[50;184H   [29;1H[50;196H1,0-1[29;1H[?25h[?25l[50;184H~@k[29;1H[50;184H   [28;1H[50;196H0[28;1H[?25h[?25l[50;184H~@k[28;1H[50;184H   [27;31H[50;195H59,31 [27;31H[?25h[?25l[50;184H~@k[27;31H[50;184H   [26;31H[50;196H8[26;31H[?25h[?25l[50;184H~@k[26;31H[50;184H   [25;1H[50;196H7,0-1[25;1H[?25h[?25l[50;184H~@k[25;1H[50;184H   [24;31H[50;196H6,31 [24;31H[?25h[?25l[50;184H~@k[24;31H[50;184H   [23;31H[50;196H5[23;31H[?25h[?25l[50;184H~@k[23;31H[50;184H   [22;31H[50;196H4[22;31H[?25h[?25l[50;184H~@k[22;31H[50;184H   [21;24H[50;196H3,24[21;24H[?25h[?25l[50;184H~@k[21;24H[50;184H   [20;1H[50;196H2,0-1[20;1H[?25h[?25l[50;184H~@k[20;1H[50;184H   [19;31H[50;196H1,31 [19;31H[?25h[?25l[50;184H~@k[19;31H[50;184H   [18;31H[50;196H0[18;31H[?25h[?25l[50;184H~@k[18;31H[50;184H   [17;31H[50;195H49[17;31H[?25h[?25l[50;184H~@k[17;31H[50;184H   [16;31H[50;196H8[16;31H[?25h[?25l[50;184H~@k[16;31H[50;184H   [15;31H[50;196H7[15;31H[?25h[?25l[50;184H~@k[15;31H[50;184H   [14;1H[50;196H6,0-1[14;1H[?25h[?25l[50;184H~@k[14;1H[50;184H   [13;3H[8;14H[106m[[13;3H][m[50;196H5,3  [13;3H[?25h[?25l[50;184H~@k[13;3H[50;184H   [12;31H[8;14H[[13;3H][50;196H4,31[12;31H[?25h[?25l[50;184H~@k[12;31H[50;184H   [11;31H[50;196H3,32-31[11;31H[?25h[?25l[50;184H~@k[11;31H[50;184H   [10;31H[50;196H2,31   [10;31H[?25h[?25l[50;184H~@k[10;31H[50;184H   [9;31H[50;196H1,32-31[9;31H[?25h[?25l[50;184H~@k[9;31H[50;184H   [8;14H[106m[[13;3H][m[50;196H0,14   [8;14H[?25h[?25l[50;184H~@k[8;14H[50;184H   [7;1H[8;14H[[13;3H][50;195H39,0-1[7;1H[?25h[?25l[50;184H~@k[7;1H[50;184H   [6;31H[50;196H8,31 [6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hrnd_search.fit(housing_prepared, housing_labels)[50;1H[K[50;194H137,0-1[7C99%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;33Hn_iter=[31m10[m, cv=[31m5[m, scoring=[31m'neg_mean_squared_error'[m, random_state=[31m42[m)[50;194H[K[50;194H136,0-1[7C98%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hrnd_search = RandomizedSearchCV(forest_reg, param_distributions=param_distribs,[50;194H[K[50;194H135,31[8C97%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hforest_reg = RandomForestRegressor(random_state=[31m42[m)[50;194H[K[50;194H134,31[8C96%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;30H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H133,30[8C96%[6;30H[?25h[?25l[50;184H~@k[6;30H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;5H}[50;194H[K[50;194H132,31[8C95%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;9H[31m'max_features'[m: randint(low=[31m1[m, high=[31m8[m),[50;194H[K[50;194H131,31[8C94%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;9H[31m'n_estimators'[m: randint(low=[31m1[m, high=[31m200[m),[50;194H[K[50;194H130,31[8C93%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hparam_distribs = {[50;194H[K[50;194H129,31[8C93%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H128,0-1[7C92%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;5H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m scipy.stats [35mimport[m randint[3;18H[106m{[6;5H}[m[50;194H[K[50;194H127,5[9C91%[6;5H[?25h[?25l[50;184H~@k[6;5H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.model_selection [35mimport[m RandomizedSearchCV[4;18H{[7;5H}[50;194H[K[50;194H126,31[8C90%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.ensemble [35mimport[m RandomForestRegressor[50;194H[K[50;194H125,31[8C90%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;18H[1;49r[1;1H[L[1;50r[6;18H[106m{[9;5H}[m[50;194H[K[50;194H124,18[8C89%[6;18H[?25h[?25l[50;184H~@k[6;18H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;18H{[10;5H}[50;194H[K[50;194H123,0-1[7C88%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Htree_rmse[50;194H[K[50;194H122,31[8C87%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Htree_rmse = np.sqrt(tree_mse)[50;194H[K[50;194H121,31[8C87%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Htree_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H120,31[8C86%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hhousing_predictions = tree_reg.predict(housing_prepared)[50;194H[K[50;194H119,0-1[7C85%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H118,0-1[7C84%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;9H[1;49r[1;1H[L[1;50r[1;1Htree_reg.fit(housing_prepared, housing_labels)[50;194H[K[50;194H117,9[9C84%[6;9H[?25h[?25l[50;184H~@k[6;9H[50;184H   [6;29H[1;49r[1;1H[L[1;50r[1;1Htree_reg = DecisionTreeRegressor(random_state=[31m42[m)[6;20H[106m([8C)[m[50;194H[K[50;194H116,29[8C83%[6;29H[?25h[?25l[50;184H~@k[6;29H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[7;20H([8C)[50;194H[K[50;194H115,31[8C82%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.tree [35mimport[m DecisionTreeRegressor[50;194H[K[50;194H114,31[8C81%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H113,0-1[7C81%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H112,31[8C80%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hlin_mae[50;194H[K[50;194H111,31[8C79%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hlin_mae = mean_absolute_error(housing_labels, housing_predictions)[50;194H[K[50;194H110,0-1[7C78%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.metrics [35mimport[m mean_absolute_error[50;194H[K[50;194H109,31[8C78%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H108,0-1[7C77%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H107,0-1[7C76%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;7H[1;49r[1;1H[L[1;50r[1;1Hlin_rmse[50;194H[K[50;194H106,7[9C75%[6;7H[?25h[?25l[50;184H~@k[6;7H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hlin_rmse = np.sqrt(lin_mse)[50;194H[K[50;194H105,31[8C75%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hlin_mse = mean_squared_error(housing_labels, housing_predictions)[50;194H[K[50;194H104,31[8C74%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hhousing_predictions = lin_reg.predict(housing_prepared)[50;194H[K[50;194H103,0-1[7C73%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.metrics [35mimport[m mean_squared_error[50;194H[K[50;194H102,0-1[7C72%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;8H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H101,8[9C71%[6;8H[?25h[?25l[50;184H~@k[6;8H[50;184H   [6;27H[1;49r[1;1H[L[1;50r[1;1Hlin_reg.fit(housing_prepared, housing_labels)[6;19H[106m([7C)[m[50;194H[K[50;194H100,27[8C71%[6;27H[?25h[?25l[50;184H~@k[6;27H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hlin_reg = LinearRegression()[7;19H([7C)[50;194H[K[50;194H99,31[9C70%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H98,31[9C69%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.linear_model [35mimport[m LinearRegression[50;194H[K[50;194H97,31[9C68%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H96,0-1[8C68%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing_prepared = housing_tr.join(pd.get_dummies(housing_cat, drop_first=[36mTrue[m))[50;194H[K[50;194H95,31[9C67%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;28H[1;49r[1;1H[L[1;50r[1;1Hhousing_cat = housing[[[31m'ocean_proximity'[m]][6;27H[106m()[m[50;194H[K[50;194H94,28[9C66%[6;28H[?25h[?25l[50;184H~@k[6;28H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;27H()[50;194H[K[50;194H93,0-1[8C65%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing_tr[[31m"population_per_household"[m]=housing_tr[[31m"population"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H92,31[9C65%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hhousing_tr[[31m"bedrooms_per_room"[m] = housing_tr[[31m"total_bedrooms"[m]/housing_tr[[31m"total_rooms"[m][50;194H[K[50;194H91,0-1[8C64%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing_tr[[31m"rooms_per_household"[m] = housing_tr[[31m"total_rooms"[m]/housing_tr[[31m"households"[m][50;194H[K[50;194H90,31[9C63%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;27Hindex=housing.index)[50;194H[K[50;194H89,31[9C62%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hhousing_tr = pd.DataFrame(X, columns=housing_num.columns,[50;194H[K[50;194H88,0-1[8C62%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H87,31[9C61%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1HX = imputer.transform(housing_num)[6;11H[106m[[19C][m[50;194H[K[50;194H86,31[9C60%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Himputer.fit(housing_num)[7;11H[[19C][50;194H[K[50;194H85,31[9C59%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H84,31[9C59%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing_num = housing.drop([31m'ocean_proximity'[m, axis=[31m1[m)[50;194H[K[50;194H83,31[9C58%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H82,0-1[8C57%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Himputer = SimpleImputer(strategy=[31m"median"[m)[50;194H[K[50;194H81,31[9C56%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;24H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.impute [35mimport[m SimpleImputer[6;12H[106m([11C)[m[50;194H[K[50;194H80,24[9C56%[6;24H[?25h[?25l[50;184H~@k[6;24H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;12H([11C)[50;194H[K[50;194H79,0-1[8C55%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing_labels = strat_train_set[[31m"median_house_value"[m].copy()[50;194H[K[50;194H78,31[9C54%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hhousing = strat_train_set.drop([31m"median_house_value"[m, axis=[31m1[m) [34m# drop labels for training set[m[50;194H[K[50;194H77,0-1[8C53%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H76,31[9C53%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing[[31m"population_per_household"[m]=housing[[31m"population"[m]/housing[[31m"households"[m][50;194H[K[50;194H75,31[9C52%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hhousing[[31m"bedrooms_per_room"[m] = housing[[31m"total_bedrooms"[m]/housing[[31m"total_rooms"[m][50;194H[K[50;194H74,0-1[8C51%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing[[31m"rooms_per_household"[m] = housing[[31m"total_rooms"[m]/housing[[31m"households"[m][50;194H[K[50;194H73,31[9C50%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hcorr_matrix[[31m"median_house_value"[m].sort_values(ascending=[36mFalse[m)[6;31H[106m([28C)[m[50;194H[K[50;194H72,31[9C50%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hcorr_matrix = housing.corr()[7;31H([28C)[50;194H[K[50;194H71,0-1[8C49%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H70,31[9C48%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m, alpha=[31m0.1[m)[50;194H[K[50;194H69,31[9C47%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing.plot(kind=[31m"scatter"[m, x=[31m"longitude"[m, y=[31m"latitude"[m)[50;194H[K[50;194H68,31[9C46%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hhousing = strat_train_set.copy()[50;194H[K[50;194H67,31[9C46%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;28H[1;49r[1;1H[L[1;50r[6;27H[106m()[m[50;194H[K[50;194H66,28[9C45%[6;28H[?25h[?25l[50;184H~@k[6;28H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;5Hset_.drop([31m"income_cat"[m, axis=[31m1[m, inplace=[36mTrue[m)[7;27H()[50;194H[K[50;194H65,0-1[8C44%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[38;5;130mfor[m set_ [38;5;130min[m (strat_train_set, strat_test_set):[50;194H[K[50;194H64,31[9C43%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H63,31[9C43%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hcompare_props[[31m"Strat. %error"[m] = [31m100[m * compare_props[[31m"Stratified"[m] / compare_props[[31m"Overall"[m] - [31m100[m[6;31H[106m()[m[50;194H[K[50;194H62,31[9C42%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hcompare_props[[31m"Rand. %error"[m] = [31m100[m * compare_props[[31m"Random"[m] / compare_props[[31m"Overall"[m] - [31m100[m[7;31H()[50;194H[K[50;194H61,0-1[8C41%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H}).sort_index()[50;194H[K[50;194H60,31[9C40%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;5H[31m"Random"[m: income_cat_proportions(test_set),[50;194H[K[50;194H59,31[9C40%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;5H[31m"Stratified"[m: income_cat_proportions(strat_test_set),[50;194H[K[50;194H58,0-1[8C39%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;5H[31m"Overall"[m: income_cat_proportions(housing),[50;194H[K[50;194H57,31[9C38%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Hcompare_props = pd.DataFrame({[50;194H[K[50;194H56,31[9C37%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;15H[1;49r[1;1H[L[1;50r[6;14H[106m()[m[50;194H[K[50;194H55,15[9C37%[6;15H[?25h[?25l[50;184H~@k[6;15H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1Htrain_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)[7;14H()[50;194H[K[50;194H54,31[9C36%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H53,31[9C35%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;5H[38;5;130mreturn[m data[[31m"income_cat"[m].value_counts() / [36mlen[m(data)[50;194H[K[50;194H52,31[9C34%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;30H[1;49r[1;1H[L[1;50r[1;1H[38;5;130mdef[m [36mincome_cat_proportions[m(data):[6;30H[106m{[10;1H}[m[50;194H[K[50;194H51,30[9C34%[6;30H[?25h[?25l[50;184H~@k[6;30H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[7;30H{[11;1H}[50;194H[K[50;194H50,0-1[8C33%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H49,31[9C32%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;5Hstrat_test_set = housing.loc[test_index][50;194H[K[50;194H48,0-1[8C31%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;5Hstrat_train_set = housing.loc[train_index][50;194H[K[50;194H47,31[9C31%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[38;5;130mfor[m train_index, test_index [38;5;130min[m split.split(housing, housing[[31m"income_cat"[m]):[50;194H[K[50;194H46,31[9C30%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hsplit = StratifiedShuffleSplit(n_splits=[31m1[m, test_size=[31m0.2[m, random_state=[31m42[m)[50;194H[K[50;194H45,0-1[8C29%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H44,0-1[8C28%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.model_selection [35mimport[m StratifiedShuffleSplit[50;194H[K[50;194H43,31[9C28%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H42,31[9C27%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;32Hlabels=[[31m1[m, [31m2[m, [31m3[m, [31m4[m, [31m5[m])[50;194H[K[50;194H41,31[9C26%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;32Hbins=[[31m0.[m, [31m1.5[m, [31m3.0[m, [31m4.5[m, [31m6.[m, np.inf],[6;31H[106m([42C)[m[50;194H[K[50;194H40,31[9C25%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hhousing[[31m"income_cat"[m] = pd.cut(housing[[31m"median_income"[m],[7;31H([42C)[50;194H[K[50;194H39,0-1[8C25%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H38,31[9C24%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Htrain_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)[50;194H[K[50;194H37,0-1[8C23%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H36,31[9C22%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m sklearn.model_selection [35mimport[m train_test_split[50;194H[K[50;194H35,31[9C21%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[6;31H[106m([8;54H)[m[50;194H[K[50;194H34,31[9C21%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1Hhousing = load_housing_data[7;31H([9;54H)[50;194H[K[50;194H33,0-1[8C20%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;31H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H32,31[9C19%[6;31H[?25h[?25l[50;184H~@k[6;31H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;5H[38;5;130mreturn[m pd.read_csv(csv_path)[50;194H[K[50;194H31,0-1[8C18%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [7;31H[50;195H2,31 [7;31H[?25h[?25l[50;184H~@k[7;31H[50;184H   [7;32H[50;198H2[7;32H[?25h[?25l[50;184H~@k[7;32H[50;184H   [7;33H[50;198H3[7;33H[?25h[?25l[50;184H~@k[7;33H[50;184H   [7;34H[50;198H4[7;34H[?25h[?25l[50;184H~@k[7;34H[50;184H   [7;35H[50;198H5[7;35H[?25h[?25l[50;184H~@k[7;35H[50;184H   [7;36H[50;198H6[7;36H[?25h[?25l[50;184H~@k[7;36H[50;184H   [7;37H[50;198H7[7;37H[?25h[?25l[50;184H~@k[7;37H[50;184H   [7;38H[50;198H8[7;38H[?25h[?25l[50;184H~@k[7;38H[50;184H   [7;37H[50;198H7[7;37H[?25h[?25l[50;184H~@k[7;37H[50;184H   [7;36H[50;198H6[7;36H[?25h[?25l[50;184H~@k[7;36H[50;184H   [7;35H[50;198H5[7;35H[?25h[?25l[50;184H~@k[7;35H[50;184H   [7;36H[50;198H6[7;36H[?25h[?25l[50;184H~@k[7;36H[50;184H   [7;37H[50;198H7[7;37H[?25h[?25l[50;184H~@k[7;37H[50;184H   [7;38H[50;198H8[7;38H[?25h[?25l[50;184H~@k[7;38H[50;184H   [7;39H[106m([39C)[m[50;198H9[7;39H[?25h[?25l[50;184H~@k[7;39H[50;184H   [7;40H([39C)[50;197H40[7;40H[?25h[?25l[50;184H~@k[7;40H[50;184H   [7;41H[50;198H1[7;41H[?25h[?25l[50;184H~@k[7;41H[50;184H   [7;42H[50;198H2[7;42H[?25h[?25l[50;184H~@k[7;42H[50;184H   [7;43H[50;198H3[7;43H[?25h[?25l[50;184H~@k[7;43H[50;184H   [7;44H[50;198H4[7;44H[?25h[?25l[50;184H~@k[7;44H[50;184H   [7;45H[50;198H5[7;45H[?25h[?25l[50;184H~@k[7;45H[50;184H   [7;46H[50;198H6[7;46H[?25h[?25l[50;184H~@k[7;46H[50;184H   [7;45H[50;198H5[7;45H[?25h[?25l[50;184H~@k[7;45H[50;184H   [7;44H[50;198H4[7;44H[?25h[?25l[50;184H~@k[7;44H[50;184H   [7;43H[50;198H3[7;43H[?25h[?25l[50;184H~@k[7;43H[50;184H   [7;42H[50;198H2[7;42H[?25h[?25l[50;184H~@k[7;42H[50;184H   [7;41H[50;198H1[7;41H[?25h[?25l[50;184H~@k[7;41H[50;184H   [7;40H[50;198H0[7;40H[?25h[?25l[50;184H~@k[7;40H[50;184H   [7;39H[106m([39C)[m[50;197H39[7;39H[?25h[?25l[50;184H~@k[7;39H[50;184H   [6;1H[7;39H([39C)[50;195H1,0-1[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [7;39H[106m([39C)[m[50;195H2,39 [7;39H[?25h[?25l[50;184H~@k[7;39H[50;184H   [7;40H([39C)[50;197H40[7;40H[?25h[?25l[50;184H~@k[7;40H[50;184H   [7;41H[50;198H1[7;41H[?25h[?25l[50;184H~@k[7;41H[50;184H   [7;42H[50;198H2[7;42H[?25h[?25l[50;184H~@k[7;42H[50;184H   [7;43H[50;198H3[7;43H[?25h[?25l[50;184H~@k[7;43H[50;184H   [7;44H[50;198H4[7;44H[?25h[?25l[50;184H~@k[7;44H[50;184H   [7;45H[50;198H5[7;45H[?25h[?25l[50;184H~@k[7;45H[50;184H   [7;46H[50;198H6[7;46H[?25h[?25l[50;184H~@k[7;46H[50;184H   [7;47H[50;198H7[7;47H[?25h[?25l[50;184H~@k[7;47H[50;184H   [7;48H[50;198H8[7;48H[?25h[?25l[50;184H~@k[7;48H[50;184H   [7;49H[50;198H9[7;49H[?25h[?25l[50;184H~@k[7;49H[50;184H   [7;50H[50;197H50[7;50H[?25h[?25l[50;184H~@k[7;50H[50;184H   [7;51H[50;198H1[7;51H[?25h[?25l[50;184H~@k[7;51H[50;184H   [7;52H[50;198H2[7;52H[?25h[?25l[50;184H~@k[7;52H[50;184H   [7;53H[50;198H3[7;53H[?25h[?25l[50;184H~@k[7;53H[50;184H   [7;54H[50;198H4[7;54H[?25h[?25l[50;184H~@k[7;54H[50;184H   [7;55H[50;198H5[7;55H[?25h[?25l[50;184H~@k[7;55H[50;184H   [7;56H[50;198H6[7;56H[?25h[?25l[50;184H~@k[7;56H[50;184H   [7;57H[50;198H7[7;57H[?25h[?25l[50;184H~@k[7;57H[50;184H   [7;58H[50;198H8[7;58H[?25h[?25l[50;184H~@k[7;58H[50;184H   [7;59H[50;198H9[7;59H[?25h[?25l[50;184H~@k[7;59H[50;184H   [7;58H[50;198H8[7;58H[?25h[?25l[50;184H~@k[7;58H[50;184H   [7;57H[50;198H7[7;57H[?25h[?25l[50;184H~@k[7;57H[50;184H   [7;56H[50;198H6[7;56H[?25h[?25l[50;184H~@k[7;56H[50;184H   [7;55H[50;198H5[7;55H[?25h[?25l[50;184H~@k[7;55H[50;184H   [7;54H[50;198H4[7;54H[?25h[?25l[50;184H~@k[7;54H[50;184H   [7;53H[50;198H3[7;53H[?25h[?25l[50;184H~@k[7;53H[50;184H   [7;52H[50;198H2[7;52H[?25h[?25l[50;184H~@k[7;52H[50;184H   [7;51H[50;198H1[7;51H[?25h[?25l[50;184H~@k[7;51H[50;184H   [7;50H[50;198H0[7;50H[?25h[?25l[50;184H~@k[7;50H[50;184H   [6;1H[50;195H1,0-1[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;5Hcsv_path = os.path.join(housing_path, [31m"housing.csv"[m)[50;194H[K[50;194H30,50[9C18%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[38;5;130mdef[m [36mload_housing_data[m(housing_path=HOUSING_PATH):[50;194H[K[50;194H29,0-1[8C17%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;27H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H28,27[9C16%[6;27H[?25h[?25l[50;184H~@k[6;27H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m pandas [38;5;130mas[m pd[50;194H[K[50;194H27,0-1[8C15%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;32H[1;49r[1;1H[L[1;50r[6;23H[106m([8C)[m[50;194H[K[50;194H26,32[9C15%[6;32H[?25h[?25l[50;184H~@k[6;32H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;5Hhousing_tgz.close()[7;23H([8C)[50;194H[K[50;194H25,50[9C14%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;49H[1;49r[1;1H[L[1;50r[1;5Hhousing_tgz.extractall(path=housing_path)[50;194H[K[50;194H24,49[9C13%[6;49H[?25h[?25l[50;184H~@k[6;49H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;5Hhousing_tgz = tarfile.open(tgz_path)[50;194H[K[50;194H23,0-1[8C12%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;19H[1;49r[1;1H[L[1;50r[1;5Hurllib.request.urlretrieve(housing_url, tgz_path)[50;194H[K[50;194H22,19[9C12%[6;19H[?25h[?25l[50;184H~@k[6;19H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;5Htgz_path = os.path.join(housing_path, [31m"housing.tgz"[m)[50;194H[K[50;194H21,0-1[8C11%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;23H[1;49r[1;1H[L[1;50r[1;5Hos.makedirs(housing_path, exist_ok=[36mTrue[m)[6;22H[106m()[m[50;194H[K[50;194H20,23[9C10%[6;23H[?25h[?25l[50;184H~@k[6;23H[50;184H   [6;45H[1;49r[1;1H[L[1;50r[1;1H[38;5;130mdef[m [36mfetch_housing_data[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):[6;27H[106m([17C)[m[7;22H()[50;194H[K[50;194H19,45[10C9%[6;45H[?25h[?25l[50;184H~@k[6;45H[50;184H   [6;40H[1;49r[1;1H[L[1;50r[6;31H[106m([8C)[m[7;27H([17C)[50;194H[K[50;194H18,40[10C9%[6;40H[?25h[?25l[50;184H~@k[6;40H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;1HHOUSING_URL = DOWNLOAD_ROOT + [31m"datasets/housing/housing.tgz"[m[7;31H([8C)[50;194H[K[50;194H17,50[10C8%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [7;40H[7;31H[106m([8C)[m[50;195H8,4[7;40H[?25h[?25l[50;184H~@k[7;40H[50;184H   [8;45H[7;31H([8C)[8;27H[106m([17C)[m[50;195H9,45[8;45H[?25h[?25l[50;184H~@k[8;45H[50;184H   [9;23H[8;27H([17C)[9;22H[106m()[m[50;194H20,23[9;23H[?25h[?25l[50;184H~@k[9;23H[50;184H   [10;1H[9;22H()[50;195H1,0-1[10;1H[?25h[?25l[50;184H~@k[10;1H[50;184H   [11;19H[50;195H2,19 [11;19H[?25h[?25l[50;184H~@k[11;19H[50;184H   [12;1H[50;195H3,0-1[12;1H[?25h[?25l[50;184H~@k[12;1H[50;184H   [13;49H[50;195H4,49 [13;49H[?25h[?25l[50;184H~@k[13;49H[50;184H   [14;50H[50;195H5,50[14;50H[?25h[?25l[50;184H~@k[14;50H[50;184H   [15;32H[15;23H[106m([8C)[m[50;195H6,32[15;32H[?25h[?25l[50;184H~@k[15;32H[50;184H   [16;1H[15;23H([8C)[50;195H7,0-1[16;1H[?25h[?25l[50;184H~@k[16;1H[50;184H   [17;27H[50;195H8,27 [17;27H[?25h[?25l[50;184H~@k[17;27H[50;184H   [18;1H[50;195H9,0-1[18;1H[?25h[?25l[50;184H~@k[18;1H[50;184H   [19;50H[50;194H30,50 [19;50H[?25h[?25l[50;184H~@k[19;50H[50;184H   [18;1H[50;194H29,0-1[18;1H[?25h[?25l[50;184H~@k[18;1H[50;184H   [18;1H[?25h[?25l[50;184H~@k[18;1H[50;184H   [17;27H[50;195H8,27 [17;27H[?25h[?25l[50;184H~@k[17;27H[50;184H   [16;1H[50;195H7,0-1[16;1H[?25h[?25l[50;184H~@k[16;1H[50;184H   [15;32H[15;23H[106m([8C)[m[50;195H6,32 [15;32H[?25h[?25l[50;184H~@k[15;32H[50;184H   [14;50H[15;23H([8C)[50;195H5,50[14;50H[?25h[?25l[50;184H~@k[14;50H[50;184H   [13;49H[50;195H4,49[13;49H[?25h[?25l[50;184H~@k[13;49H[50;184H   [12;1H[50;195H3,0-1[12;1H[?25h[?25l[50;184H~@k[12;1H[50;184H   [11;19H[50;195H2,19 [11;19H[?25h[?25l[50;184H~@k[11;19H[50;184H   [10;1H[50;195H1,0-1[10;1H[?25h[?25l[50;184H~@k[10;1H[50;184H   [9;23H[106m()[m[50;195H0,23 [9;23H[?25h[?25l[50;184H~@k[9;23H[50;184H   [8;45H[8;27H[106m([17C)[m[9;22H()[50;194H19,45[8;45H[?25h[?25l[50;184H~@k[8;45H[50;184H   [7;40H[7;31H[106m([8C)[m[8;27H([17C)[50;195H8,40[7;40H[?25h[?25l[50;184H~@k[7;40H[50;184H   [6;50H[7;31H([8C)[50;195H7,5[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;1HHOUSING_PATH = os.path.join([31m"datasets"[m, [31m"housing"[m)[50;194H[K[50;194H16,50[10C7%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;44H[1;49r[1;1H[L[1;50r[1;1HDOWNLOAD_ROOT = [31m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[m[6;16H[106m([27C)[m[50;194H[K[50;194H15,44[10C6%[6;44H[?25h[?25l[50;184H~@k[6;44H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[7;16H([27C)[50;194H[K[50;194H14,50[10C6%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[50;194H[K[50;194H13,0-1[9C5%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;1H[35mfrom[m six.moves [35mimport[m urllib[50;194H[K[50;194H12,50[10C4%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m tarfile[6;28H[106m([21C)[m[50;194H[K[50;194H11,50[10C3%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;50H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m os[7;28H([21C)[50;194H[K[50;194H10,50[10C3%[6;50H[?25h[?25l[50;184H~@k[6;50H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m matplotlib.pyplot [38;5;130mas[m plt[50;194H[K[50;194H9,0-1[10C2%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;1H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m matplotlib [38;5;130mas[m mpl[50;194H[K[50;194H8,0-1[10C1%[6;1H[?25h[?25l[50;184H~@k[6;1H[50;184H   [6;28H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m pandas [38;5;130mas[m pd[50;194H[K[50;194H7,28[11C0%[6;28H[?25h[?25l[50;184H~@k[6;28H[50;184H   [6;14H[1;49r[1;1H[L[1;50r[1;1H[35mimport[m numpy [38;5;130mas[m np[50;194H[K[50;194H6,14[10CTop[6;14H[?25h[?25l[50;184H~@k[6;14H[50;184H   [5;9H[50;194H5,9 [5;9H[?25h[?25l[50;184H~@k[5;9H[50;184H   [4;31H[50;194H4,31[4;31H[?25h[?25l[50;184H~@k[4;31H[50;184H   [3;24H[50;194H3,24[3;24H[?25h[?25l[50;184H~@k[3;24H[50;184H   [2;19H[50;194H2,19[2;19H[?25h[?25l[50;184H~@k[2;19H[50;184H   [1;18H[50;194H1,18[1;18H[?25h[?25l[50;184H~@k[1;18H[50;184H   [1;18H[?25h[?25l[50;184H~@k[1;18H[50;184H   [1;18H[?25h[?25l[50;184H~@k[1;18H[50;184H   [1;18H[?25h[?25l[50;184H~@k[1;18H[50;184H   [1;18H[?25h[?25l[50;184H~@k[1;18H[50;184H   [2;19H[50;194H2,19[2;19H[?25h[?25l[50;184H~@k[2;19H[50;184H   [3;24H[50;194H3,24[3;24H[?25h[?25l[50;184H~@k[3;24H[50;184H   [4;31H[50;194H4,31[4;31H[?25h[?25l[50;184H~@k[4;31H[50;184H   [5;9H[50;194H5,9 [5;9H[?25h[?25l[50;184H~@k[5;9H[50;184H   [6;14H[50;194H6,14[6;14H[?25h[?25l[50;184H~@k[6;14H[50;184H   [7;28H[50;194H7,28[7;28H[?25h[?25l[50;184H~@k[7;28H[50;184H   [8;1H[50;194H8,0-1[8;1H[?25h[?25l[50;184H~@k[8;1H[50;184H   [9;1H[50;194H9[9;1H[?25h[?25l[50;184H~@k[9;1H[50;184H   [10;50H[50;194H10,50[10;50H[?25h[?25l[50;184H~@k[10;50H[50;184H   [11;50H[11;28H[106m([21C)[m[50;195H1[11;50H[?25h[?25l[50;184H~@k[11;50H[50;184H   [12;50H[11;28H([21C)[50;195H2[12;50H[?25h[?25l[50;184H~@k[12;50H[50;184H   [13;1H[50;195H3,0-1[13;1H[?25h[?25l[50;184H~@k[13;1H[50;184H   [14;50H[50;195H4,50 [14;50H[?25h[?25l[50;184H~@k[14;50H[50;184H   [15;44H[15;16H[106m([27C)[m[50;195H5,44[15;44H[?25h[?25l[50;184H~@k[15;44H[50;184H   [16;50H[15;16H([27C)[50;195H6,50[16;50H[?25h[?25l[50;184H~@k[16;50H[50;184H   [17;50H[50;195H7[17;50H[?25h[?25l[50;184H~@k[17;50H[50;184H   [18;40H[18;31H[106m([8C)[m[50;195H8,4[18;40H[?25h[?25l[50;184H~@k[18;40H[50;184H   [19;45H[18;31H([8C)[19;27H[106m([17C)[m[50;195H9,45[19;45H[?25h[?25l[50;184H~@k[19;45H[50;184H   [20;23H[19;27H([17C)[20;22H[106m()[m[50;194H20,23[20;23H[?25h[?25l[50;184H~@k[20;23H[50;184H   [21;1H[20;22H()[50;195H1,0-1[21;1H[?25h[?25l[50;184H~@k[21;1H[50;184H   [22;19H[50;195H2,19 [22;19H[?25h[?25l[50;184H~@k[22;19H[50;184H   [23;1H[50;195H3,0-1[23;1H[?25h[?25l[50;184H~@k[23;1H[50;184H   [24;49H[50;195H4,49 [24;49H[?25h[?25l[50;184H~@k[24;49H[50;184H   [25;50H[50;195H5,50[25;50H[?25h[?25l[50;184H~@k[25;50H[50;184H   [26;32H[26;23H[106m([8C)[m[50;195H6,32[26;32H[?25h[?25l[50;184H~@k[26;32H[50;184H   [27;1H[26;23H([8C)[50;195H7,0-1[27;1H[?25h[?25l[50;184H~@k[27;1H[50;184H   [28;27H[50;195H8,27 [28;27H[?25h[?25l[50;184H~@k[28;27H[50;184H   [28;27H[?25h[?25l[50;184Hi[28;27H[50;184H [28;27H[50;1H[1m-- INSERT --[m[50;194H[K[50;194H28,27[9CTop[28;27H[?25h[?25l[50;198H8[28;28H[?25h[?25l([50;198H9[28;29H[?25h[?25l)[106m()[m[50;197H30[28;30H[?25h[50;1H[K[28;29H[?25l[50;184H^[[28;29H[50;184H  [28;30H[50;194H28,29[9CTop[28;29H[?25h[?25l[50;184H:[28;29H[50;184H[K[50;1H:[?2004h[?25hwq[?25l[?2004l"nonstandardcode.py" 181L, 6910C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi nonstandardcode.py 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;50r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[50;1H"nonstandardcode.py" 181L, 6910C[2;1H▽[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35mimport[m numpy [38;5;130mas[m np
[35mimport[m pandas [38;5;130mas[m pd
[35mimport[m matplotlib [38;5;130mas[m mpl
[35mimport[m matplotlib.pyplot [38;5;130mas[m plt
[35mimport[m os
[35mimport[m tarfile
[35mfrom[m six.moves [35mimport[m urllib


DOWNLOAD_ROOT = [31m"https://raw.githubusercontent.com/ageron/handson-ml/master/"[m
HOUSING_PATH = os.path.join([31m"datasets"[m, [31m"housing"[m)
HOUSING_URL = DOWNLOAD_ROOT + [31m"datasets/housing/housing.tgz"[m

[38;5;130mdef[m [36mfetch_housing_data[m(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):
    os.makedirs(housing_path, exist_ok=[36mTrue[m)
    tgz_path = os.path.join(housing_path, [31m"housing.tgz"[m)
    urllib.request.urlretrieve(housing_url, tgz_path)
    housing_tgz = tarfile.open(tgz_path)
    housing_tgz.extractall(path=housing_path)
    housing_tgz.close()

[35mimport[m pandas [38;5;130mas[m pd

[38;5;130mdef[m [36mload_housing_data[m(housing_path=HOUSING_PATH):
    csv_path = os.path.join(housing_path, [31m"housing.csv"[m)
    [38;5;130mreturn[m pd.read_csv(csv_path)

housing = load_housing_data[106m()[m

[35mfrom[m sklearn.model_selection [35mimport[m train_test_split

train_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)

housing[[31m"income_cat"[m] = pd.cut(housing[[31m"median_income"[m],[35;32Hbins=[[31m0.[m, [31m1.5[m, [31m3.0[m, [31m4.5[m, [31m6.[m, np.inf],[36;32Hlabels=[[31m1[m, [31m2[m, [31m3[m, [31m4[m, [31m5[m])

[35mfrom[m sklearn.model_selection [35mimport[m StratifiedShuffleSplit

split = StratifiedShuffleSplit(n_splits=[31m1[m, test_size=[31m0.2[m, random_state=[31m42[m)
[38;5;130mfor[m train_index, test_index [38;5;130min[m split.split(housing, housing[[31m"income_cat"[m]):
    strat_train_set = housing.loc[train_index]
    strat_test_set = housing.loc[test_index]


[38;5;130mdef[m [36mincome_cat_proportions[m(data):
    [38;5;130mreturn[m data[[31m"income_cat"[m].value_counts() / [36mlen[m(data)

train_set, test_set = train_test_split(housing, test_size=[31m0.2[m, random_state=[31m42[m)[50;194H28,29[9CTop[28;29H[?25h[?25l[50;184H:[28;29H[50;1H[K[50;1H:[?2004h[?25hq[?25l[?2004l[23;2t[23;1t[50;1H[K[50;1H[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ vi nonstandardcode.py [2@pico[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2@ython[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
Traceback (most recent call last):
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 28, in <module>
    housing = load_housing_data()
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 26, in load_housing_data
    return pd.read_csv(csv_path)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/util/_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/parsers/readers.py", line 680, in read_csv
    return _read(filepath_or_buffer, kwds)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/parsers/readers.py", line 575, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/parsers/readers.py", line 933, in __init__
    self._engine = self._make_engine(f, self.engine)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/parsers/readers.py", line 1217, in _make_engine
    self.handles = get_handle(  # type: ignore[call-overload]
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/common.py", line 789, in get_handle
    handle = open(
FileNotFoundError: [Errno 2] No such file or directory: 'datasets/housing/housing.csv'
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ python nonstandardcode.py [C[1@3
Traceback (most recent call last):
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 28, in <module>
    housing = load_housing_data()
  File "/home/nitin/mle-training/mle-training/nonstandardcode.py", line 26, in load_housing_data
    return pd.read_csv(csv_path)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/util/_decorators.py", line 311, in wrapper
    return func(*args, **kwargs)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/parsers/readers.py", line 680, in read_csv
    return _read(filepath_or_buffer, kwds)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/parsers/readers.py", line 575, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/parsers/readers.py", line 933, in __init__
    self._engine = self._make_engine(f, self.engine)
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/parsers/readers.py", line 1217, in _make_engine
    self.handles = get_handle(  # type: ignore[call-overload]
  File "/home/nitin/miniconda3/envs/mle-dev/lib/python3.9/site-packages/pandas/io/common.py", line 789, in get_handle
    handle = open(
FileNotFoundError: [Errno 2] No such file or directory: 'datasets/housing/housing.csv'
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ pico Re[KEADME.md 
[?2004h[?1049h[22;0;0t[1;50r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[48;99H(B[0;7m[ Reading... ](B[m[48;98H(B[0;7m[ Read 2 lines ](B[m[H(B[0;7m  GNU nano 4.8                                                                                         README.md                                                                                                   [1;210H(B[m[49d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[49;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-Q(B[m Previous     (B[0;7m^B(B[m Back[49;188H(B[0;7m^◀(B[m Prev Word[50d(B[0;7m^X(B[m Exit[50;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Paste Text    (B[0;7m^T(B[m To Spell[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[50;120H(B[0;7mM-6(B[m Copy Text    (B[0;7m^Q(B[m Where Was     (B[0;7mM-W(B[m Next[50;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^▶(B[m Next Word[48d[2d[39;49m[36m# mle-training[3d[39m(B[mMLE Training[A[?12l[?25h[?25l[3d[?12l[?25h[?25lM[?12l[?25h[?25lL[?12l[?25h[?25lE[?12l[?25h[?25l [?12l[?25h[?25lT[?12l[?25h[?25lr[?12l[?25h[?25la[?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lg[?12l[?25h[?25l[1;202H(B[0;7mModified(B[m[3;12H [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[K[?12l[?25h[?25lT[48d[K[3dT[?12l[?25h[?25l[K[?12l[?25h[?25lR[?12l[?25h[?25lU[?12l[?25h[?25ln[?12l[?25h[?25l [?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lu[?12l[?25h[?25ln[?12l[?25h[?25l [?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ld[?12l[?25h[?25le[?12l[?25h[?25l [?12l[?25h[?25lu[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lg[?12l[?25h[?25l [?12l[?25h[?25lP[?12l[?25h[?25ly[?12l[?25h[?25lt[?12l[?25h[?25lh[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25l3[?12l[?25h[?25l [?12l[?25h[?25ln[?12l[?25h[?25lo[?12l[?25h[?25ln[?12l[?25h[?25ls[?12l[?25h[?25lt[?12l[?25h[?25la[?12l[?25h[?25ln[?12l[?25h[?25ld[?12l[?25h[?25la[?12l[?25h[?25lr[?12l[?25h[?25ld[?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25ld[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25lp[?12l[?25h[?25ly[?12l[?25h[?25l[4d[?12l[?25h[?25lT[?12l[?25h[?25lh[?12l[?25h[?25li[?12l[?25h[?25ls[?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25ll[?12l[?25h[?25ls[?12l[?25h[?25lo[?12l[?25h[?25l [?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25lq[?12l[?25h[?25lu[?12l[?25h[?25li[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25ld[?12l[?25h[?25l [?12l[?25h[?25lh[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25ls[?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lg[?12l[?25h[?25l.[?12l[?25h[?25lc[?12l[?25h[?25ls[?12l[?25h[?25lv[?12l[?25h[?25l [?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25l.[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25ls[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25l [?12l[?25h[?25la[?12l[?25h[?25ln[?12l[?25h[?25l [?12l[?25h[?25li[?12l[?25h[?25ln[?12l[?25h[?25lp[?12l[?25h[?25lu[?12l[?25h[?25lt[?12l[?25h[?25l.[?12l[?25h[?25l[48d(B[0;7mSave modified buffer?                                                                                                                                                                                              [49;1H Y(B[m Yes[K[50d(B[0;7m N(B[m No  [50;17H(B[0;7m^C(B[m Cancel[K[48;23H[?12l[?25h[?25l[49d(B[0;7m^G(B[m Get Help[49;53H(B[0;7mM-D(B[m DOS Format[49;105H(B[0;7mM-A(B[m Append[49;157H(B[0;7mM-B(B[m Backup File[50d(B[0;7m^C(B[m Cancel[17G         [50;53H(B[0;7mM-M(B[m Mac Format[50;105H(B[0;7mM-P(B[m Prepend[50;157H(B[0;7m^T(B[m To Files[48d(B[0;7mFile Name to Write: README.md(B[m[48;30H[?12l[?25h[?25l[48;98H[1K (B[0;7m[ Writing... ](B[m[K[1;202H(B[0;7m        (B[m[48;98H(B[0;7m[ Wrote 3 lines ](B[m[J[50d[?12l[?25h[50;1H[?1049l[23;0;0t[?1l>[?2004l(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git atat[K[K[K[Kstatus
On branch en/1/improve_code_quality
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   README.md[m
	[31mmodified:   nonstandardcode.py[m

no changes added to commit (use "git add" and/or "git commit -a")
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git statuspico README.md [12@ython3 nonstandardcode.py[C[1P[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pvi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2@pico[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2@ython[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pico[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@ython3[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[15@git push origin en/1/improve_code_qualit[C[Cls[Kgit statuscommit -am "add env.yml and updated .gitignore"[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"[1P"u"p"d"a"t"e"d" "R"e"a"d"m"e" "a"n"d" "n"o"n"s"t"a"n"d"a"r"."p"[1P"[1P"[1P"r"d"."p"y" "f"i"l"e"s"
[en/1/improve_code_quality 9d33778] updated Readme and nonstandard.py files
 2 files changed, 3 insertions(+), 2 deletions(-)
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git push a[Korigin main [K[K[K[K[Ken/1/improve_code_quality 
Enumerating objects: 7, done.
Counting objects:  14% (1/7)Counting objects:  28% (2/7)Counting objects:  42% (3/7)Counting objects:  57% (4/7)Counting objects:  71% (5/7)Counting objects:  85% (6/7)Counting objects: 100% (7/7)Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads
Compressing objects:  25% (1/4)Compressing objects:  50% (2/4)Compressing objects:  75% (3/4)Compressing objects: 100% (4/4)Compressing objects: 100% (4/4), done.
Writing objects:  25% (1/4)Writing objects:  50% (2/4)Writing objects:  75% (3/4)Writing objects: 100% (4/4)Writing objects: 100% (4/4), 460 bytes | 460.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/2)[Kremote: Resolving deltas:  50% (1/2)[Kremote: Resolving deltas: 100% (2/2)[Kremote: Resolving deltas: 100% (2/2), completed with 2 local objects.[K
To https://github.com/nitin-tiger/mle-training
   f904ecf..9d33778  en/1/improve_code_quality -> en/1/improve_code_quality
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ ls
LICENSE  README.md  env.yml  nonstandardcode.py
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ pico README.md 
[?2004h[?1049h[22;0;0t[1;50r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[48;99H(B[0;7m[ Reading... ](B[m[48;98H(B[0;7m[ Read 3 lines ](B[m[H(B[0;7m  GNU nano 4.8                                                                                         README.md                                                                                                   [1;210H(B[m[49d(B[0;7m^G(B[m Get Help[18G(B[0;7m^O(B[m Write Out     (B[0;7m^W(B[m Where Is[52G(B[0;7m^K(B[m Cut Text[69G(B[0;7m^J(B[m Justify[86G(B[0;7m^C(B[m Cur Pos[103G(B[0;7mM-U(B[m Undo[49;120H(B[0;7mM-A(B[m Mark Text    (B[0;7mM-](B[m To Bracket   (B[0;7mM-Q(B[m Previous     (B[0;7m^B(B[m Back[49;188H(B[0;7m^◀(B[m Prev Word[50d(B[0;7m^X(B[m Exit[50;18H(B[0;7m^R(B[m Read File     (B[0;7m^\(B[m Replace[52G(B[0;7m^U(B[m Paste Text    (B[0;7m^T(B[m To Spell[86G(B[0;7m^_(B[m Go To Line    (B[0;7mM-E(B[m Redo[50;120H(B[0;7mM-6(B[m Copy Text    (B[0;7m^Q(B[m Where Was     (B[0;7mM-W(B[m Next[50;171H(B[0;7m^F(B[m Forward[188G(B[0;7m^▶(B[m Next Word[48d[2d[39;49m[36m# mle-training[3d[39m(B[mRun the code using Python3 nonstandardcode.py[4dThis also required housing.csv file as an input.[2d[?12l[?25h[?25l[3d[?12l[?25h[?25l[4d[?12l[?25h[?25l[5d[?12l[?25h[?25l[1;202H(B[0;7mModified(B[m[5d[36m# Median housi[39m(B[m[?12l[?25h[?25l[36mng value prediction[7d[39m(B[mThe housin[48d[K[7;11H[?12l[?25h[?25lg data can be do[?12l[?25h[?25lwnloaded[?12l[?25h[?25l from https://r[?12l[?25h[?25law.githu[?12l[?25h[?25lbusercontent.com[?12l[?25h[?25l/ageron/[?12l[?25h[?25lhandson-[?12l[?25h[?25lml/master/. The[?12l[?25h[?25l script [?12l[?25h[?25lhas code[?12l[?25h[?25ls to dow[?12l[?25h[?25lnload the data. [?12l[?25h[?25lWe have[?12l[?25h[?25l modelle[?12l[?25h[?25ld the median hou[?12l[?25h[?25lse value[?12l[?25h[?25l on give[?12l[?25h[?25ln housin[?12l[?25h[?25lg data. [?12l[?25h[?25l[9dThe following[?12l[?25h[?25l techniques have[?12l[?25h[?25l been us[?12l[?25h[?25led:[11d [?12l[?25h[?25l- Linear regression[12d - [?12l[?25h[?25lDecision Tree[13d[?12l[?25h[?25l - Random Fore[?12l[?25h[?25lst[15d[36m##[39m(B[m[?12l[?25h[?25l[36m Steps performe[39m(B[m[?12l[?25h[?25l[36md[16;2H[39m(B[m- We[?12l[?25h[?25l prepare and cle[?12l[?25h[?25lan the d[?12l[?25h[?25lata. We[?12l[?25h[?25l check a[?12l[?25h[?25lnd imput[?12l[?25h[?25le for mi[?12l[?25h[?25lssing va[?12l[?25h[?25llues.[17d -[?12l[?25h[?25l Features are g[?12l[?25h[?25lenerated[?12l[?25h[?25l and the[?12l[?25h[?25l variabl[?12l[?25h[?25les are checked f[?12l[?25h[?25lor corre[?12l[?25h[?25llation.[18d[?12l[?25h[?25l - Mult[?12l[?25h[?25liple sampling te[?12l[?25h[?25lchinuqie[?12l[?25h[?25ls are ev[?12l[?25h[?25laluated. The da[?12l[?25h[?25lta set i[?12l[?25h[?25ls split [?12l[?25h[?25linto tra[?12l[?25h[?25lin and t[?12l[?25h[?25lest.[19d - [?12l[?25h[?25lAll the[?12l[?25h[?25l above s[?12l[?25h[?25laid mode[?12l[?25h[?25llling techniques[?12l[?25h[?25l are tri[?12l[?25h[?25led and e[?12l[?25h[?25lvaluated[?12l[?25h[?25l. The f[?12l[?25h[?25linal met[?12l[?25h[?25lric used[?12l[?25h[?25l to eval[?12l[?25h[?25luate is [?12l[?25h[?25lmean squared err[?12l[?25h[?25lor.[21d[36m##[39m(B[m[?12l[?25h[?25l[36m To excute the script[22d[39m(B[m[?12l[?25h[?25lpython <[?12l[?25h[?25l script[?12l[?25h[?25lname.py [?12l[?25h[?25l>[?12l[?25h[?25l[48d(B[0;7mSave modified buffer?                                                                                                                                                                                              [49;1H Y(B[m Yes[K[50d(B[0;7m N(B[m No  [50;17H(B[0;7m^C(B[m Cancel[K[48;23H[?12l[?25h[?25l[49d(B[0;7m^G(B[m Get Help[49;53H(B[0;7mM-D(B[m DOS Format[49;105H(B[0;7mM-A(B[m Append[49;157H(B[0;7mM-B(B[m Backup File[50d(B[0;7m^C(B[m Cancel[17G         [50;53H(B[0;7mM-M(B[m Mac Format[50;105H(B[0;7mM-P(B[m Prepend[50;157H(B[0;7m^T(B[m To Files[48d(B[0;7mFile Name to Write: README.md(B[m[48;30H[?12l[?25h[?25l[48;98H[1K (B[0;7m[ Writing... ](B[m[K[1;202H(B[0;7m        (B[m[48;97H(B[0;7m[ Wrote 21 lines ](B[m[J[50d[?12l[?25h[50;1H[?1049l[23;0;0t[?1l>[?2004l(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git status
On branch en/1/improve_code_quality
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mmodified:   README.md[m

no changes added to commit (use "git add" and/or "git commit -a")
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git statuspico README.md ls[Kgit push origin en/1/improve_code_quality commit -am "updated Readme and nonstandard.py files"
[en/1/improve_code_quality 59f631c] updated Readme and nonstandard.py files
 1 file changed, 18 insertions(+)
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ git commit -am "updated Readme and nonstandard.py files"status[Kpico README.md ls[Kgit push origin en/1/improve_code_quality commit -am "updated Readme and nonstandard.py files"[14Ppush origin en/1/improve_code_quality 
Enumerating objects: 5, done.
Counting objects:  20% (1/5)Counting objects:  40% (2/5)Counting objects:  60% (3/5)Counting objects:  80% (4/5)Counting objects: 100% (5/5)Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects:  33% (1/3)Compressing objects:  66% (2/3)Compressing objects: 100% (3/3)Compressing objects: 100% (3/3), done.
Writing objects:  33% (1/3)Writing objects:  66% (2/3)Writing objects: 100% (3/3)Writing objects: 100% (3/3), 777 bytes | 777.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas:   0% (0/1)[Kremote: Resolving deltas: 100% (1/1)[Kremote: Resolving deltas: 100% (1/1), completed with 1 local object.[K
To https://github.com/nitin-tiger/mle-training
   9d33778..59f631c  en/1/improve_code_quality -> en/1/improve_code_quality
(mle-dev) ]0;nitin@US-Nitin: ~/mle-training/mle-training[01;32mnitin@US-Nitin[00m:[01;34m~/mle-training/mle-training[00m$ exit
exit

Script done on 2022-02-17 16:55:35-06:00 [COMMAND_EXIT_CODE="0"]
